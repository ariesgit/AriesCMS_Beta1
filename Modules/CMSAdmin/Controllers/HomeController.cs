
#region Copyright
// 
// Aries TCO, Inc.® - http://www.ariestco.com
// Copyright (c) 2002-2014
// by Aries TCO, Inc.
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated 
// documentation files (the "Software"), to deal in the Software without restriction, including without limitation 
// the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and 
// to permit persons to whom the Software is furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all copies or substantial portions 
// of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED 
// TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL 
// THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF 
// CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
// DEALINGS IN THE SOFTWARE.
#endregion




using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using System.IO;
using System.Data;
using System.Web.Script.Serialization;
using Newtonsoft.Json;
using AriesGlobal;
using AriesDBConnector;
using AriesDBManager;
using AriesCMSInteractions;
using AriesCMSDefinition;
using ACMSDBView;

namespace AriesCMS.Modules.CMSAdmin.Controllers
{
    public partial class HomeController : Controller
    {
        ACMSDBView.WebSitePageViewModel oPage = new WebSitePageViewModel();
        //
        // GET: /Default/
        string sModuleBase = "~/Modules/CMSAdmin";
        string sBasePage = "/Views/Screens/Index.cshtml";
        string _sViewToLoad = "";
        AriesCMS.Helpers.SiteCoreHelper oSystem = new Helpers.SiteCoreHelper();
        int[] iAccessRolesAllowed = new int[1] { 1 };




        public void Set_ViewBag_UserInfo()
        {
            try
            {
                ViewBag.iSiteID = oSystem.rsGlobalVeriables.SiteID;
                ViewBag.User_UserName = oSystem.CurrentUser.UserView.User.sUserName;


                if (oSystem.CurrentUser.AuthenticatedUser == true)
                {
                    ViewBag.bLoggedIn = oSystem.CurrentUser.UserView.UserLoggedIn;
                    ViewBag.User_UserName = oSystem.CurrentUser.UserView.User.sUserName;
                    ViewBag.client_userid = oSystem.CurrentUser.UserView.User.ID;

                    ViewBag.client_username = oSystem.CurrentUser.UserView.User.sUserName;
                    ViewBag.client_firstname = oSystem.CurrentUser.UserView.User.sFName;
                    ViewBag.client_lastname = oSystem.CurrentUser.UserView.User.sLName;
                    ViewBag.client_userisloggedin = "true";

                    oSystem.SetValue_SiteDynamics("client_userisloggedin", "true");
                    oSystem.SetValue_SiteDynamics("client_useride", oSystem.CurrentUser.UserView.User.ID.ToString());
                    oSystem.SetValue_SiteDynamics("client_username", oSystem.CurrentUser.UserView.User.sUserName);
                    oSystem.SetValue_SiteDynamics("client_firstname", oSystem.CurrentUser.UserView.User.sFName);
                    oSystem.SetValue_SiteDynamics("client_lastname", oSystem.CurrentUser.UserView.User.sLName);

                    if (oSystem.CurrentUser.UserView.User.iPrimaryRole <= 1)
                    {
                        oSystem.SetValue_SiteDynamics("client_LogInUrl", HttpContext.Request.Url.Scheme + "://" + HttpContext.Request.Url.Authority + "/" + "admin");
                        ViewBag.client_LogInUrl = HttpContext.Request.Url.Scheme + "://" + HttpContext.Request.Url.Authority + "/" + "admin";
                    }
                    else
                    {
                        oSystem.SetValue_SiteDynamics("client_LogInUrl", HttpContext.Request.Url.Scheme + "://" + HttpContext.Request.Url.Authority + "/" + "portal");
                        ViewBag.client_LogInUrl = HttpContext.Request.Url.Scheme + "://" + HttpContext.Request.Url.Authority + "/" + "portal";
                    }
                }
                else
                {
                    ViewBag.bLoggedIn = false;

                    ViewBag.client_username = "Guest";
                    ViewBag.client_firstname = " ";
                    ViewBag.client_lastname = " ";
                    ViewBag.client_userisloggedin = "false";
                    ViewBag.client_userid = "0";

                    oSystem.SetValue_SiteDynamics("client_userisloggedin", "false");
                    oSystem.SetValue_SiteDynamics("client_useride", "0");
                    oSystem.SetValue_SiteDynamics("client_username", " ");
                    oSystem.SetValue_SiteDynamics("client_firstname", " ");
                    oSystem.SetValue_SiteDynamics("client_lastname", " ");
                    oSystem.SetValue_SiteDynamics("client_LogInUrl", HttpContext.Request.Url.Scheme + "://" + HttpContext.Request.Url.Authority + "/");
                    ViewBag.client_LogInUrl = HttpContext.Request.Url.Scheme + "://" + HttpContext.Request.Url.Authority + "/";

                }
                Set_CustomViewBag_UserInfo();
            }
            catch
            {
            }
        }
        public void Set_ViewBag_UserInfo_Defaults()
        {
            try
            {
                ViewBag.bLoggedIn = false;

                ViewBag.client_username = "Guest";
                ViewBag.client_firstname = " ";
                ViewBag.client_lastname = " ";
                ViewBag.client_userisloggedin = "false";
                ViewBag.client_userid = "0";

                oSystem.SetValue_SiteDynamics("client_userisloggedin", "false");
                oSystem.SetValue_SiteDynamics("client_useride", "0");
                oSystem.SetValue_SiteDynamics("client_username", " ");
                oSystem.SetValue_SiteDynamics("client_firstname", " ");
                oSystem.SetValue_SiteDynamics("client_lastname", " ");
                oSystem.SetValue_SiteDynamics("client_LogInUrl", HttpContext.Request.Url.Scheme + "://" + HttpContext.Request.Url.Authority + "/");
                ViewBag.client_LogInUrl = HttpContext.Request.Url.Scheme + "://" + HttpContext.Request.Url.Authority + "/";

                Set_CustomViewBag_UserInfo_Defaults();
            }
            catch
            {
            }
        }

        public void Set_ViewBag_Global()
        {
            try
            {
                ViewBag.iSiteID = oSystem.rsGlobalVeriables.SiteID;
                ViewBag.sPageViewsByMonth = "0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0";
                ViewBag.sPagesViewedByMonth = "";

                ViewBag.sSiteVisits = "0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0";
                ViewBag.MasterLayout = oSystem.rsGlobalVeriables.MasterDefaultLayout;

                Set_CustomViewBag_Global();
            }
            catch
            {
            }
        }
        public void Set_ViewBag_Global_Defaults()
        {
            try
            {
                ViewBag.iSiteID = oSystem.rsGlobalVeriables.SiteID;
                ViewBag.sPageViewsByMonth = "0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0";
                ViewBag.sPagesViewedByMonth = "";

                ViewBag.sSiteVisits = "0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0";
                ViewBag.MasterLayout = oSystem.rsGlobalVeriables.MasterDefaultLayout;

                Set_CustomViewBag_Global_Defaults();
            }
            catch
            {
            }
        }


        public void Set_Client_NavSettings(string _Function)
        {
            try
            {
                string sPanel_Dashboard = "0";
                string sPanel_ContentManagement = "1";
                string sPanel_Reports = "2";
                string sPanel_Blogging = "3";
                string sPanel_Appearance = "4";
                string sPanel_SystemManagement = "5";


                if (!String.IsNullOrEmpty(_Function))
                {
                    switch (_Function)
                    {
                        #region defaul nav
                        case "Index":
                            Session["_NavNodeIndex"] = sPanel_Dashboard;
                            ViewBag.iActiveNode = sPanel_Dashboard;
                            break;
                        case "AdminTestRegistration":
                            Session["_NavNodeIndex"] = sPanel_Dashboard;
                            ViewBag.iActiveNode = sPanel_Dashboard;
                            break;
                        case "UserLogIn":
                            Session["_NavNodeIndex"] = sPanel_Dashboard;
                            ViewBag.iActiveNode = sPanel_Dashboard;
                            break;
                        case "UserLogOff":
                            Session["_NavNodeIndex"] = sPanel_Dashboard;
                            ViewBag.iActiveNode = sPanel_Dashboard;
                            break;
                        case "EditMyProfile":
                            Session["_NavNodeIndex"] = sPanel_Dashboard;
                            ViewBag.iActiveNode = sPanel_Dashboard;
                            break;
                        case "ProfileUpdate":
                            Session["_NavNodeIndex"] = sPanel_Dashboard;
                            ViewBag.iActiveNode = sPanel_Dashboard;
                            break;
                        case "FilesManager_ListPop":
                            Session["_NavNodeIndex"] = sPanel_Appearance;
                            ViewBag.iActiveNode = sPanel_Appearance;
                            break;
                        case "FilesManager_List":
                            Session["_NavNodeIndex"] = sPanel_Appearance;
                            ViewBag.iActiveNode = sPanel_Appearance;
                            break;
                        case "UploadFiles":
                            Session["_NavNodeIndex"] = sPanel_Appearance;
                            ViewBag.iActiveNode = sPanel_Appearance;
                            break;
                        case "GetDirectoryFilesView":
                            Session["_NavNodeIndex"] = sPanel_Appearance;
                            ViewBag.iActiveNode = sPanel_Appearance;
                            break;
                        case "Countries_List":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "Countries_Details":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "Countries_Create":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "Countries_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "Countries_Delete":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "CountryLanguages_List":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "CountryLanguages_Details":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "CountryLanguages_Create":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "CountryLanguages_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "CountryLanguages_Delete":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "Roles_List":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "Roles_Details":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "Roles_Create":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "Roles_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "Roles_Delete":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "States_List":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "States_Details":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "States_Create":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "States_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "States_Delete":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "SystemMaster_List":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "SystemMaster_Details":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "SystemMaster_Create":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "SystemMaster_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "SystemMaster_Delete":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "SystemModules_List":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "SystemModules_Details":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "SystemModules_Create":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "SystemModules_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "SystemModules_Delete":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "UserRoles_List":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "UserRoles_Details":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "UserRoles_Create":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "UserRoles_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "UserRoles_Delete":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "Users_List":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "Users_Details":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "Users_Create":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "Users_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "Users_Delete":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "UsersAltAuth_List":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "UsersAltAuth_Details":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "UsersAltAuth_Create":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "UsersAltAuth_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "UsersAltAuth_Delete":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "UsersProperties_List":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "UsersProperties_Details":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "UsersProperties_Create":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "UsersProperties_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "UsersProperties_Delete":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSite_List":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSite_Details":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSite_Create":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSite_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSite_Delete":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteBlog_List":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlog_Details":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlog_Create":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlog_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlog_Delete":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogComments_List":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogComments_Details":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogComments_Create":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogComments_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogComments_Delete":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogCommentsProperties_List":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogCommentsProperties_Details":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogCommentsProperties_Create":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogCommentsProperties_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogCommentsProperties_Delete":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogEntry_List":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogEntry_Details":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogEntry_Create":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogEntry_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogEntry_Delete":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogEntryProperties_List":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogEntryProperties_Details":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogEntryProperties_Create":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogEntryProperties_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogEntryProperties_Delete":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogProperties_List":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogProperties_Details":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogProperties_Create":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogProperties_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogProperties_Delete":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteEvents_List":
                            Session["_NavNodeIndex"] = sPanel_Reports;
                            ViewBag.iActiveNode = sPanel_Reports;
                            break;
                        case "WebSiteEvents_Details":
                            Session["_NavNodeIndex"] = sPanel_Reports;
                            ViewBag.iActiveNode = sPanel_Reports;
                            break;
                        case "WebSiteEvents_Create":
                            Session["_NavNodeIndex"] = sPanel_Reports;
                            ViewBag.iActiveNode = sPanel_Reports;
                            break;
                        case "WebSiteEvents_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_Reports;
                            ViewBag.iActiveNode = sPanel_Reports;
                            break;
                        case "WebSiteEvents_Delete":
                            Session["_NavNodeIndex"] = sPanel_Reports;
                            ViewBag.iActiveNode = sPanel_Reports;
                            break;
                        case "WebSiteExtAppIntegrationSettings_List":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteExtAppIntegrationSettings_Details":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteExtAppIntegrationSettings_Create":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteExtAppIntegrationSettings_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteExtAppIntegrationSettings_Delete":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteModules_List":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteModules_Details":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteModules_Create":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteModules_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteModules_Delete":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteNavigation_List":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSiteNavigation_Details":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSiteNavigation_Create":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSiteNavigation_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSiteNavigation_Delete":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSitePage_List":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSitePage_Details":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSitePage_Create":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSitePage_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSitePage_Delete":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSitePageProperties_List":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSitePageProperties_Details":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSitePageProperties_Create":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSitePageProperties_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSitePageProperties_Delete":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSitePageRoles_List":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSitePageRoles_Details":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSitePageRoles_Create":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSitePageRoles_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSitePageRoles_Delete":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSitePageTemplates_List":
                            Session["_NavNodeIndex"] = sPanel_Appearance;
                            ViewBag.iActiveNode = sPanel_Appearance;
                            break;
                        case "WebSitePageTemplates_Details":
                            Session["_NavNodeIndex"] = sPanel_Appearance;
                            ViewBag.iActiveNode = sPanel_Appearance;
                            break;
                        case "WebSitePageTemplates_Create":
                            Session["_NavNodeIndex"] = sPanel_Appearance;
                            ViewBag.iActiveNode = sPanel_Appearance;
                            break;
                        case "WebSitePageTemplates_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_Appearance;
                            ViewBag.iActiveNode = sPanel_Appearance;
                            break;
                        case "WebSitePageTemplates_Delete":
                            Session["_NavNodeIndex"] = sPanel_Appearance;
                            ViewBag.iActiveNode = sPanel_Appearance;
                            break;
                        case "WebSitePageTemplatesPage_List":
                            Session["_NavNodeIndex"] = sPanel_Appearance;
                            ViewBag.iActiveNode = sPanel_Appearance;
                            break;
                        case "WebSitePageTemplatesPage_Details":
                            Session["_NavNodeIndex"] = sPanel_Appearance;
                            ViewBag.iActiveNode = sPanel_Appearance;
                            break;
                        case "WebSitePageTemplatesPage_Create":
                            Session["_NavNodeIndex"] = sPanel_Appearance;
                            ViewBag.iActiveNode = sPanel_Appearance;
                            break;
                        case "WebSitePageTemplatesPage_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_Appearance;
                            ViewBag.iActiveNode = sPanel_Appearance;
                            break;
                        case "WebSitePageTemplatesPage_Delete":
                            Session["_NavNodeIndex"] = sPanel_Appearance;
                            ViewBag.iActiveNode = sPanel_Appearance;
                            break;
                        case "WebSitePageTemplateZones_List":
                            Session["_NavNodeIndex"] = sPanel_Appearance;
                            ViewBag.iActiveNode = sPanel_Appearance;
                            break;
                        case "WebSitePageTemplateZones_Details":
                            Session["_NavNodeIndex"] = sPanel_Appearance;
                            ViewBag.iActiveNode = sPanel_Appearance;
                            break;
                        case "WebSitePageTemplateZones_Create":
                            Session["_NavNodeIndex"] = sPanel_Appearance;
                            ViewBag.iActiveNode = sPanel_Appearance;
                            break;
                        case "WebSitePageTemplateZones_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_Appearance;
                            ViewBag.iActiveNode = sPanel_Appearance;
                            break;
                        case "WebSitePageTemplateZones_Delete":
                            Session["_NavNodeIndex"] = sPanel_Appearance;
                            ViewBag.iActiveNode = sPanel_Appearance;
                            break;
                        case "WebSitePageZoneContent_List":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSitePageZoneContent_Details":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSitePageZoneContent_Create":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSitePageZoneContent_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSitePageZoneContent_Delete":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSiteProperties_List":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteProperties_Details":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteProperties_Create":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteProperties_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteProperties_Delete":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteScreenRoles_List":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteScreenRoles_Details":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteScreenRoles_Create":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteScreenRoles_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteScreenRoles_Delete":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteScreen_List":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteScreen_Details":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteScreen_Create":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteScreen_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteScreen_Delete":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteRole_List":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteRole_Details":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteRole_Create":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteRole_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteRole_Delete":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteNavigationRoles_List":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSiteNavigationRoles_Details":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSiteNavigationRoles_Create":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSiteNavigationRoles_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSiteNavigationRoles_Delete":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSiteBlogRoles_List":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogRoles_Details":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogRoles_Create":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogRoles_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogRoles_Delete":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogEntryRole_List":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogEntryRole_Details":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogEntryRole_Create":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogEntryRole_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSiteBlogEntryRole_Delete":
                            Session["_NavNodeIndex"] = sPanel_Blogging;
                            ViewBag.iActiveNode = sPanel_Blogging;
                            break;
                        case "WebSitePageZone_List":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSitePageZone_Details":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSitePageZone_Create":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSitePageZone_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSitePageZone_Delete":
                            Session["_NavNodeIndex"] = sPanel_ContentManagement;
                            ViewBag.iActiveNode = sPanel_ContentManagement;
                            break;
                        case "WebSitePageTemplateZonesContent_List":
                            Session["_NavNodeIndex"] = sPanel_Appearance;
                            ViewBag.iActiveNode = sPanel_Appearance;
                            break;
                        case "WebSitePageTemplateZonesContent_Details":
                            Session["_NavNodeIndex"] = sPanel_Appearance;
                            ViewBag.iActiveNode = sPanel_Appearance;
                            break;
                        case "WebSitePageTemplateZonesContent_Create":
                            Session["_NavNodeIndex"] = sPanel_Appearance;
                            ViewBag.iActiveNode = sPanel_Appearance;
                            break;
                        case "WebSitePageTemplateZonesContent_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_Appearance;
                            ViewBag.iActiveNode = sPanel_Appearance;
                            break;
                        case "WebSitePageTemplateZonesContent_Delete":
                            Session["_NavNodeIndex"] = sPanel_Appearance;
                            ViewBag.iActiveNode = sPanel_Appearance;
                            break;
                        case "Roles_Access_List":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "Roles_Access_Details":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "Roles_Access_Create":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "Roles_Access_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "Roles_Access_Delete":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteIPFilters_List":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteIPFilters_Details":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteIPFilters_Create":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteIPFilters_AddUpdate":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "WebSiteIPFilters_Delete":
                            Session["_NavNodeIndex"] = sPanel_SystemManagement;
                            ViewBag.iActiveNode = sPanel_SystemManagement;
                            break;
                        case "ReportOverview":
                            Session["_NavNodeIndex"] = sPanel_Reports;
                            ViewBag.iActiveNode = sPanel_Reports;
                            break;
                        case "ReportRefferalURLs":
                            Session["_NavNodeIndex"] = sPanel_Reports;
                            ViewBag.iActiveNode = sPanel_Reports;
                            break;
                        case "ReportRptSiteVisitors":
                            Session["_NavNodeIndex"] = sPanel_Reports;
                            ViewBag.iActiveNode = sPanel_Reports;
                            break;
                        case "ReportRptHitStatistics":
                            Session["_NavNodeIndex"] = sPanel_Reports;
                            ViewBag.iActiveNode = sPanel_Reports;
                            break;
                        #endregion
                        default:
                            Session["_NavNodeIndex"] = sPanel_Dashboard;
                            ViewBag.iActiveNode = sPanel_Dashboard;
                            break;
                    }

                    Set_CustomClient_NavSettings(_Function);
                }
            }
            catch
            {

            }
        }


        public ActionResult Index()
        {
            Set_Client_NavSettings("Index");
            Set_ViewBag_UserInfo_Defaults();
            Set_ViewBag_Global_Defaults();

            oSystem.OpenDataConnection();
            if (oSystem.IsIPAllowed_ByConfig(oSystem.VisitorHTTPValues.VisitorIPAddress()))
            {
                if (oSystem.GetCurrentUser())
                {
                    if (oSystem.CurrentUser != null)
                    {

                        if (oSystem.CurrentUser.UserView.UserLoggedIn == true)
                        {
                            if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                            {
                                Set_ViewBag_UserInfo();
                                oPage.DataModelsPrimary = oSystem;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = "~/Modules/CMSAdmin/Views/Dashboard/AdminDashboard.cshtml";
                            }
                            else
                            {
                                ACMSDBView.UserAuthentication oUserAuth = new ACMSDBView.UserAuthentication();
                                oPage.DataModelsPrimary = oUserAuth;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = false;
                                oPage.PartialViewToLoad = "~/Modules/CMSAdmin/Views/Authentication/UserLogIn.cshtml";
                            }
                        }
                        else
                        {
                            ACMSDBView.UserAuthentication oUserAuth = new ACMSDBView.UserAuthentication();
                            oPage.DataModelsPrimary = oUserAuth;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = false;
                            oPage.PartialViewToLoad = "~/Modules/CMSAdmin/Views/Authentication/UserLogIn.cshtml";
                        }
                    }
                    else
                    {
                        ACMSDBView.UserAuthentication oUserAuth = new ACMSDBView.UserAuthentication();
                        oPage.DataModelsPrimary = oUserAuth;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = false;
                        oPage.PartialViewToLoad = "~/Modules/CMSAdmin/Views/Authentication/UserLogIn.cshtml";
                    }
                }
                else
                {
                    ACMSDBView.UserAuthentication oUserAuth = new ACMSDBView.UserAuthentication();
                    oPage.DataModelsPrimary = oUserAuth;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = false;
                    oPage.PartialViewToLoad = "~/Modules/CMSAdmin/Views/Authentication/UserLogIn.cshtml";
                }
                oSystem.CloseDataConnection();//Forms
            }
            else
            {
                oSystem.CloseDataConnection();
                return Redirect("~/");
            }
            return View(sModuleBase + sBasePage, oPage);
        }


        [HttpPost]
        public ActionResult UserLogIn(ACMSDBView.UserAuthentication oUserAuth)
        {
            Set_Client_NavSettings("UserLogIn");
            Set_ViewBag_UserInfo_Defaults();
            Set_ViewBag_Global_Defaults();
            if (oUserAuth != null)
            {
                if (!String.IsNullOrEmpty(oUserAuth.UserName))
                {
                    if (!String.IsNullOrEmpty(oUserAuth.Password))
                    {
                        oSystem.OpenDataConnection();

                        if (oSystem.IsIPAllowed_ByConfig(oSystem.VisitorHTTPValues.VisitorIPAddress()))
                        {
                            if (oSystem.cnCon.ConnectionStatus == ConnectionStatusTypes.Open)
                            {
                                oSystem.CurrentUser = new ACMSUser.UserSecurity(oSystem.cnCon);
                                if (oSystem.CurrentUser.LogIn(oUserAuth, oSystem.rsGlobalVeriables))
                                {
                                    if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                                    {
                                        if (oUserAuth.SaveLogIn)
                                        {
                                            oSystem.SaveLogIn();
                                        }
                                        oSystem.SetCurrentUser();
                                        oSystem.SetUserLoggedIn();
                                        oUserAuth.AccessGranted = true;

                                        Set_ViewBag_Global();
                                        Set_ViewBag_UserInfo();
                                        oSystem.SetUserLoggedIn();

                                        oPage.DataModelsPrimary = oSystem;
                                        oPage.DataModelsSub.Add(oSystem);
                                        oPage.AuthenticatedUser = true;
                                        oPage.PartialViewToLoad = "~/Modules/CMSAdmin/Views/Dashboard/AdminDashboard.cshtml";

                                    }
                                    else
                                    {
                                        ViewBag.sResponseMessage = "Sorry you don't have access to this area, please contact your administrator for help!";
                                        oPage.DataModelsPrimary = oUserAuth;
                                        oPage.DataModelsSub.Add(oSystem);
                                        oPage.AuthenticatedUser = true;
                                        ViewBag.bLoginError = true;
                                        oPage.PartialViewToLoad = "~/Modules/CMSAdmin/Views/Authentication/UserLogIn.cshtml";
                                    }
                                }
                                else
                                {
                                    ViewBag.sResponseMessage = "Sorry I could not match your credentials!";
                                    oPage.DataModelsPrimary = oUserAuth;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    ViewBag.bLoginError = true;
                                    oPage.PartialViewToLoad = "~/Modules/CMSAdmin/Views/Authentication/UserLogIn.cshtml";
                                }

                                oSystem.CloseDataConnection();
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                RedirectToAction("ErrorPage");
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return Redirect("~/");
                        }
                    }
                    else
                    {
                        ViewBag.sPassword = "Invalid password!";
                        oPage.DataModelsPrimary = oUserAuth;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        ViewBag.bLoginError = true;
                        oPage.PartialViewToLoad = "~/Modules/CMSAdmin/Views/Authentication/UserLogIn.cshtml";
                    }
                }
                else
                {
                    ViewBag.sUserName = "Invalid user name!";
                    oPage.DataModelsPrimary = oUserAuth;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    ViewBag.bLoginError = true;
                    oPage.PartialViewToLoad = "~/Modules/CMSAdmin/Views/Authentication/UserLogIn.cshtml";
                }
            }
            else
            {
                ViewBag.sResponseMessage = "Please enter a valid user name and password!";
                oPage.DataModelsPrimary = oUserAuth;
                oPage.DataModelsSub.Add(oSystem);
                oPage.AuthenticatedUser = true;
                ViewBag.bLoginError = true;
                oPage.PartialViewToLoad = "~/Modules/CMSAdmin/Views/Authentication/UserLogIn.cshtml";
            }

            oSystem.CloseDataConnection();

            return View(sModuleBase + sBasePage, oPage);
        }

        public ActionResult UserLogOff()
        {
            Set_Client_NavSettings("UserLogOff");

            oSystem.OpenDataConnection();
            Set_ViewBag_UserInfo_Defaults();
            Set_ViewBag_Global_Defaults();

            oSystem.GetCurrentUser();
            oSystem.UserLoggOff();

            //Session["_iUserID"] = "";
            //Session["_sUserAccessKey"] = "";

            oSystem.CurrentUser = null;

            oSystem.CloseDataConnection();

            ACMSDBView.UserAuthentication oUserAuth = new UserAuthentication();
            oPage.DataModelsPrimary = oUserAuth;
            oPage.DataModelsSub.Add(oSystem);
            oPage.AuthenticatedUser = true;
            oPage.PartialViewToLoad = sModuleBase + "/Views/Authentication/UserLogIn.cshtml";
            oSystem.CloseDataConnection();//Forms
            return View(sModuleBase + sBasePage, oPage);

        }

        public ActionResult EditMyProfile()
        {
            Set_Client_NavSettings("EditMyProfile");
            //string sView = Request.UrlReferrer.ToString();
            oSystem.OpenDataConnection();
            Set_ViewBag_UserInfo_Defaults();
            Set_ViewBag_Global_Defaults();

            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CurrentUser != null)
                {
                    Set_ViewBag_UserInfo();

                    if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                    {
                        Set_ViewBag_UserInfo();
                        Set_ViewBag_Global();

                        ACMSDBView.UserViewModel recRecord = new UserViewModel(oSystem.cnCon);
                        recRecord.User = oSystem.CurrentUser.UserView.User;
                        recRecord.CurrentPassword = oSystem.CurrentUser.UserView.User.sPassword;

                        recRecord.GetUserProperties(oSystem.cnCon, oSystem.CurrentUser.UserView.User.ID);
                        recRecord.Get_Roles(oSystem.cnCon);
                        recRecord.Get_States(oSystem.cnCon);

                        ViewBag.iParentID = recRecord.User.iParentID;
                        ViewBag.sParentID = recRecord.User.sParentID;

                        oSystem.CloseDataConnection();

                        oPage.DataModelsPrimary = recRecord;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = sModuleBase + "/Views/Forms/UserProfileEditor.cshtml";
                        oSystem.CloseDataConnection();//Forms
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        ACMSDBView.UserAuthentication oUserAuth = new UserAuthentication();
                        oPage.DataModelsPrimary = oUserAuth;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = sModuleBase + "/Views/Forms/UserProfileEditor.cshtml";
                        oSystem.CloseDataConnection();//Forms
                        return View(sModuleBase + sBasePage, oPage);
                    }
                }
                else
                {
                    ACMSDBView.UserAuthentication oUserAuth = new UserAuthentication();
                    oPage.DataModelsPrimary = oUserAuth;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = sModuleBase + "/Views/Forms/UserProfileEditor.cshtml";
                    oSystem.CloseDataConnection();//Forms
                    return View(sModuleBase + sBasePage, oPage);
                }
            }
            else
            {
                ACMSDBView.UserAuthentication oUserAuth = new UserAuthentication();
                oPage.DataModelsPrimary = oUserAuth;
                oPage.DataModelsSub.Add(oSystem);
                oPage.AuthenticatedUser = true;
                oPage.PartialViewToLoad = sModuleBase + "/Views/Forms/UserProfileEditor.cshtml";
                oSystem.CloseDataConnection();//Forms
                return View(sModuleBase + sBasePage, oPage);
            }

        }

        [HttpPost]
        public ActionResult ProfileUpdate(ACMSDBView.UserViewModel _rec)
        {
            Set_Client_NavSettings("ProfileUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                ViewBag.iSiteID = oSystem.rsGlobalVeriables.SiteID;

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    Set_ViewBag_Global();
                    Set_ViewBag_UserInfo();

                    string sLocalDefaultView = sModuleBase + "/Views/Forms/UserProfileEditor.cshtml";
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.User.iParentID;
                            ViewBag.sParentID = _rec.User.sParentID;

                            if (_rec.User.ID > 0)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                if (String.IsNullOrEmpty(_rec.User.sPassword))
                                {
                                    _rec.User.sPassword = _rec.CurrentPassword;
                                }
                                else
                                {
                                    _rec.User.sPassword = oSystem.rsGlobalVeriables.oEncryption.Encrypt(_rec.User.sPassword);
                                    _rec.CurrentPassword = _rec.User.sPassword;
                                }

                                DINT_Users dbInteraction = new DINT_Users(oSystem.cnCon);

                                _rec.User.dtLastUpdated = DateTime.Now;

                                dbInteraction.Update_SQL(_rec.User);

                                _rec.Get_Roles(oSystem.cnCon);
                                _rec.Get_States(oSystem.cnCon);

                                oSystem.CloseDataConnection();
                                #endregion

                                oPage.DataModelsPrimary = _rec;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;

                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                ViewBag.bError = true;
                                ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";


                                oPage.DataModelsPrimary = _rec;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();//Forms
                                return View(sModuleBase + sBasePage, oPage);
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            oSystem.CloseDataConnection();//Forms

                            return View(sModuleBase + sBasePage, oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();//Forms
                        return View(sModuleBase + sBasePage, oPage);
                    }
                }
                else
                {
                    oSystem.CloseDataConnection();//Forms
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();//Forms
                return RedirectToAction("Index");
            }
        }


        [HttpPost]
        [ValidateInput(false)]
        public JsonResult UpdateContent(string _ContentID, string _Content)
        {
            string sBaseULR = HttpContext.Request.Url.Scheme + "://" + HttpContext.Request.Url.Authority + "/";
            string sCurrentURL = HttpContext.Request.UrlReferrer.OriginalString.ToString();
            var oResponse = Json(new { RESPONSE = "ERROR" });
            try
            {
                if (!String.IsNullOrEmpty(_ContentID))
                {
                    if (!String.IsNullOrEmpty(_Content))
                    {
                        if (oSystem.GetCurrentUser())
                        {
                            string sNav = "";
                            sNav = HttpContext.Request.UrlReferrer.OriginalString.ToString();
                            sNav = sNav.Replace(sBaseULR, "");
                            if (String.IsNullOrEmpty(sNav))
                            {
                                sNav = "/";
                            }

                            _Content = _Content.Replace(sBaseULR, "~/");

                            ViewBag.iSiteID = oSystem.rsGlobalVeriables.SiteID;
                            int[] iAccessRolesAllowed = new int[3] { 1, 2, 3 };
                            if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                            {
                                #region Process Update
                                string[] sCommand = _ContentID.Split('-');
                                if (sCommand.Length > 1)
                                {
                                    int iRecID = System.Convert.ToInt32(sCommand[1]);
                                    if (iRecID > 0)
                                    {
                                        List<DataParameter> lstParameters = new List<DataParameter>();
                                        DataParameter pParameter = new DataParameter("ID", iRecID.ToString(), "int", 0, "ID", " = ", "");
                                        lstParameters.Add(pParameter);

                                        switch (sCommand[0])
                                        {
                                            case "c"://content
                                                #region WebSitePageZone
                                                DINT_WebSitePageZone dbWebSitePageZone = new DINT_WebSitePageZone(oSystem.cnCon);
                                                List<DEF_WebSitePageZone.RecordObject> dbSearch_WebSitePageZone;
                                                dbSearch_WebSitePageZone = dbWebSitePageZone.Get(lstParameters);
                                                if (dbSearch_WebSitePageZone != null)
                                                {
                                                    if (dbSearch_WebSitePageZone.Count > 0)
                                                    {
                                                        if (dbSearch_WebSitePageZone[0].ID == iRecID)
                                                        {
                                                            dbSearch_WebSitePageZone[0].iUpdatedByID = oSystem.CurrentUser.UserView.User.ID;
                                                            dbSearch_WebSitePageZone[0].sUpdatedByID = oSystem.CurrentUser.UserView.User.sFName + " " + oSystem.CurrentUser.UserView.User.sLName;
                                                            dbSearch_WebSitePageZone[0].dtLastUpdated = DateTime.Now;
                                                            dbSearch_WebSitePageZone[0].sContent = _Content;

                                                            dbWebSitePageZone.Update_SQL(dbSearch_WebSitePageZone[0]);
                                                        }
                                                    }
                                                }
                                                #endregion
                                                break;
                                            case "tc"://template content
                                                #region WebSitePageTemplateZones
                                                DINT_WebSiteNavigation obj_WebSiteNavigation_tc = new DINT_WebSiteNavigation(oSystem.cnCon);
                                                List<DataParameter> lstParameters_tc = new List<DataParameter>();

                                                DataParameter pParameter_tc = new DataParameter("sNavigationIdentifyer", "'" + sNav + "'", "string", 13, "sNavigationIdentifyer", " = ", "");
                                                lstParameters_tc.Add(pParameter_tc);
                                                pParameter_tc = new DataParameter("bDisabled", "'" + "false" + "'", "bool", 23, "bDisabled", " = ", " AND ");
                                                lstParameters_tc.Add(pParameter_tc);

                                                List<DEF_WebSiteNavigation.RecordObject> lstNav = obj_WebSiteNavigation_tc.Get(lstParameters_tc);
                                                if (lstNav != null)
                                                {
                                                    if (lstNav.Count > 0)
                                                    {
                                                        #region
                                                        bool bContentFoundAndUpdated = false;
                                                        lstParameters_tc = new List<DataParameter>();
                                                        pParameter_tc = new DataParameter("iZoneID", "'" + iRecID.ToString() + "'", "int", 0, "iZoneID", " = ", "");
                                                        lstParameters_tc.Add(pParameter_tc);

                                                        pParameter_tc = new DataParameter("iParentID", "'" + lstNav[0].iPageID.ToString() + "'", "int", 0, "iParentID", " = ", " AND ");
                                                        lstParameters_tc.Add(pParameter_tc);

                                                        DINT_WebSitePageZone dbWebSitePageZone_tc = new DINT_WebSitePageZone(oSystem.cnCon);
                                                        List<DEF_WebSitePageZone.RecordObject> dbSearch_WebSitePageZone_tc;
                                                        dbSearch_WebSitePageZone_tc = dbWebSitePageZone_tc.Get(lstParameters_tc);
                                                        if (dbSearch_WebSitePageZone_tc != null)
                                                        {
                                                            if (dbSearch_WebSitePageZone_tc.Count > 0)
                                                            {
                                                                if (dbSearch_WebSitePageZone_tc[0].iZoneID == iRecID)
                                                                {
                                                                    #region
                                                                    bContentFoundAndUpdated = true;
                                                                    dbSearch_WebSitePageZone_tc[0].iUpdatedByID = oSystem.CurrentUser.UserView.User.ID;
                                                                    dbSearch_WebSitePageZone_tc[0].sUpdatedByID = oSystem.CurrentUser.UserView.User.sFName + " " + oSystem.CurrentUser.UserView.User.sLName;
                                                                    dbSearch_WebSitePageZone_tc[0].dtLastUpdated = DateTime.Now;
                                                                    dbSearch_WebSitePageZone_tc[0].sContent = _Content;

                                                                    dbWebSitePageZone_tc.Update_SQL(dbSearch_WebSitePageZone_tc[0]);
                                                                    #endregion
                                                                }
                                                                else
                                                                {
                                                                    bContentFoundAndUpdated = false;
                                                                }
                                                            }
                                                        }

                                                        if (bContentFoundAndUpdated == false)
                                                        {
                                                            DINT_WebSitePageTemplateZones dbWebSitePageTemplateZones = new DINT_WebSitePageTemplateZones(oSystem.cnCon);
                                                            List<DEF_WebSitePageTemplateZones.RecordObject> dbSearch_WebSitePageTemplateZones;
                                                            dbSearch_WebSitePageTemplateZones = dbWebSitePageTemplateZones.Get(lstParameters);
                                                            if (dbSearch_WebSitePageTemplateZones != null)
                                                            {
                                                                if (dbSearch_WebSitePageTemplateZones.Count > 0)
                                                                {
                                                                    if (dbSearch_WebSitePageTemplateZones[0].ID == iRecID)
                                                                    {
                                                                        #region
                                                                        DEF_WebSitePageZone.RecordObject oNew_WebSitePageZone = new DEF_WebSitePageZone.RecordObject();
                                                                        oNew_WebSitePageZone.iParentID = lstNav[0].iPageID;
                                                                        oNew_WebSitePageZone.sParentID = lstNav[0].sPageID;
                                                                        oNew_WebSitePageZone.sControl = Guid.NewGuid().ToString();
                                                                        oNew_WebSitePageZone.dtDateCreated = DateTime.Now;
                                                                        oNew_WebSitePageZone.dtLastUpdated = DateTime.Now;
                                                                        oNew_WebSitePageZone.bLoadPartialPage = false;
                                                                        oNew_WebSitePageZone.iCreatedByID = oSystem.CurrentUser.UserView.User.ID;
                                                                        oNew_WebSitePageZone.sCreatedByID = oSystem.CurrentUser.UserView.User.sFName + " " + oSystem.CurrentUser.UserView.User.sLName;
                                                                        oNew_WebSitePageZone.iUpdatedByID = oSystem.CurrentUser.UserView.User.ID;
                                                                        oNew_WebSitePageZone.sUpdatedByID = oSystem.CurrentUser.UserView.User.sFName + " " + oSystem.CurrentUser.UserView.User.sLName;
                                                                        oNew_WebSitePageZone.sName = "";
                                                                        oNew_WebSitePageZone.iZoneID = dbSearch_WebSitePageTemplateZones[0].ID;
                                                                        oNew_WebSitePageZone.sZoneID = dbSearch_WebSitePageTemplateZones[0].sName;
                                                                        oNew_WebSitePageZone.sContent = _Content;

                                                                        dbWebSitePageZone_tc.Insert_SQL(oNew_WebSitePageZone);
                                                                        #endregion
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        #endregion
                                                    }
                                                }
                                                #endregion
                                                break;
                                            case "zc"://zone content
                                                #region WebSitePageZoneContent
                                                DINT_WebSitePageZoneContent dbWebSitePageZoneContent = new DINT_WebSitePageZoneContent(oSystem.cnCon);
                                                List<DEF_WebSitePageZoneContent.RecordObject> dbSearch_WebSitePageZoneContent = dbWebSitePageZoneContent.Get(lstParameters);
                                                if (dbSearch_WebSitePageZoneContent != null)
                                                {
                                                    if (dbSearch_WebSitePageZoneContent.Count > 0)
                                                    {
                                                        if (dbSearch_WebSitePageZoneContent[0].ID == iRecID)
                                                        {
                                                            dbSearch_WebSitePageZoneContent[0].iUpdatedByID = oSystem.CurrentUser.UserView.User.ID;
                                                            dbSearch_WebSitePageZoneContent[0].sUpdatedByID = oSystem.CurrentUser.UserView.User.sFName + " " + oSystem.CurrentUser.UserView.User.sLName;
                                                            dbSearch_WebSitePageZoneContent[0].dtLastUpdated = DateTime.Now;
                                                            dbSearch_WebSitePageZoneContent[0].sContent = _Content;

                                                            dbWebSitePageZoneContent.Update_SQL(dbSearch_WebSitePageZoneContent[0]);
                                                        }
                                                    }
                                                }
                                                #endregion
                                                break;
                                            case "tzc"://template zone content
                                                #region WebSitePageTemplateZonesContent                                                
                                                DINT_WebSiteNavigation obj_WebSiteNavigation_tzc = new DINT_WebSiteNavigation(oSystem.cnCon);
                                                List<DataParameter> lstParameters_tzc = new List<DataParameter>();

                                                DataParameter pParameter_tzc = new DataParameter("sNavigationIdentifyer", "'" + sNav + "'", "string", 13, "sNavigationIdentifyer", " = ", "");
                                                lstParameters_tzc.Add(pParameter_tzc);
                                                pParameter_tzc = new DataParameter("bDisabled", "'" + "false" + "'", "bool", 23, "bDisabled", " = ", " AND ");
                                                lstParameters_tzc.Add(pParameter_tzc);

                                                List<DEF_WebSiteNavigation.RecordObject> lstNav_tzc = obj_WebSiteNavigation_tzc.Get(lstParameters_tzc);
                                                if (lstNav_tzc != null)
                                                {
                                                    if (lstNav_tzc.Count > 0)
                                                    {
                                                        #region
                                                        bool bContentFoundAndUpdated = false;
                                                        lstParameters_tzc = new List<DataParameter>();
                                                        pParameter_tzc = new DataParameter("iContentZoneID", iRecID.ToString(), "int", 0, "iContentZoneID", " = ", "");
                                                        lstParameters_tzc.Add(pParameter);

                                                        pParameter_tzc = new DataParameter("iParentID", lstNav_tzc[0].iPageID.ToString(), "int", 0, "iParentID", " = ", " AND ");
                                                        lstParameters_tzc.Add(pParameter_tzc);

                                                        DINT_WebSitePageZoneContent dbWebSitePageZoneContent_tzc = new DINT_WebSitePageZoneContent(oSystem.cnCon);
                                                        List<DEF_WebSitePageZoneContent.RecordObject> dbSearch_WebSitePageZoneContent_tzc;
                                                        dbSearch_WebSitePageZoneContent_tzc = dbWebSitePageZoneContent_tzc.Get(lstParameters_tzc);
                                                        if (dbSearch_WebSitePageZoneContent_tzc != null)
                                                        {
                                                            if (dbSearch_WebSitePageZoneContent_tzc.Count > 0)
                                                            {
                                                                if (dbSearch_WebSitePageZoneContent_tzc[0].iContentZoneID == iRecID)
                                                                {
                                                                    #region
                                                                    bContentFoundAndUpdated = true;
                                                                    dbSearch_WebSitePageZoneContent_tzc[0].iUpdatedByID = oSystem.CurrentUser.UserView.User.ID;
                                                                    dbSearch_WebSitePageZoneContent_tzc[0].sUpdatedByID = oSystem.CurrentUser.UserView.User.sFName + " " + oSystem.CurrentUser.UserView.User.sLName;
                                                                    dbSearch_WebSitePageZoneContent_tzc[0].dtLastUpdated = DateTime.Now;
                                                                    dbSearch_WebSitePageZoneContent_tzc[0].sContent = _Content;

                                                                    dbWebSitePageZoneContent_tzc.Update_SQL(dbSearch_WebSitePageZoneContent_tzc[0]);
                                                                    #endregion
                                                                }
                                                                else
                                                                {
                                                                    bContentFoundAndUpdated = false;
                                                                }
                                                            }
                                                        }

                                                        if (bContentFoundAndUpdated == false)
                                                        {
                                                            DINT_WebSitePageTemplateZonesContent dbWebSitePageTemplateZonesContent = new DINT_WebSitePageTemplateZonesContent(oSystem.cnCon);
                                                            List<DEF_WebSitePageTemplateZonesContent.RecordObject> dbSearch_WebSitePageTemplateZonesContent;
                                                            dbSearch_WebSitePageTemplateZonesContent = dbWebSitePageTemplateZonesContent.Get(lstParameters);
                                                            if (dbSearch_WebSitePageTemplateZonesContent != null)
                                                            {
                                                                if (dbSearch_WebSitePageTemplateZonesContent.Count > 0)
                                                                {
                                                                    if (dbSearch_WebSitePageTemplateZonesContent[0].ID == iRecID)
                                                                    {
                                                                        #region
                                                                        DEF_WebSitePageZoneContent.RecordObject oNew_WebSitePageZoneContent = new DEF_WebSitePageZoneContent.RecordObject();
                                                                        oNew_WebSitePageZoneContent.iParentID = lstNav_tzc[0].iPageID;
                                                                        oNew_WebSitePageZoneContent.sParentID = lstNav_tzc[0].sPageID;
                                                                        oNew_WebSitePageZoneContent.sControl = Guid.NewGuid().ToString();
                                                                        oNew_WebSitePageZoneContent.dtDateCreated = DateTime.Now;
                                                                        oNew_WebSitePageZoneContent.dtLastUpdated = DateTime.Now;
                                                                        oNew_WebSitePageZoneContent.bLoadPartialPage = false;
                                                                        oNew_WebSitePageZoneContent.iCreatedByID = oSystem.CurrentUser.UserView.User.ID;
                                                                        oNew_WebSitePageZoneContent.sCreatedByID = oSystem.CurrentUser.UserView.User.sFName + " " + oSystem.CurrentUser.UserView.User.sLName;
                                                                        oNew_WebSitePageZoneContent.iUpdatedByID = oSystem.CurrentUser.UserView.User.ID;
                                                                        oNew_WebSitePageZoneContent.sUpdatedByID = oSystem.CurrentUser.UserView.User.sFName + " " + oSystem.CurrentUser.UserView.User.sLName;
                                                                        oNew_WebSitePageZoneContent.sName = "";
                                                                        oNew_WebSitePageZoneContent.iZoneID = dbSearch_WebSitePageTemplateZonesContent[0].iContentZoneID;
                                                                        oNew_WebSitePageZoneContent.sZoneID = dbSearch_WebSitePageTemplateZonesContent[0].sContentZoneID;
                                                                        oNew_WebSitePageZoneContent.iContentZoneID = dbSearch_WebSitePageTemplateZonesContent[0].ID;
                                                                        oNew_WebSitePageZoneContent.sContentZoneID = dbSearch_WebSitePageTemplateZonesContent[0].sName;
                                                                        oNew_WebSitePageZoneContent.sContent = _Content;

                                                                        dbWebSitePageZoneContent_tzc.Insert_SQL(oNew_WebSitePageZoneContent);
                                                                        #endregion
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        #endregion




                                                    }
                                                }
                                                #endregion
                                                break;
                                        }
                                        oResponse = Json(new { RESPONSE = "SUCCESS" });
                                    }
                                }
                                #endregion
                            }
                        }
                    }
                }
            }
            catch
            {

            }
            oSystem.CloseDataConnection();//Forms
            return oResponse;
        }


        [HttpPost]
        [ValidateInput(false)]
        public JsonResult UpdateTemplateContent(string _ContentID, string _Content)
        {
            string sBaseULR = HttpContext.Request.Url.Scheme + "://" + HttpContext.Request.Url.Authority + "/";
            string sCurrentURL = HttpContext.Request.UrlReferrer.OriginalString.ToString();
            var oResponse = Json(new { RESPONSE = "ERROR" });
            try
            {
                if (!String.IsNullOrEmpty(_ContentID))
                {
                    if (!String.IsNullOrEmpty(_Content))
                    {
                        if (oSystem.GetCurrentUser())
                        {

                            _Content = _Content.Replace(sBaseULR, "~/");

                            ViewBag.iSiteID = oSystem.rsGlobalVeriables.SiteID;
                            int[] iAccessRolesAllowed = new int[3] { 1, 2, 3 };
                            if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                            {
                                #region Process Update
                                string[] sCommand = _ContentID.Split('-');
                                if (sCommand.Length > 1)
                                {
                                    int iRecID = System.Convert.ToInt32(sCommand[1]);
                                    if (iRecID > 0)
                                    {
                                        List<DataParameter> lstParameters = new List<DataParameter>();
                                        DataParameter pParameter = new DataParameter("ID", iRecID.ToString(), "int", 0, "ID", " = ", "");
                                        lstParameters.Add(pParameter);

                                        switch (sCommand[0])
                                        {
                                            case "c"://content
                                                #region WebSitePageZone
                                                DINT_WebSitePageZone dbWebSitePageZone = new DINT_WebSitePageZone(oSystem.cnCon);
                                                List<DEF_WebSitePageZone.RecordObject> dbSearch_WebSitePageZone;
                                                dbSearch_WebSitePageZone = dbWebSitePageZone.Get(lstParameters);
                                                if (dbSearch_WebSitePageZone != null)
                                                {
                                                    if (dbSearch_WebSitePageZone.Count > 0)
                                                    {
                                                        if (dbSearch_WebSitePageZone[0].ID == iRecID)
                                                        {
                                                            #region WebSitePageTemplateZones
                                                            lstParameters = new List<DataParameter>();
                                                            pParameter = new DataParameter("ID", dbSearch_WebSitePageZone[0].iZoneID.ToString(), "int", 0, "ID", " = ", "");
                                                            lstParameters.Add(pParameter);

                                                            DINT_WebSitePageTemplateZones dbWebSitePageTemplateZones_c = new DINT_WebSitePageTemplateZones(oSystem.cnCon);
                                                            List<DEF_WebSitePageTemplateZones.RecordObject> dbSearch_WebSitePageTemplateZones_c;
                                                            dbSearch_WebSitePageTemplateZones_c = dbWebSitePageTemplateZones_c.Get(lstParameters);
                                                            if (dbSearch_WebSitePageTemplateZones_c != null)
                                                            {
                                                                if (dbSearch_WebSitePageTemplateZones_c.Count > 0)
                                                                {
                                                                    if (dbSearch_WebSitePageTemplateZones_c[0].ID == dbSearch_WebSitePageZone[0].iZoneID)
                                                                    {
                                                                        dbSearch_WebSitePageTemplateZones_c[0].iUpdatedByID = oSystem.CurrentUser.UserView.User.ID;
                                                                        dbSearch_WebSitePageTemplateZones_c[0].sUpdatedByID = oSystem.CurrentUser.UserView.User.sFName + " " + oSystem.CurrentUser.UserView.User.sLName;
                                                                        dbSearch_WebSitePageTemplateZones_c[0].dtLastUpdated = DateTime.Now;
                                                                        dbSearch_WebSitePageTemplateZones_c[0].sDefaultValue = _Content;

                                                                        dbWebSitePageTemplateZones_c.Update_SQL(dbSearch_WebSitePageTemplateZones_c[0]);
                                                                    }
                                                                }
                                                            }
                                                            #endregion
                                                        }
                                                    }
                                                }
                                                #endregion
                                                break;
                                            case "tc"://template content
                                                #region WebSitePageTemplateZones
                                                DINT_WebSitePageTemplateZones dbWebSitePageTemplateZones = new DINT_WebSitePageTemplateZones(oSystem.cnCon);
                                                List<DEF_WebSitePageTemplateZones.RecordObject> dbSearch_WebSitePageTemplateZones;
                                                dbSearch_WebSitePageTemplateZones = dbWebSitePageTemplateZones.Get(lstParameters);
                                                if (dbSearch_WebSitePageTemplateZones != null)
                                                {
                                                    if (dbSearch_WebSitePageTemplateZones.Count > 0)
                                                    {
                                                        if (dbSearch_WebSitePageTemplateZones[0].ID == iRecID)
                                                        {
                                                            dbSearch_WebSitePageTemplateZones[0].iUpdatedByID = oSystem.CurrentUser.UserView.User.ID;
                                                            dbSearch_WebSitePageTemplateZones[0].sUpdatedByID = oSystem.CurrentUser.UserView.User.sFName + " " + oSystem.CurrentUser.UserView.User.sLName;
                                                            dbSearch_WebSitePageTemplateZones[0].dtLastUpdated = DateTime.Now;
                                                            dbSearch_WebSitePageTemplateZones[0].sDefaultValue = _Content;

                                                            dbWebSitePageTemplateZones.Update_SQL(dbSearch_WebSitePageTemplateZones[0]);
                                                        }
                                                    }
                                                }
                                                #endregion
                                                break;
                                            case "zc"://zone content
                                                #region WebSitePageZoneContent
                                                DINT_WebSitePageZoneContent dbWebSitePageZoneContent = new DINT_WebSitePageZoneContent(oSystem.cnCon);
                                                List<DEF_WebSitePageZoneContent.RecordObject> dbSearch_WebSitePageZoneContent = dbWebSitePageZoneContent.Get(lstParameters);
                                                if (dbSearch_WebSitePageZoneContent != null)
                                                {
                                                    if (dbSearch_WebSitePageZoneContent.Count > 0)
                                                    {
                                                        if (dbSearch_WebSitePageZoneContent[0].ID == iRecID)
                                                        {
                                                            #region WebSitePageTemplateZonesContent
                                                            lstParameters = new List<DataParameter>();
                                                            pParameter = new DataParameter("ID", dbSearch_WebSitePageZoneContent[0].iContentZoneID.ToString(), "int", 0, "ID", " = ", "");
                                                            lstParameters.Add(pParameter);

                                                            DINT_WebSitePageTemplateZonesContent dbWebSitePageTemplateZonesContent_zc = new DINT_WebSitePageTemplateZonesContent(oSystem.cnCon);
                                                            List<DEF_WebSitePageTemplateZonesContent.RecordObject> dbSearch_WebSitePageTemplateZonesContent_zc;
                                                            dbSearch_WebSitePageTemplateZonesContent_zc = dbWebSitePageTemplateZonesContent_zc.Get(lstParameters);
                                                            if (dbSearch_WebSitePageTemplateZonesContent_zc != null)
                                                            {
                                                                if (dbSearch_WebSitePageTemplateZonesContent_zc.Count > 0)
                                                                {
                                                                    if (dbSearch_WebSitePageTemplateZonesContent_zc[0].ID == dbSearch_WebSitePageZoneContent[0].iContentZoneID)
                                                                    {
                                                                        dbSearch_WebSitePageTemplateZonesContent_zc[0].iUpdatedByID = oSystem.CurrentUser.UserView.User.ID;
                                                                        dbSearch_WebSitePageTemplateZonesContent_zc[0].sUpdatedByID = oSystem.CurrentUser.UserView.User.sFName + " " + oSystem.CurrentUser.UserView.User.sLName;
                                                                        dbSearch_WebSitePageTemplateZonesContent_zc[0].dtLastUpdated = DateTime.Now;
                                                                        dbSearch_WebSitePageTemplateZonesContent_zc[0].sDefaultValue = _Content;

                                                                        dbWebSitePageTemplateZonesContent_zc.Update_SQL(dbSearch_WebSitePageTemplateZonesContent_zc[0]);
                                                                    }
                                                                }
                                                            }
                                                            #endregion
                                                        }
                                                    }
                                                }
                                                #endregion
                                                break;
                                            case "tzc"://template zone content
                                                #region WebSitePageTemplateZonesContent
                                                DINT_WebSitePageTemplateZonesContent dbWebSitePageTemplateZonesContent = new DINT_WebSitePageTemplateZonesContent(oSystem.cnCon);
                                                List<DEF_WebSitePageTemplateZonesContent.RecordObject> dbSearch_WebSitePageTemplateZonesContent;
                                                dbSearch_WebSitePageTemplateZonesContent = dbWebSitePageTemplateZonesContent.Get(lstParameters);
                                                if (dbSearch_WebSitePageTemplateZonesContent != null)
                                                {
                                                    if (dbSearch_WebSitePageTemplateZonesContent.Count > 0)
                                                    {
                                                        if (dbSearch_WebSitePageTemplateZonesContent[0].ID == iRecID)
                                                        {
                                                            dbSearch_WebSitePageTemplateZonesContent[0].iUpdatedByID = oSystem.CurrentUser.UserView.User.ID;
                                                            dbSearch_WebSitePageTemplateZonesContent[0].sUpdatedByID = oSystem.CurrentUser.UserView.User.sFName + " " + oSystem.CurrentUser.UserView.User.sLName;
                                                            dbSearch_WebSitePageTemplateZonesContent[0].dtLastUpdated = DateTime.Now;
                                                            dbSearch_WebSitePageTemplateZonesContent[0].sDefaultValue = _Content;

                                                            dbWebSitePageTemplateZonesContent.Update_SQL(dbSearch_WebSitePageTemplateZonesContent[0]);
                                                        }
                                                    }
                                                }
                                                #endregion
                                                break;
                                        }
                                        oResponse = Json(new { RESPONSE = "SUCCESS" });
                                    }
                                }
                                #endregion
                            }
                        }
                    }
                }
            }
            catch
            {

            }
            oSystem.CloseDataConnection();//Forms
            return oResponse;
        }

        [HttpPost]
        [ValidateInput(false)]
        public JsonResult AddNewPageFrontPage(string _PageName, string _PageNav, string _TemplateID, string _TemplateName,
            string _TemplatePageID, string _TemplatePageName, string _LanguageID, string _LanguageName)
        {
            string sBaseULR = HttpContext.Request.Url.Scheme + "://" + HttpContext.Request.Url.Authority + "/";
            string sCurrentURL = HttpContext.Request.UrlReferrer.OriginalString.ToString();
            var oResponse = Json(new { RESPONSE = "ERROR" });
            try
            {
                if (oSystem.OpenDataConnection())
                {
                    if (oSystem.GetCurrentUser())
                    {
                        DINT_WebSitePage dbWebSitePage = new DINT_WebSitePage(oSystem.cnCon);

                        DEF_WebSitePage.RecordObject oNew_WebSitePage = new DEF_WebSitePage.RecordObject();
                        oNew_WebSitePage.iParentID = 1;
                        oNew_WebSitePage.sParentID = "Default";
                        oNew_WebSitePage.sControl = Guid.NewGuid().ToString();
                        oNew_WebSitePage.dtDateCreated = DateTime.Now;
                        oNew_WebSitePage.dtLastUpdated = DateTime.Now;
                        oNew_WebSitePage.bLoadPartialPage = false;
                        oNew_WebSitePage.iCreatedByID = oSystem.CurrentUser.UserView.User.ID;
                        oNew_WebSitePage.sCreatedByID = oSystem.CurrentUser.UserView.User.sFName + " " + oSystem.CurrentUser.UserView.User.sLName;
                        oNew_WebSitePage.iUpdatedByID = oSystem.CurrentUser.UserView.User.ID;
                        oNew_WebSitePage.sUpdatedByID = oSystem.CurrentUser.UserView.User.sFName + " " + oSystem.CurrentUser.UserView.User.sLName;
                        oNew_WebSitePage.sPageName = _PageName;
                        oNew_WebSitePage.sPageTitle = _PageName;
                        oNew_WebSitePage.bIsLive = true;
                        oNew_WebSitePage.iSiteTemplateID = System.Convert.ToInt32(_TemplateID);
                        oNew_WebSitePage.sSiteTemplateID = _TemplateName;
                        oNew_WebSitePage.iSiteTemplatePageID = System.Convert.ToInt32(_TemplatePageID);
                        oNew_WebSitePage.sSiteTemplatePageID = _TemplatePageName;
                        oNew_WebSitePage.iLanguageID = System.Convert.ToInt32(_LanguageID);
                        oNew_WebSitePage.sLanguageID = _LanguageName;

                        oNew_WebSitePage.dtEnd = DateTime.Parse("01/01/1901");
                        oNew_WebSitePage.dtStart = DateTime.Parse("01/01/1901");

                        dbWebSitePage.Insert_SQL(oNew_WebSitePage);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + oNew_WebSitePage.sControl + "'", "string", 0, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSitePage.RecordObject> lstWebSitePage = dbWebSitePage.Get(lstParameters);

                        if (lstWebSitePage != null)
                        {
                            if (lstWebSitePage.Count > 0)
                            {
                                DINT_WebSiteNavigation dbWebSiteNavigation = new DINT_WebSiteNavigation(oSystem.cnCon);

                                DEF_WebSiteNavigation.RecordObject oNew_WebSiteNavigation = new DEF_WebSiteNavigation.RecordObject();
                                oNew_WebSiteNavigation.iParentID = 1;
                                oNew_WebSiteNavigation.sParentID = "Default";
                                oNew_WebSiteNavigation.sControl = Guid.NewGuid().ToString();
                                oNew_WebSiteNavigation.dtDateCreated = DateTime.Now;
                                oNew_WebSiteNavigation.dtLastUpdated = DateTime.Now;
                                oNew_WebSiteNavigation.iCreatedByID = oSystem.CurrentUser.UserView.User.ID;
                                oNew_WebSiteNavigation.sCreatedByID = oSystem.CurrentUser.UserView.User.sFName + " " + oSystem.CurrentUser.UserView.User.sLName;
                                oNew_WebSiteNavigation.iUpdatedByID = oSystem.CurrentUser.UserView.User.ID;
                                oNew_WebSiteNavigation.sUpdatedByID = oSystem.CurrentUser.UserView.User.sFName + " " + oSystem.CurrentUser.UserView.User.sLName;

                                oNew_WebSiteNavigation.iPageID = lstWebSitePage[0].ID;
                                oNew_WebSiteNavigation.sPageID = lstWebSitePage[0].sPageName;

                                oNew_WebSiteNavigation.sNavigationIdentifyer = _PageNav;
                                oNew_WebSiteNavigation.sDisplayName = lstWebSitePage[0].sPageName;

                                oNew_WebSiteNavigation.bHidden = false;
                                oNew_WebSiteNavigation.bDisabled = false;
                                oNew_WebSiteNavigation.bRestrictAccess = false;

                                dbWebSiteNavigation.Insert_SQL(oNew_WebSiteNavigation);


                                oResponse = Json(new { RESPONSE = "SUCCESS" });
                            }
                        }
                    }
                }
            }
            catch
            {

            }
            oSystem.CloseDataConnection();//Forms
            return oResponse;
        }




        [HttpPost]
        public JsonResult Get_Countries()
        {
            Set_ViewBag_UserInfo_Defaults();
            string sRESPONSE = "false";
            string sRESPONSEMESSAGE = "Error";

            List<DEF_Countries.RecordObject> lstSearch_Results = null;
            try
            {
                if (oSystem.OpenDataConnection())
                {
                    if (oSystem.GetCurrentUser())
                    {
                        Set_ViewBag_Global();
                        Set_ViewBag_UserInfo();

                        if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                        {
                            #region
                            List<DataParameter> lstParameters = new List<DataParameter>();
                            DataParameter pParameter = null;

                            DINT_Countries dbCountries = new DINT_Countries(oSystem.cnCon);


                            lstSearch_Results = dbCountries.Get(lstParameters);

                            sRESPONSE = "true";
                            sRESPONSEMESSAGE = "Data Loaded!";
                            #endregion
                        }
                        else
                        {
                            sRESPONSE = "false";
                            sRESPONSEMESSAGE = "System error occured please contact system administrator!";
                        }
                    }
                    else
                    {
                        sRESPONSE = "false";
                        sRESPONSEMESSAGE = "System error occured please contact system administrator!";
                    }
                }
                else
                {
                    sRESPONSE = "false";
                    sRESPONSEMESSAGE = "System error occured please contact system administrator!";
                }
            }
            catch (Exception s)
            {
                sRESPONSE = "false";
                sRESPONSEMESSAGE = s.ToString();
            }
            oSystem.CloseDataConnection();
            var oResponse = Json(new { RESPONSE = sRESPONSE, MESSAGE = sRESPONSEMESSAGE, DATA = lstSearch_Results });
            return oResponse;
        }

        [HttpPost]
        public JsonResult Get_CountryStates(string _CountryID)
        {
            Set_ViewBag_UserInfo_Defaults();
            string sRESPONSE = "false";
            string sRESPONSEMESSAGE = "Error";

            if (String.IsNullOrEmpty(_CountryID))
            {
                _CountryID = "213";//Default to US
            }

            List<DEF_States.RecordObject> lstSearch_Results = null;
            try
            {
                if (oSystem.OpenDataConnection())
                {
                    if (oSystem.GetCurrentUser())
                    {
                        Set_ViewBag_Global();
                        Set_ViewBag_UserInfo();

                        if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                        {
                            #region
                            List<DataParameter> lstParameters = new List<DataParameter>();
                            DataParameter pParameter = null;

                            DINT_States dbStates = new DINT_States(oSystem.cnCon);

                            pParameter = new DataParameter("iCountryID", "'" + _CountryID + "'", "int", 9, "iCountryID", " = ", "");
                            lstParameters.Add(pParameter);

                            lstSearch_Results = dbStates.Get(lstParameters);

                            sRESPONSE = "true";
                            sRESPONSEMESSAGE = "Data Loaded!";
                            #endregion
                        }
                        else
                        {
                            sRESPONSE = "false";
                            sRESPONSEMESSAGE = "System error occured please contact system administrator!";
                        }
                    }
                    else
                    {
                        sRESPONSE = "false";
                        sRESPONSEMESSAGE = "System error occured please contact system administrator!";
                    }
                }
                else
                {
                    sRESPONSE = "false";
                    sRESPONSEMESSAGE = "System error occured please contact system administrator!";
                }
            }
            catch (Exception s)
            {
                sRESPONSE = "false";
                sRESPONSEMESSAGE = s.ToString();
            }
            oSystem.CloseDataConnection();
            var oResponse = Json(new { RESPONSE = sRESPONSE, MESSAGE = sRESPONSEMESSAGE, DATA = lstSearch_Results });
            return oResponse;
        }

        [HttpPost]
        public JsonResult Get_CountriesLanguages(string _CountryID)
        {
            Set_ViewBag_UserInfo_Defaults();
            string sRESPONSE = "false";
            string sRESPONSEMESSAGE = "Error";

            if (String.IsNullOrEmpty(_CountryID))
            {
                _CountryID = "213";//Default to US
            }

            List<DEF_CountryLanguages.RecordObject> lstSearch_Results = null;
            try
            {
                if (oSystem.OpenDataConnection())
                {
                    if (oSystem.GetCurrentUser())
                    {
                        Set_ViewBag_Global();
                        Set_ViewBag_UserInfo();

                        if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                        {
                            #region
                            List<DataParameter> lstParameters = new List<DataParameter>();
                            DataParameter pParameter = null;

                            DINT_CountryLanguages dbCountryLanguages = new DINT_CountryLanguages(oSystem.cnCon);

                            pParameter = new DataParameter("iCountryID", "'" + _CountryID + "'", "int", 6, "iCountryID", " = ", "");
                            lstParameters.Add(pParameter);

                            lstSearch_Results = dbCountryLanguages.Get(lstParameters);

                            sRESPONSE = "true";
                            sRESPONSEMESSAGE = "Data Loaded!";
                            #endregion
                        }
                        else
                        {
                            sRESPONSE = "false";
                            sRESPONSEMESSAGE = "System error occured please contact system administrator!";
                        }
                    }
                    else
                    {
                        sRESPONSE = "false";
                        sRESPONSEMESSAGE = "System error occured please contact system administrator!";
                    }
                }
                else
                {
                    sRESPONSE = "false";
                    sRESPONSEMESSAGE = "System error occured please contact system administrator!";
                }
            }
            catch (Exception s)
            {
                sRESPONSE = "false";
                sRESPONSEMESSAGE = s.ToString();
            }
            oSystem.CloseDataConnection();
            var oResponse = Json(new { RESPONSE = sRESPONSE, MESSAGE = sRESPONSEMESSAGE, DATA = lstSearch_Results });
            return oResponse;
        }



        #region Reports
        string sReportOverview = "/views/Forms/RptOverview.cshtml";

        public ActionResult ReportOverview()
        {
            Set_Client_NavSettings("ReportOverview");
            //string sView = Request.UrlReferrer.ToString();
            oSystem.OpenDataConnection();
            Set_ViewBag_UserInfo_Defaults();
            Set_ViewBag_Global_Defaults();

            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CurrentUser != null)
                {
                    Set_ViewBag_UserInfo();

                    if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                    {
                        Set_ViewBag_UserInfo();
                        Set_ViewBag_Global();




                        oSystem.CloseDataConnection();

                        oPage.DataModelsPrimary = oSystem;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = sModuleBase + sReportOverview;
                        oSystem.CloseDataConnection();//Forms
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        ACMSDBView.UserAuthentication oUserAuth = new UserAuthentication();
                        oPage.DataModelsPrimary = oUserAuth;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = sModuleBase + "/Views/Forms/UserProfileEditor.cshtml";
                        oSystem.CloseDataConnection();//Forms
                        return View(sModuleBase + sBasePage, oPage);
                    }
                }
                else
                {
                    ACMSDBView.UserAuthentication oUserAuth = new UserAuthentication();
                    oPage.DataModelsPrimary = oUserAuth;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = sModuleBase + "/Views/Forms/UserProfileEditor.cshtml";
                    oSystem.CloseDataConnection();//Forms
                    return View(sModuleBase + sBasePage, oPage);
                }
            }
            else
            {
                ACMSDBView.UserAuthentication oUserAuth = new UserAuthentication();
                oPage.DataModelsPrimary = oUserAuth;
                oPage.DataModelsSub.Add(oSystem);
                oPage.AuthenticatedUser = true;
                oPage.PartialViewToLoad = sModuleBase + "/Views/Forms/UserProfileEditor.cshtml";
                oSystem.CloseDataConnection();//Forms
                return View(sModuleBase + sBasePage, oPage);
            }

        }


        string sRptRefferalURLs = "/views/Forms/RptRefferalURLs.cshtml";

        public ActionResult ReportRefferalURLs(string _DateFrom = "", string _DateTo = "")
        {
            Set_Client_NavSettings("ReportRefferalURLs");
            //string sView = Request.UrlReferrer.ToString();
            oSystem.OpenDataConnection();
            Set_ViewBag_UserInfo_Defaults();
            Set_ViewBag_Global_Defaults();

            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CurrentUser != null)
                {
                    Set_ViewBag_UserInfo();

                    if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                    {
                        Set_ViewBag_UserInfo();
                        Set_ViewBag_Global();




                        oSystem.CloseDataConnection();

                        oPage.DataModelsPrimary = oSystem;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = sModuleBase + sRptRefferalURLs;
                        oSystem.CloseDataConnection();//Forms
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        ACMSDBView.UserAuthentication oUserAuth = new UserAuthentication();
                        oPage.DataModelsPrimary = oUserAuth;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = sModuleBase + "/Views/Forms/UserProfileEditor.cshtml";
                        oSystem.CloseDataConnection();//Forms
                        return View(sModuleBase + sBasePage, oPage);
                    }
                }
                else
                {
                    ACMSDBView.UserAuthentication oUserAuth = new UserAuthentication();
                    oPage.DataModelsPrimary = oUserAuth;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = sModuleBase + "/Views/Forms/UserProfileEditor.cshtml";
                    oSystem.CloseDataConnection();//Forms
                    return View(sModuleBase + sBasePage, oPage);
                }
            }
            else
            {
                ACMSDBView.UserAuthentication oUserAuth = new UserAuthentication();
                oPage.DataModelsPrimary = oUserAuth;
                oPage.DataModelsSub.Add(oSystem);
                oPage.AuthenticatedUser = true;
                oPage.PartialViewToLoad = sModuleBase + "/Views/Forms/UserProfileEditor.cshtml";
                oSystem.CloseDataConnection();//Forms
                return View(sModuleBase + sBasePage, oPage);
            }

        }


        string sRptSiteVisitors = "/views/Forms/RptSiteVisitors.cshtml";

        public ActionResult ReportRptSiteVisitors(string _DateFrom = "", string _DateTo = "")
        {
            Set_Client_NavSettings("ReportRptSiteVisitors");
            //string sView = Request.UrlReferrer.ToString();
            oSystem.OpenDataConnection();
            Set_ViewBag_UserInfo_Defaults();
            Set_ViewBag_Global_Defaults();

            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CurrentUser != null)
                {
                    Set_ViewBag_UserInfo();

                    if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                    {
                        Set_ViewBag_UserInfo();
                        Set_ViewBag_Global();




                        oSystem.CloseDataConnection();

                        oPage.DataModelsPrimary = oSystem;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = sModuleBase + sRptSiteVisitors;
                        oSystem.CloseDataConnection();//Forms
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        ACMSDBView.UserAuthentication oUserAuth = new UserAuthentication();
                        oPage.DataModelsPrimary = oUserAuth;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = sModuleBase + "/Views/Forms/UserProfileEditor.cshtml";
                        oSystem.CloseDataConnection();//Forms
                        return View(sModuleBase + sBasePage, oPage);
                    }
                }
                else
                {
                    ACMSDBView.UserAuthentication oUserAuth = new UserAuthentication();
                    oPage.DataModelsPrimary = oUserAuth;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = sModuleBase + "/Views/Forms/UserProfileEditor.cshtml";
                    oSystem.CloseDataConnection();//Forms
                    return View(sModuleBase + sBasePage, oPage);
                }
            }
            else
            {
                ACMSDBView.UserAuthentication oUserAuth = new UserAuthentication();
                oPage.DataModelsPrimary = oUserAuth;
                oPage.DataModelsSub.Add(oSystem);
                oPage.AuthenticatedUser = true;
                oPage.PartialViewToLoad = sModuleBase + "/Views/Forms/UserProfileEditor.cshtml";
                oSystem.CloseDataConnection();//Forms
                return View(sModuleBase + sBasePage, oPage);
            }

        }


        string sRptHitStatistics = "/views/Forms/RptSiteVisitors.cshtml";

        public ActionResult ReportRptHitStatistics(string _DateFrom = "", string _DateTo = "")
        {
            Set_Client_NavSettings("ReportRptHitStatistics");
            //string sView = Request.UrlReferrer.ToString();
            oSystem.OpenDataConnection();
            Set_ViewBag_UserInfo_Defaults();
            Set_ViewBag_Global_Defaults();

            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CurrentUser != null)
                {
                    Set_ViewBag_UserInfo();

                    if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                    {
                        Set_ViewBag_UserInfo();
                        Set_ViewBag_Global();




                        oSystem.CloseDataConnection();

                        oPage.DataModelsPrimary = oSystem;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = sModuleBase + sRptHitStatistics;
                        oSystem.CloseDataConnection();//Forms
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        ACMSDBView.UserAuthentication oUserAuth = new UserAuthentication();
                        oPage.DataModelsPrimary = oUserAuth;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = sModuleBase + "/Views/Forms/UserProfileEditor.cshtml";
                        oSystem.CloseDataConnection();//Forms
                        return View(sModuleBase + sBasePage, oPage);
                    }
                }
                else
                {
                    ACMSDBView.UserAuthentication oUserAuth = new UserAuthentication();
                    oPage.DataModelsPrimary = oUserAuth;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = sModuleBase + "/Views/Forms/UserProfileEditor.cshtml";
                    oSystem.CloseDataConnection();//Forms
                    return View(sModuleBase + sBasePage, oPage);
                }
            }
            else
            {
                ACMSDBView.UserAuthentication oUserAuth = new UserAuthentication();
                oPage.DataModelsPrimary = oUserAuth;
                oPage.DataModelsSub.Add(oSystem);
                oPage.AuthenticatedUser = true;
                oPage.PartialViewToLoad = sModuleBase + "/Views/Forms/UserProfileEditor.cshtml";
                oSystem.CloseDataConnection();//Forms
                return View(sModuleBase + sBasePage, oPage);
            }

        }
        #endregion

        #region ACM View Maps
        string sFileManagerList = "/views/Screens/FileManagerList.cshtml";
        string sFileManagerFilePoP = "/views/Screens/FileManagerListPop.cshtml";
        string sCountries_Details = "/views/Forms/Countries_Details.cshtml";
        string sCountries_List = "/views/Forms/Countries_List.cshtml";
        string sRoles_Details = "/views/Forms/Roles_Details.cshtml";
        string sRoles_List = "/views/Forms/Roles_List.cshtml";
        string sStates_Details = "/views/Forms/States_Details.cshtml";
        string sStates_List = "/views/Forms/States_List.cshtml";
        string sSystemMaster_Details = "/views/Forms/SystemMaster_Details.cshtml";
        string sSystemMaster_List = "/views/Forms/SystemMaster_List.cshtml";
        string sSystemModules_Details = "/views/Forms/SystemModules_Details.cshtml";
        string sSystemModules_List = "/views/Forms/SystemModules_List.cshtml";
        string sUserRoles_Details = "/views/Forms/UserRoles_Details.cshtml";
        string sUserRoles_List = "/views/Forms/UserRoles_List.cshtml";
        string sUsers_Details = "/views/Forms/Users_Details.cshtml";
        string sUsers_List = "/views/Forms/Users_List.cshtml";
        string sUsersAltAuth_Details = "/views/Forms/UsersAltAuth_Details.cshtml";
        string sUsersAltAuth_List = "/views/Forms/UsersAltAuth_List.cshtml";
        string sUsersProperties_Details = "/views/Forms/UsersProperties_Details.cshtml";
        string sUsersProperties_List = "/views/Forms/Countries_Details.cshtml";
        string sWebSite_Details = "/views/Forms/WebSite_Details.cshtml";
        string sWebSite_List = "/views/Forms/WebSite_List.cshtml";
        string sWebSiteBlog_Details = "/views/Forms/WebSiteBlog_Details.cshtml";
        string sWebSiteBlog_List = "/views/Forms/WebSiteBlog_List.cshtml";
        string sWebSiteBlogComments_Details = "/views/Forms/WebSiteBlogComments_Details.cshtml";
        string sWebSiteBlogComments_List = "/views/Forms/WebSiteBlogComments_List.cshtml";
        string sWebSiteBlogCommentsProperties_Details = "/views/Forms/WebSiteBlogCommentsProperties_Details.cshtml";
        string sWebSiteBlogCommentsProperties_List = "/views/Forms/WebSiteBlogCommentsProperties_List.cshtml";
        string sWebSiteBlogEntry_Details = "/views/Forms/WebSiteBlogEntry_Details.cshtml";
        string sWebSiteBlogEntry_List = "/views/Forms/WebSiteBlogEntry_List.cshtml";
        string sWebSiteBlogEntryProperties_Details = "/views/Forms/WebSiteBlogEntryProperties_Details.cshtml";
        string sWebSiteBlogEntryProperties_List = "/views/Forms/WebSiteBlogEntryProperties_List.cshtml";
        string sWebSiteBlogProperties_Details = "/views/Forms/WebSiteBlogProperties_Details.cshtml";
        string sWebSiteBlogProperties_List = "/views/Forms/WebSiteBlogProperties_List.cshtml";
        string sWebSiteExtAppIntegrationSettings_Details = "/views/Forms/WebSiteExtAppIntegrationSettings_Details.cshtml";
        string sWebSiteExtAppIntegrationSettings_List = "/views/Forms/WebSiteExtAppIntegrationSettings_List.cshtml";
        string sWebSiteModules_Details = "/views/Forms/WebSiteModules_Details.cshtml";
        string sWebSiteModules_List = "/views/Forms/WebSiteModules_List.cshtml";
        string sWebSiteNavigation_Details = "/views/Forms/WebSiteNavigation_Details.cshtml";
        string sWebSiteNavigation_List = "/views/Forms/WebSiteNavigation_List.cshtml";
        string sWebSitePage_Details = "/views/Forms/WebSitePage_Details.cshtml";
        string sWebSitePage_List = "/views/Forms/WebSitePage_List.cshtml";
        string sWebSitePageProperties_Details = "/views/Forms/WebSitePageProperties_Details.cshtml";
        string sWebSitePageProperties_List = "/views/Forms/WebSitePageProperties_List.cshtml";
        string sWebSitePageRoles_Details = "/views/Forms/WebSitePageRoles_Details.cshtml";
        string sWebSitePageRoles_List = "/views/Forms/WebSitePageRoles_List.cshtml";

        string sWebSitePageTemplates_Details = "/views/Forms/WebSitePageTemplates_Details.cshtml";
        string sWebSitePageTemplates_List = "/views/Forms/WebSitePageTemplates_List.cshtml";
        string sWebSitePageTemplateZones_Details = "/views/Forms/WebSitePageTemplateZones_Details.cshtml";
        string sWebSitePageTemplateZones_DetailsWYSIWYG = "/views/Forms/WebSitePageTemplateZones_Details.cshtml";
        string sWebSitePageTemplateZones_List = "/views/Forms/WebSitePageTemplateZones_List.cshtml";
        string sWebSitePageZoneContent_Details = "/views/Forms/WebSitePageZoneContent_Details.cshtml";
        string sWebSitePageZoneContent_List = "/views/Forms/WebSitePageZoneContent_List.cshtml";


        string sWebSiteProperties_Details = "/views/Forms/WebSiteProperties_Details.cshtml";
        string sWebSiteProperties_List = "/views/Forms/WebSiteProperties_List.cshtml";
        string sWebSiteEvents_Details = "/views/Forms/WebSiteEvents_Details.cshtml";
        string sWebSiteEvents_List = "/views/Forms/WebSiteEvents_List.cshtml";
        string sWebSiteRole_Details = "/views/Forms/WebSiteRole_Details.cshtml";
        string sWebSiteRole_List = "/views/Forms/WebSiteRole_List.cshtml";
        string sWebSiteBlogEntryRole_Details = "/views/Forms/WebSiteBlogEntryRole_Details.cshtml";
        string sWebSiteBlogEntryRole_List = "/views/Forms/WebSiteBlogEntryRole_List.cshtml";
        string sWebSiteBlogRoles_Details = "/views/Forms/WebSiteBlogRoles_Details.cshtml";
        string sWebSiteBlogRoles_List = "/views/Forms/WebSiteBlogRoles_List.cshtml";
        string sWebSiteNavigationRoles_Details = "/views/Forms/WebSiteNavigationRoles_Details.cshtml";
        string sWebSiteNavigationRoles_List = "/views/Forms/WebSiteNavigationRoles_List.cshtml";
        string sWebSiteScreen_Details = "/views/Forms/WebSiteScreen_Details.cshtml";
        string sWebSiteScreen_List = "/views/Forms/WebSiteScreen_List.cshtml";
        string sWebSiteScreenRoles_Details = "/views/Forms/WebSiteScreenRoles_Details.cshtml";
        string sWebSiteScreenRoles_List = "/views/Forms/WebSiteScreenRoles_List.cshtml";

        string sWebSitePageZone_Details = "/views/Forms/WebSitePageZone_Details.cshtml";
        string sWebSitePageZone_List = "/views/Forms/WebSitePageZone_List.cshtml";
        string sWebSitePageTemplateZonesContent_Details = "/views/Forms/WebSitePageTemplateZonesContent_Details.cshtml";
        string sWebSitePageTemplateZonesContent_List = "/views/Forms/WebSitePageTemplateZonesContent_List.cshtml";

        string sCountryLanguages_Details = "/views/Forms/CountryLanguages_Details.cshtml";
        string sCountryLanguages_List = "/views/Forms/CountryLanguages_List.cshtml";
        #endregion

        #region ACM Form Actions
        #region FileManager
        string sFileUploadResults = "";
        public ActionResult FilesManager_ListPop(string sMessage)
        {
            Set_Client_NavSettings("FilesManager_ListPop");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            string sBaseULR = Request.Url.Scheme + "://" + Request.Url.Authority + "/";
            string sRootPath = Request.PhysicalApplicationPath.ToString();

            if (oSystem.GetCurrentUser())
            {
                ViewBag.iSiteID = oSystem.rsGlobalVeriables.SiteID;

                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.FileUploadResults = sMessage;
                    string sLocalDefaultView = sModuleBase + sFileManagerFilePoP;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    return View(_sViewToLoad);
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult FilesManager_List(string sMessage)
        {
            Set_Client_NavSettings("FilesManager_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            string sBaseULR = Request.Url.Scheme + "://" + Request.Url.Authority + "/";
            string sRootPath = Request.PhysicalApplicationPath.ToString();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.FileUploadResults = sMessage;
                    string sLocalDefaultView = sModuleBase + sFileManagerList;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    return View(_sViewToLoad);
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public JsonResult GetFolderBase()
        {
            List<AriesCMS.Models.FileManagerList> oListing = new List<Models.FileManagerList>();
            try
            {
                string sBaseULR = Request.Url.Scheme + "://" + Request.Url.Authority + "/";
                string sRootPath = Request.PhysicalApplicationPath.ToString();

                if (oSystem.GetCurrentUser())
                {
                    ViewBag.iSiteID = oSystem.rsGlobalVeriables.SiteID;

                    if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                    {
                        #region Process
                        ViewBag.bLoggedIn = true;

                        int iIDCounter = 0;

                        string[] oDirectories = Directory.GetDirectories(sRootPath + "Themes");

                        AriesCMS.Models.FileManagerList oNewItem = new Models.FileManagerList();
                        oNewItem.ID = iIDCounter.ToString();
                        oNewItem.IsFolder = true;
                        oNewItem.URI = sRootPath + "Themes";
                        oNewItem.sName = "Themes";
                        oListing.Add(oNewItem);

                        oNewItem = new Models.FileManagerList();
                        oNewItem.ID = iIDCounter.ToString();
                        oNewItem.IsFolder = true;
                        oNewItem.URI = sRootPath + "Scripts";
                        oNewItem.sName = "Scripts";
                        oListing.Add(oNewItem);

                        #endregion
                    }
                }
                string sJsonString = JsonConvert.SerializeObject(oListing);
                var oResponse = JsonConvert.DeserializeObject(sJsonString);
                return Json(sJsonString);
            }
            catch
            {
                var oResponse = Json(oListing);
                return oResponse;
            }
        }
        public JsonResult GetDirectoryChildItems(string _sPath)
        {
            List<AriesCMS.Models.FileManagerList> oListing = new List<Models.FileManagerList>();
            try
            {
                string sBaseULR = Request.Url.Scheme + "://" + Request.Url.Authority + "/";
                string sRootPath = Request.PhysicalApplicationPath.ToString();

                if (oSystem.GetCurrentUser())
                {
                    ViewBag.iSiteID = oSystem.rsGlobalVeriables.SiteID;

                    if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                    {
                        #region Process
                        ViewBag.bLoggedIn = true;

                        int iIDCounter = 0;

                        string[] oDirectories = Directory.GetDirectories(_sPath);

                        foreach (string oDir in oDirectories)
                        {
                            iIDCounter++;

                            AriesCMS.Models.FileManagerList oNewItem = new Models.FileManagerList();
                            oNewItem.ID = iIDCounter.ToString();
                            oNewItem.IsFolder = true;
                            oNewItem.URI = oDir;

                            string sFolderName = oDir;
                            int iIndexOf = sFolderName.LastIndexOf('\\');
                            sFolderName = sFolderName.Remove(0, iIndexOf + 1);

                            oNewItem.sName = sFolderName;
                            oListing.Add(oNewItem);
                        }


                        ViewBag.iTotalRecordCount = oListing.Count;

                        #endregion
                    }
                }
                string sJsonString = JsonConvert.SerializeObject(oListing);
                var oResponse = JsonConvert.DeserializeObject(sJsonString);
                return Json(sJsonString);
            }
            catch
            {
                var oResponse = Json(oListing);
                return oResponse;
            }
        }
        public JsonResult GetDirectoryFiles(string _sPath)
        {
            List<AriesCMS.Models.FileManagerList> oListing = new List<Models.FileManagerList>();
            try
            {
                string sBaseULR = Request.Url.Scheme + "://" + Request.Url.Authority + "/";
                string sRootPath = Request.PhysicalApplicationPath.ToString();

                if (oSystem.GetCurrentUser())
                {
                    ViewBag.iSiteID = oSystem.rsGlobalVeriables.SiteID;

                    if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                    {
                        #region Process
                        ViewBag.bLoggedIn = true;

                        int iIDCounter = 0;

                        string sRootFolder = _sPath;

                        string sFileBaseURL = _sPath.Replace(sRootPath, "");
                        sFileBaseURL = sFileBaseURL.Replace("\\", "/");



                        string[] oFiles = Directory.GetFiles(_sPath);

                        foreach (string oF in oFiles)
                        {
                            iIDCounter++;

                            string sFileName = oF;
                            int iIndexOf = sFileName.LastIndexOf('\\');
                            sFileName = sFileName.Remove(0, iIndexOf + 1);

                            AriesCMS.Models.FileManagerList oNewItem = new Models.FileManagerList();
                            oNewItem.ID = iIDCounter.ToString();
                            oNewItem.IsFolder = false;
                            oNewItem.sName = sFileName;
                            oNewItem.URI = oF;
                            oNewItem.URL = sBaseULR + sFileBaseURL + "/" + sFileName;
                            #region Check for image file
                            try
                            {
                                if (sFileName.Contains(".png"))
                                {
                                    oNewItem.IsImage = true;
                                }
                                else if (sFileName.Contains(".jpg"))
                                {
                                    oNewItem.IsImage = true;
                                }
                                else if (sFileName.Contains(".gif"))
                                {
                                    oNewItem.IsImage = true;
                                }
                                else if (sFileName.Contains(".bmp"))
                                {
                                    oNewItem.IsImage = true;
                                }
                                else if (sFileName.Contains(".ico"))
                                {
                                    oNewItem.IsImage = true;
                                }

                            }
                            catch
                            {
                            }
                            #endregion
                            oListing.Add(oNewItem);
                        }


                        ViewBag.iTotalRecordCount = oListing.Count;

                        #endregion
                    }
                }
                string sJsonString = JsonConvert.SerializeObject(oListing);
                var oResponse = JsonConvert.DeserializeObject(sJsonString);
                return Json(sJsonString);
            }
            catch
            {
                var oResponse = Json(oListing);
                return oResponse;
            }
        }

        //public ActionResult UploadFiles(FormCollection oForms)
        //{
        //    try
        //    {
        //        if (Request != null)
        //        {
        //            HttpPostedFileBase oFile = Request.Files["UploadFiles"];
        //            if (oFile != null)
        //            {
        //                if (oFile.ContentLength > 0)
        //                {
        //                    if (!String.IsNullOrEmpty(oFile.FileName))
        //                    {
        //                        byte[] bytFile = new byte[oFile.ContentLength];
        //                        oFile.InputStream.Read(bytFile, 0, System.Convert.ToInt32(oFile.ContentLength));

        //                    }
        //                }
        //            }
        //        }
        //    }
        //    catch
        //    {
        //    }
        //    return RedirectToAction("FilesManager_List");
        //}

        [HttpPost]
        public ActionResult UploadFiles(FormCollection fc, HttpPostedFileBase UploadFiles, string _Base = "")
        {
            Set_Client_NavSettings("UploadFiles");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            string sBaseULR = Request.Url.Scheme + "://" + Request.Url.Authority + "/";
            string sRootPath = Request.PhysicalApplicationPath.ToString();
            string sRefURL = Request.UrlReferrer.AbsoluteUri.ToString();
            try
            {

                if (oSystem.GetCurrentUser())
                {
                    Set_ViewBag_Global();
                    Set_ViewBag_UserInfo();
                }

                if (String.IsNullOrEmpty(_Base))
                {
                    try
                    {
                        _Base = fc["hlblCurrentFolderPath"].ToString();
                    }
                    catch
                    {
                    }
                }


                if (UploadFiles != null)
                {
                    if (UploadFiles.ContentLength > 0)
                    {
                        if (!String.IsNullOrEmpty(UploadFiles.FileName))
                        {
                            FileInfo oFLCheck = new FileInfo(sRootPath + "Themes/" + UploadFiles.FileName);
                            if (!oFLCheck.Exists)
                            {
                                if (!String.IsNullOrEmpty(_Base))
                                {
                                    UploadFiles.SaveAs(_Base + "\\" + UploadFiles.FileName);
                                    sFileUploadResults = "File Uploaded! - " + _Base + "\\" + UploadFiles.FileName;
                                }
                                else
                                {
                                    UploadFiles.SaveAs(sRootPath + "Themes\\" + UploadFiles.FileName);
                                    sFileUploadResults = "File Uploaded! - " + "Themes\\" + UploadFiles.FileName;
                                }
                            }
                            else
                            {
                                sFileUploadResults = "Sorry there is already a file with the same name present!";
                            }
                        }
                    }
                }
            }
            catch
            {
            }
            if (sRefURL.Contains("FilesManager_ListPop"))
            {
                return RedirectToAction("FilesManager_ListPop", new { sMessage = sFileUploadResults });
            }
            else
            {
                return RedirectToAction("FilesManager_List", new { sMessage = sFileUploadResults });
            }
        }

        [HttpPost]
        [ValidateInput(false)]
        public ActionResult GetDirectoryFilesView(string _sPath)
        {
            Set_Client_NavSettings("GetDirectoryFilesView");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            List<AriesCMS.Models.FileManagerList> oListing = new List<Models.FileManagerList>();
            string sLocalDefaultView = sModuleBase + sFileManagerList;
            try
            {
                string sBaseULR = Request.Url.Scheme + "://" + Request.Url.Authority + "/";
                string sRootPath = Request.PhysicalApplicationPath.ToString();

                if (oSystem.GetCurrentUser())
                {
                    Set_ViewBag_Global();
                    Set_ViewBag_UserInfo();

                    if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                    {
                        #region Process
                        #region If View is not set try to get it
                        if (String.IsNullOrEmpty(_sViewToLoad))
                        {
                            if (Session["_sView"] != null)
                            {
                                _sViewToLoad = Session["_sView"].ToString();
                            }
                            else
                            {
                                _sViewToLoad = sLocalDefaultView;
                            }
                        }
                        #endregion

                        int iIDCounter = 0;

                        string sRootFolder = _sPath;

                        string sFileBaseURL = _sPath.Replace(sRootPath, "");
                        sFileBaseURL = sFileBaseURL.Replace("\\", "/");



                        string[] oFiles = Directory.GetFiles(_sPath);

                        foreach (string oF in oFiles)
                        {
                            iIDCounter++;

                            string sFileName = oF;
                            int iIndexOf = sFileName.LastIndexOf('\\');
                            sFileName = sFileName.Remove(0, iIndexOf + 1);

                            AriesCMS.Models.FileManagerList oNewItem = new Models.FileManagerList();
                            oNewItem.ID = iIDCounter.ToString();
                            oNewItem.IsFolder = false;
                            oNewItem.sName = sFileName;
                            oNewItem.URI = oF;
                            oNewItem.URL = sBaseULR + sFileBaseURL + "/" + sFileName;
                            oListing.Add(oNewItem);
                        }


                        ViewBag.iTotalRecordCount = oListing.Count;

                        #endregion
                    }
                }

                return View(_sViewToLoad, oListing);
            }
            catch
            {
                return View(sLocalDefaultView, oListing);
            }
        }

        [HttpPost]
        public ActionResult FilesManager_AddUpdate(DEF_Countries.RecordObject _rec)
        {
            Set_Client_NavSettings("FilesManager_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form Countries
        public ActionResult Countries_List(FormCollection fc, string Search, int page = 1)
        {
            Set_Client_NavSettings("Countries_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sCountries_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_Countries dbInteraction = new DINT_Countries(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_Countries.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();

                    if (!String.IsNullOrEmpty(Search))
                    {
                        ViewBag.bSearched = true;

                        DataParameter pParameter = new DataParameter("sName", "'%" + Search + "%'", "string", 4, "sName", " LIKE ", "");
                        lstParameters.Add(pParameter);

                        pParameter = new DataParameter("sAbbreviation", "'%" + Search + "%'", "string", 5, "sAbbreviation", " LIKE ", " OR ");
                        lstParameters.Add(pParameter);

                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_Countries.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult Countries_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("Countries_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sCountries_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based Pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_Countries dbInteraction = new DINT_Countries(oSystem.cnCon);
                        List<DEF_Countries.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_Countries.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);


                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region Key based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_Countries dbInteraction = new DINT_Countries(oSystem.cnCon);
                        List<DEF_Countries.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_Countries.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);


                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult Countries_Create()
        {
            Set_Client_NavSettings("Countries_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sCountries_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_Countries.RecordObject recRecord = new DEF_Countries.RecordObject();

                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);

                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public ActionResult Countries_AddUpdate(DEF_Countries.RecordObject _rec)
        {
            Set_Client_NavSettings("Countries_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sCountries_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_Countries dbInteraction = new DINT_Countries(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtDateUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);

                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("Countries_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_Countries dbInteraction = new DINT_Countries(oSystem.cnCon);

                                    _rec.dtDateUpdated = DateTime.Now;


                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("Countries_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);
                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult Countries_Delete(int id)
        {
            Set_Client_NavSettings("Countries_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_Countries dbInteraction = new DINT_Countries(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_Countries.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_Countries.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("Countries_List");
                    }
                    else
                    {
                        return RedirectToAction("Countries_List");
                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form CountryLanguages
        public ActionResult CountryLanguages_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("CountryLanguages_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sCountryLanguages_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_CountryLanguages dbInteraction = new DINT_CountryLanguages(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_CountryLanguages.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();

                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }


                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sName", "'" + Search + "'", "string", 10, "sName", " = ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_CountryLanguages.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult CountryLanguages_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("CountryLanguages_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sCountryLanguages_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_CountryLanguages dbInteraction = new DINT_CountryLanguages(oSystem.cnCon);
                        List<DEF_CountryLanguages.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                //DEF_CountryLanguages.RecordObject recRecord = dbSearch[0];
                                ACMSDBView.CountryLanguagesViewModel recRecord = new ACMSDBView.CountryLanguagesViewModel();
                                recRecord.CountryLanguages = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.CountryLanguages.iCountryID;
                                ViewBag.sParentID = recRecord.CountryLanguages.sCountryID;


                                recRecord.Get_Countries(oSystem.cnCon);

                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_CountryLanguages dbInteraction = new DINT_CountryLanguages(oSystem.cnCon);
                        List<DEF_CountryLanguages.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                //DEF_CountryLanguages.RecordObject recRecord = dbSearch[0];
                                ACMSDBView.CountryLanguagesViewModel recRecord = new ACMSDBView.CountryLanguagesViewModel();
                                recRecord.CountryLanguages = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.CountryLanguages.iCountryID;
                                ViewBag.sParentID = recRecord.CountryLanguages.sCountryID;

                                recRecord.Get_Countries(oSystem.cnCon);


                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult CountryLanguages_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("CountryLanguages_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sCountryLanguages_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    //DEF_CountryLanguages.RecordObject recRecord = new DEF_CountryLanguages.RecordObject();
                    ACMSDBView.CountryLanguagesViewModel recRecord = new ACMSDBView.CountryLanguagesViewModel();

                    recRecord.CountryLanguages.iCountryID = _iParentID;
                    recRecord.CountryLanguages.sCountryID = _sParentID;

                    recRecord.Get_Countries(oSystem.cnCon);

                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);




                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public ActionResult CountryLanguages_AddUpdate(ACMSDBView.CountryLanguagesViewModel _rec)
        {
            Set_Client_NavSettings("CountryLanguages_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sCountryLanguages_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.CountryLanguages.ID == null) || (_rec.CountryLanguages.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.CountryLanguages.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.CountryLanguages.iCountryID;
                            ViewBag.sParentID = _rec.CountryLanguages.sCountryID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_CountryLanguages dbInteraction = new DINT_CountryLanguages(oSystem.cnCon);

                                _rec.CountryLanguages.sControl = Guid.NewGuid().ToString();
                                _rec.CountryLanguages.dtDateCreated = DateTime.Now;
                                _rec.CountryLanguages.dtDateUpdated = DateTime.Now;

                                _rec.Get_Countries(oSystem.cnCon);

                                foreach (SelectListItem oV in _rec.Countries)
                                {
                                    if (oV.Value == _rec.CountryLanguages.iCountryID.ToString())
                                    {
                                        _rec.CountryLanguages.sCountryID = oV.Text;
                                    }
                                }
                                dbInteraction.Insert_SQL(_rec.CountryLanguages);


                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("CountryLanguages_Details", new { key = _rec.CountryLanguages.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.CountryLanguages.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_CountryLanguages dbInteraction = new DINT_CountryLanguages(oSystem.cnCon);

                                    _rec.CountryLanguages.dtDateUpdated = DateTime.Now;

                                    _rec.Get_Countries(oSystem.cnCon);

                                    foreach (SelectListItem oV in _rec.Countries)
                                    {
                                        if (oV.Value == _rec.CountryLanguages.iCountryID.ToString())
                                        {
                                            _rec.CountryLanguages.sCountryID = oV.Text;
                                        }
                                    }


                                    dbInteraction.Update_SQL(_rec.CountryLanguages);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("CountryLanguages_Details", new { id = _rec.CountryLanguages.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);

                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult CountryLanguages_Delete(int id)
        {
            Set_Client_NavSettings("CountryLanguages_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_CountryLanguages dbInteraction = new DINT_CountryLanguages(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_CountryLanguages.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_CountryLanguages.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iCountryID;
                                        ViewBag.sParentID = recRecord.sCountryID;
                                        iParentID = recRecord.iCountryID;
                                        sParentID = recRecord.sCountryID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("CountryLanguages_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("CountryLanguages_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }


        [HttpPost]
        public JsonResult GetCountryLanguages()
        {
            try
            {
                if (oSystem.OpenDataConnection())
                {
                    DINT_CountryLanguages dbInteraction = new DINT_CountryLanguages(oSystem.cnCon);

                    List<DEF_CountryLanguages.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();

                    //DataParameter pParameter = new DataParameter("iParentID", "'" + _ParentID + "'", "int", 1, "iParentID", " = ", "");
                    //lstParameters.Add(pParameter);

                    dbSearch = dbInteraction.Get(lstParameters);
                    List<SelectListItem> CountryLanguages = new List<SelectListItem>();

                    if (dbSearch != null)
                    {
                        foreach (DEF_CountryLanguages.RecordObject oV in dbSearch)
                        {
                            CountryLanguages.Add(new SelectListItem { Selected = false, Text = oV.sCountryID + " " + oV.sName, Value = oV.ID.ToString() });
                        }


                    }


                    var oResponse = Json(CountryLanguages);
                    return oResponse;
                }
                var oResponseError = Json(new { RESPONSE = "ERROR" });
                return oResponseError;
            }
            catch
            {
                var oResponseError1 = Json(new { RESPONSE = "ERROR" });
                return oResponseError1;
            }
        }
        #endregion

        #region Form Roles
        public ActionResult Roles_List(FormCollection fc, string Search, int page = 1)
        {
            Set_Client_NavSettings("Roles_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sRoles_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_Roles dbInteraction = new DINT_Roles(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_Roles.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();

                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sName", "'%" + Search + "%'", "string", 10, "sName", " LIKE ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iRow + iMaxRows);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_Roles.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult Roles_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("Roles_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sRoles_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_Roles dbInteraction = new DINT_Roles(oSystem.cnCon);
                        List<DEF_Roles.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                ACMSDBView.RolesViewModel recRecord = new RolesViewModel();
                                recRecord.Roles = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                recRecord.Build_AccessLvels();
                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_Roles dbInteraction = new DINT_Roles(oSystem.cnCon);
                        List<DEF_Roles.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                ACMSDBView.RolesViewModel recRecord = new RolesViewModel();
                                recRecord.Roles = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                recRecord.Build_AccessLvels();
                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult Roles_Create()
        {
            Set_Client_NavSettings("Roles_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sRoles_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    ACMSDBView.RolesViewModel recRecord = new RolesViewModel();
                    recRecord.Build_AccessLvels();

                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public ActionResult Roles_AddUpdate(ACMSDBView.RolesViewModel _rec)
        {
            Set_Client_NavSettings("Roles_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sRoles_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if (_rec.Roles != null)
                        {
                            if ((_rec.Roles.ID == null) || (_rec.Roles.ID == 0))
                            {
                                ViewBag.bAddNew = true;
                                _rec.Roles.ID = -1;
                                ModelState.Remove("ID");
                            }

                            if (ModelState.IsValid)
                            {
                                if (ViewBag.bAddNew == true)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();

                                    DINT_Roles dbInteraction = new DINT_Roles(oSystem.cnCon);

                                    _rec.Roles.sControl = Guid.NewGuid().ToString();
                                    _rec.Roles.dtDateCreated = DateTime.Now;
                                    _rec.Roles.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Insert_SQL(_rec.Roles);

                                    _rec.Build_AccessLvels();

                                    oSystem.CloseDataConnection();
                                    //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                    #endregion
                                    return RedirectToAction("Roles_Details", new { key = _rec.Roles.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_sViewToLoad, _rec);
                                    //return View(_rec);
                                }
                                else
                                {
                                    if (_rec.Roles.ID > 0)
                                    {
                                        #region
                                        ViewBag.bError = false;
                                        ViewBag.bAddNew = false;
                                        ViewBag.bSaved = true;
                                        ViewBag.sErrorMessage = "";
                                        oSystem.OpenDataConnection();


                                        DINT_Roles dbInteraction = new DINT_Roles(oSystem.cnCon);

                                        _rec.Roles.dtLastUpdated = DateTime.Now;

                                        dbInteraction.Update_SQL(_rec.Roles);

                                        _rec.Build_AccessLvels();

                                        oSystem.CloseDataConnection();
                                        #endregion
                                        //return View(_sViewToLoad, _rec);
                                        return RedirectToAction("Roles_Details", new { id = _rec.Roles.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                        //return View(_rec);
                                    }
                                    else
                                    {
                                        ViewBag.bError = true;
                                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                        oPage.DataModelsPrimary = _rec;
                                        oPage.DataModelsSub.Add(oSystem);
                                        oPage.AuthenticatedUser = true;
                                        oPage.PartialViewToLoad = _sViewToLoad;
                                        return View(sModuleBase + sBasePage, oPage);

                                    }
                                }
                            }
                            else
                            {
                                ViewBag.bError = true;
                                ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                                oPage.DataModelsPrimary = _rec;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult Roles_Delete(int id)
        {
            Set_Client_NavSettings("Roles_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_Roles dbInteraction = new DINT_Roles(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_Roles.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_Roles.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("Roles_List");
                    }
                    else
                    {
                        return RedirectToAction("Roles_List");
                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form Roles_Access

        string sRoles_Access_Details = "/views/Forms/Roles_Access_Details.cshtml";
        string sRoles_Access_List = "/views/Forms/Roles_Access_List.cshtml";

        public ActionResult Roles_Access_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("Roles_Access_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sRoles_Access_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_Roles_Access dbInteraction = new DINT_Roles_Access(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_Roles_Access.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }


                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        lstParameters = new List<DataParameter>();
                        //if (_iParentID > 0)
                        //{
                        //    DataParameter pParameter = new DataParameter("sTitle", "'%" + Search + "%'", "string", 11, "sTitle", " LIKE ", " AND ");
                        //    lstParameters.Add(pParameter);
                        //    iTotalRows = dbInteraction.GetRowCount(lstParameters);
                        //}
                        //else
                        //{
                        //    DataParameter pParameter = new DataParameter("sTitle", "'%" + Search + "%'", "string", 11, "sTitle", " LIKE ", "");
                        //    lstParameters.Add(pParameter);
                        //    iTotalRows = dbInteraction.GetRowCount(lstParameters);
                        //}
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_Roles_Access.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult Roles_Access_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("Roles_Access_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sRoles_Access_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_Roles_Access dbInteraction = new DINT_Roles_Access(oSystem.cnCon);
                        List<DEF_Roles_Access.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_Roles_Access.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;

                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_Roles_Access dbInteraction = new DINT_Roles_Access(oSystem.cnCon);
                        List<DEF_Roles_Access.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_Roles_Access.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }

                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult Roles_Access_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("Roles_Access_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sRoles_Access_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_Roles_Access.RecordObject recRecord = new DEF_Roles_Access.RecordObject();

                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;


                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public ActionResult Roles_Access_AddUpdate(DEF_Roles_Access.RecordObject _rec)
        {
            Set_Client_NavSettings("Roles_Access_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sRoles_Access_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_Roles_Access dbInteraction = new DINT_Roles_Access(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);



                                //List<DataParameter> lstParameters = new List<DataParameter>();
                                //DataParameter pParameter = new DataParameter("sControl", "'" + _rec.WebSitePage.sControl.ToString() + "'", "sControl", 3, "sControl", " = ", "");
                                //lstParameters.Add(pParameter);

                                //List<DEF_Roles_Access.RecordObject> dbSearch = dbInteraction.Get(lstParameters);
                                //if (dbSearch != null)
                                //{
                                //  if (dbSearch.Count > 0)
                                //  {
                                //      _rec = dbSearch[0];
                                //      ViewBag.iParentID = _rec.iParentID;
                                //      ViewBag.sParentID = _rec.sParentID;
                                //  }
                                //}


                                oSystem.CloseDataConnection();
                                //return RedirectToAction("Roles_Access_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                #endregion
                                return RedirectToAction("Roles_Access_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_Roles_Access dbInteraction = new DINT_Roles_Access(oSystem.cnCon);

                                    _rec.dtLastUpdated = DateTime.Now;
                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("Roles_Access_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    oSystem.CloseDataConnection();
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    //return RedirectToAction("StatesDetails", new { id = 0, _bOverrideScreenMessage = true });

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);
                                }
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            //return RedirectToAction("StatesDetails", new { id = 0, _bOverrideScreenMessage = true });

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);
                        }
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        //return RedirectToAction("StatesDetails", new { id = 0, _bOverrideScreenMessage = true });

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult Roles_Access_Delete(int id)
        {
            Set_Client_NavSettings("Roles_Access_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_Roles_Access dbInteraction = new DINT_Roles_Access(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_Roles_Access.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_Roles_Access.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        //iParentID = recRecord.iParentID;
                                        //sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }
                        oSystem.CloseDataConnection();
                        return RedirectToAction("Roles_Access_List", new { _iParentID = iParentID, _sParentID = sParentID });
                        //return RedirectToAction("Roles_Access_List");
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return RedirectToAction("Roles_Access_List", new { _iParentID = iParentID, _sParentID = sParentID });
                        //return RedirectToAction("Roles_Access_List");
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form States
        public ActionResult States_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("States_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sStates_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_States dbInteraction = new DINT_States(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_States.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iCountryID", "'" + _iParentID + "'", "int", 8, "iCountryID", " = ", "");
                        lstParameters.Add(pParameter);
                    }

                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;
                        DataParameter pParameter = new DataParameter("sName", "'" + Search + "'", "string", 4, "sName", " = ", "");
                        lstParameters.Add(pParameter);
                        lstParameters = new List<DataParameter>();
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_States.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult States_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("States_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sStates_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_States dbInteraction = new DINT_States(oSystem.cnCon);
                        List<DEF_States.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                ACMSDBView.StateViewModel recRecord = new StateViewModel();
                                recRecord.State = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.State.iCountryID;
                                ViewBag.sParentID = recRecord.State.sCountryID;

                                recRecord.Get_Countries(oSystem.cnCon);

                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 1, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_States dbInteraction = new DINT_States(oSystem.cnCon);
                        List<DEF_States.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                ACMSDBView.StateViewModel recRecord = new StateViewModel();
                                recRecord.State = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.State.iCountryID;
                                ViewBag.sParentID = recRecord.State.sCountryID;
                                recRecord.Get_Countries(oSystem.cnCon);
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult States_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("States_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sStates_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    ACMSDBView.StateViewModel recRecord = new StateViewModel();
                    recRecord.State = new DEF_States.RecordObject();
                    recRecord.Get_Countries(oSystem.cnCon);

                    recRecord.State.iCountryID = _iParentID;
                    recRecord.State.sCountryID = _sParentID;

                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public ActionResult States_AddUpdate(ACMSDBView.StateViewModel _rec)
        {
            Set_Client_NavSettings("States_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sStates_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.State.ID == null) || (_rec.State.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.State.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.State.iCountryID;
                            ViewBag.sParentID = _rec.State.sCountryID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_States dbInteraction = new DINT_States(oSystem.cnCon);

                                _rec.State.sControl = Guid.NewGuid().ToString();
                                _rec.State.dtDateCreated = DateTime.Now;
                                _rec.State.dtDateUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec.State);

                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("States_Details", new { key = _rec.State.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.State.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_States dbInteraction = new DINT_States(oSystem.cnCon);

                                    _rec.State.dtDateUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec.State);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("States_Details", new { id = _rec.State.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";


                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);

                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult States_Delete(int id)
        {
            Set_Client_NavSettings("States_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_States dbInteraction = new DINT_States(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_States.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_States.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iCountryID;
                                        ViewBag.sParentID = recRecord.sCountryID;
                                        iParentID = recRecord.iCountryID;
                                        sParentID = recRecord.sCountryID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("States_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("States_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form SystemMaster
        public ActionResult SystemMaster_List(FormCollection fc, string Search, int page = 1)
        {
            Set_Client_NavSettings("SystemMaster_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sSystemMaster_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_SystemMaster dbInteraction = new DINT_SystemMaster(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_SystemMaster.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();

                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        DataParameter pParameter = new DataParameter("sName", "'" + Search + "'", "string", 8, "sName", " = ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_SystemMaster.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult SystemMaster_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("SystemMaster_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sSystemMaster_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_SystemMaster dbInteraction = new DINT_SystemMaster(oSystem.cnCon);
                        List<DEF_SystemMaster.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_SystemMaster.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 1, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_SystemMaster dbInteraction = new DINT_SystemMaster(oSystem.cnCon);
                        List<DEF_SystemMaster.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_SystemMaster.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult SystemMaster_Create()
        {
            Set_Client_NavSettings("SystemMaster_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sSystemMaster_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_SystemMaster.RecordObject recRecord = new DEF_SystemMaster.RecordObject();

                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public ActionResult SystemMaster_AddUpdate(DEF_SystemMaster.RecordObject _rec)
        {
            Set_Client_NavSettings("SystemMaster_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sSystemMaster_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_SystemMaster dbInteraction = new DINT_SystemMaster(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);

                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("SystemMaster_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_SystemMaster dbInteraction = new DINT_SystemMaster(oSystem.cnCon);

                                    _rec.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("SystemMaster_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);

                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult SystemMaster_Delete(int id)
        {
            Set_Client_NavSettings("SystemMaster_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_SystemMaster dbInteraction = new DINT_SystemMaster(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_SystemMaster.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_SystemMaster.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("SystemMaster_List");
                    }
                    else
                    {
                        return RedirectToAction("SystemMaster_List");
                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form SystemModules
        public ActionResult SystemModules_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("SystemModules_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sSystemModules_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_SystemModules dbInteraction = new DINT_SystemModules(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_SystemModules.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();

                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }
                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        DataParameter pParameter = new DataParameter("sName", "'" + Search + "'", "string", 10, "sName", " = ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);


                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_SystemModules.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult SystemModules_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("SystemModules_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sSystemModules_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_SystemModules dbInteraction = new DINT_SystemModules(oSystem.cnCon);
                        List<DEF_SystemModules.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_SystemModules.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);


                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 1, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_SystemModules dbInteraction = new DINT_SystemModules(oSystem.cnCon);
                        List<DEF_SystemModules.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_SystemModules.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);


                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult SystemModules_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("SystemModules_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sSystemModules_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_SystemModules.RecordObject recRecord = new DEF_SystemModules.RecordObject();
                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;

                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);


                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public ActionResult SystemModules_AddUpdate(DEF_SystemModules.RecordObject _rec)
        {
            Set_Client_NavSettings("SystemModules_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sSystemModules_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_SystemModules dbInteraction = new DINT_SystemModules(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);

                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("SystemModules_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_SystemModules dbInteraction = new DINT_SystemModules(oSystem.cnCon);

                                    _rec.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("SystemModules_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);

                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult SystemModules_Delete(int id)
        {
            Set_Client_NavSettings("SystemModules_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_SystemModules dbInteraction = new DINT_SystemModules(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_SystemModules.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_SystemModules.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("SystemModules_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("SystemModules_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form UserRoles
        public ActionResult UserRoles_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("UserRoles_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUserRoles_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_UserRoles dbInteraction = new DINT_UserRoles(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_UserRoles.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }

                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sRoleID", "'%" + Search + "%'", "string", 11, "sRoleID", " LIKE ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_UserRoles.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult UserRoles_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("UserRoles_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUserRoles_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        ACMSDBView.UserRolesViewModel recRecord = new UserRolesViewModel();
                        if (recRecord.GetView(oSystem.cnCon, id))
                        {
                            if (recRecord.SecurityRoles == null)
                            {
                                recRecord.Get_Roles(oSystem.cnCon);
                            }
                            else if (recRecord.SecurityRoles.Count <= 0)
                            {
                                recRecord.Get_Roles(oSystem.cnCon);
                            }

                            ViewBag.iParentID = recRecord.UserRole.iParentID;
                            ViewBag.sParentID = recRecord.UserRole.sParentID;
                            oSystem.CloseDataConnection();
                            oPage.DataModelsPrimary = recRecord;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_UserRoles dbInteraction = new DINT_UserRoles(oSystem.cnCon);
                        List<DEF_UserRoles.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                ACMSDBView.UserRolesViewModel recRecord = new UserRolesViewModel();
                                recRecord.UserRole = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                recRecord.Get_Roles(oSystem.cnCon);

                                ViewBag.iParentID = recRecord.UserRole.iParentID;
                                ViewBag.sParentID = recRecord.UserRole.sParentID;
                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult UserRoles_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("UserRoles_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUserRoles_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    ACMSDBView.UserRolesViewModel recRecord = new ACMSDBView.UserRolesViewModel();
                    recRecord.UserRole = new DEF_UserRoles.RecordObject();
                    recRecord.UserRole.iParentID = _iParentID;
                    recRecord.UserRole.sParentID = _sParentID;

                    recRecord.Get_Roles(oSystem.cnCon);

                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public ActionResult UserRoles_AddUpdate(ACMSDBView.UserRolesViewModel _rec)
        {
            Set_Client_NavSettings("UserRoles_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUserRoles_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.UserRole.ID == null) || (_rec.UserRole.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.UserRole.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.UserRole.iParentID;
                            ViewBag.sParentID = _rec.UserRole.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_UserRoles dbInteraction = new DINT_UserRoles(oSystem.cnCon);

                                _rec.UserRole.sControl = Guid.NewGuid().ToString();
                                _rec.UserRole.dtDateCreated = DateTime.Now;
                                _rec.UserRole.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec.UserRole);

                                _rec.Get_Roles(oSystem.cnCon);

                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("UserRoles_Details", new { key = _rec.UserRole.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.UserRole.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_UserRoles dbInteraction = new DINT_UserRoles(oSystem.cnCon);

                                    _rec.UserRole.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec.UserRole);

                                    _rec.Get_Roles(oSystem.cnCon);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("UserRoles_Details", new { id = _rec.UserRole.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);

                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult UserRoles_Delete(int id)
        {
            Set_Client_NavSettings("UserRoles_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_UserRoles dbInteraction = new DINT_UserRoles(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_UserRoles.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_UserRoles.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("UserRoles_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("UserRoles_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form Users
        public ActionResult Users_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("Users_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.IsAdmin = false;
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsers_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();

                    if (oSystem.CurrentUser.UserView.User.ID == 1)
                    {
                        ViewBag.IsAdmin = true;
                    }

                    DINT_Users dbInteraction = new DINT_Users(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_Users.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    //if (_iParentID > 0)
                    //{
                    //    DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                    //    lstParameters.Add(pParameter);
                    //}

                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;
                        lstParameters = new List<DataParameter>();

                        DataParameter pParameter = new DataParameter("sUserName", "'%" + Search + "%'", "string", 11, "sUserName", " LIKE ", "");
                        lstParameters.Add(pParameter);

                        pParameter = new DataParameter("sFName", "'%" + Search + "%'", "string", 14, "sFName", " LIKE ", " OR ");
                        lstParameters.Add(pParameter);

                        pParameter = new DataParameter("sLName", "'%" + Search + "%'", "string", 16, "sLName", " LIKE ", " OR ");
                        lstParameters.Add(pParameter);


                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_Users.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult Users_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("Users_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsers_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_Users dbInteraction = new DINT_Users(oSystem.cnCon);
                        List<DEF_Users.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                ACMSDBView.UserViewModel recRecord = new UserViewModel(oSystem.cnCon);
                                recRecord.User = dbSearch[0];
                                recRecord.CurrentPassword = dbSearch[0].sPassword;
                                recRecord.GetUserProperties(oSystem.cnCon, dbSearch[0].ID);

                                recRecord.Get_Roles(oSystem.cnCon);
                                recRecord.Get_States(oSystem.cnCon);

                                ViewBag.iParentID = recRecord.User.iParentID;
                                ViewBag.sParentID = recRecord.User.sParentID;

                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 1, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_Users dbInteraction = new DINT_Users(oSystem.cnCon);
                        List<DEF_Users.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                ACMSDBView.UserViewModel recRecord = new UserViewModel(oSystem.cnCon);

                                recRecord.User = dbSearch[0];
                                recRecord.CurrentPassword = dbSearch[0].sPassword;
                                recRecord.GetUserProperties(oSystem.cnCon, dbSearch[0].ID);


                                recRecord.Get_Roles(oSystem.cnCon);
                                recRecord.Get_States(oSystem.cnCon);

                                ViewBag.iParentID = recRecord.User.iParentID;
                                ViewBag.sParentID = recRecord.User.sParentID;

                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult Users_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("Users_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsers_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    ACMSDBView.UserViewModel recRecord = new ACMSDBView.UserViewModel(oSystem.cnCon);
                    recRecord.BuildAnanymousUser();
                    recRecord.User.iParentID = _iParentID;
                    recRecord.User.sParentID = _sParentID;

                    recRecord.User.dtDateOfBirth = DateTime.Parse("01/01/1901");
                    recRecord.User.dtLastLoggedIn = DateTime.Parse("01/01/1901");


                    recRecord.Get_Roles(oSystem.cnCon);
                    recRecord.Get_States(oSystem.cnCon);

                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public ActionResult Users_AddUpdate(ACMSDBView.UserViewModel _rec)
        {
            Set_Client_NavSettings("Users_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsers_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.User.ID == null) || (_rec.User.ID <= 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.User.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.User.iParentID;
                            ViewBag.sParentID = _rec.User.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_Users dbInteraction = new DINT_Users(oSystem.cnCon);

                                _rec.User.sControl = Guid.NewGuid().ToString();
                                _rec.User.dtDateCreated = DateTime.Now;
                                _rec.User.dtLastUpdated = DateTime.Now;

                                _rec.User.sPassword = oSystem.rsGlobalVeriables.oEncryption.Encrypt(_rec.User.sPassword);
                                _rec.CurrentPassword = _rec.User.sPassword;

                                dbInteraction.Insert_SQL(_rec.User);

                                _rec.Get_Roles(oSystem.cnCon);
                                _rec.Get_States(oSystem.cnCon);

                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("Users_Details", new { key = _rec.User.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.User.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_Users dbInteraction = new DINT_Users(oSystem.cnCon);

                                    _rec.User.dtLastUpdated = DateTime.Now;

                                    if (String.IsNullOrEmpty(_rec.User.sPassword))
                                    {
                                        _rec.User.sPassword = _rec.CurrentPassword;
                                    }
                                    else
                                    {
                                        _rec.User.sPassword = oSystem.rsGlobalVeriables.oEncryption.Encrypt(_rec.User.sPassword);
                                        _rec.CurrentPassword = _rec.User.sPassword;
                                    }

                                    dbInteraction.Update_SQL(_rec.User);

                                    _rec.Get_Roles(oSystem.cnCon);
                                    _rec.Get_States(oSystem.cnCon);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("Users_Details", new { id = _rec.User.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);

                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult Users_Delete(int id)
        {
            Set_Client_NavSettings("Users_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_Users dbInteraction = new DINT_Users(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_Users.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_Users.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("Users_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("Users_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form UsersChats

        string sUsersChats_Details = "/views/Forms/UsersChats_Details.cshtml";
        string sUsersChats_List = "/views/Forms/UsersChats_List.cshtml";

        public ActionResult UsersChats_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsersChats_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_UsersChats dbInteraction = new DINT_UsersChats(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_UsersChats.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }


                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        lstParameters = new List<DataParameter>();
                        if (_iParentID > 0)
                        {
                            DataParameter pParameter = new DataParameter("sTitle", "'%" + Search + "%'", "string", 11, "sTitle", " LIKE ", " AND ");
                            lstParameters.Add(pParameter);
                            iTotalRows = dbInteraction.GetRowCount(lstParameters);
                        }
                        else
                        {
                            DataParameter pParameter = new DataParameter("sTitle", "'%" + Search + "%'", "string", 11, "sTitle", " LIKE ", "");
                            lstParameters.Add(pParameter);
                            iTotalRows = dbInteraction.GetRowCount(lstParameters);
                        }
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_UsersChats.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult UsersChats_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsersChats_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_UsersChats dbInteraction = new DINT_UsersChats(oSystem.cnCon);
                        List<DEF_UsersChats.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_UsersChats.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_UsersChats dbInteraction = new DINT_UsersChats(oSystem.cnCon);
                        List<DEF_UsersChats.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_UsersChats.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }

                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }


        public ActionResult UsersChats_Create(int _iParentID = 0, string _sParentID = "")
        {
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsersChats_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_UsersChats.RecordObject recRecord = new DEF_UsersChats.RecordObject();

                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;


                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public ActionResult UsersChats_AddUpdate(DEF_UsersChats.RecordObject _rec)
        {
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsersChats_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_UsersChats dbInteraction = new DINT_UsersChats(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);



                                //List<DataParameter> lstParameters = new List<DataParameter>();
                                //DataParameter pParameter = new DataParameter("sControl", "'" + _rec.WebSitePage.sControl.ToString() + "'", "sControl", 3, "sControl", " = ", "");
                                //lstParameters.Add(pParameter);

                                //List<DEF_UsersChats.RecordObject> dbSearch = dbInteraction.Get(lstParameters);
                                //if (dbSearch != null)
                                //{
                                //  if (dbSearch.Count > 0)
                                //  {
                                //      _rec = dbSearch[0];
                                //      ViewBag.iParentID = _rec.iParentID;
                                //      ViewBag.sParentID = _rec.sParentID;
                                //  }
                                //}


                                oSystem.CloseDataConnection();
                                //return RedirectToAction("UsersChats_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                #endregion
                                return RedirectToAction("UsersChats_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_UsersChats dbInteraction = new DINT_UsersChats(oSystem.cnCon);

                                    _rec.dtLastUpdated = DateTime.Now;
                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("UsersChats_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    oSystem.CloseDataConnection();
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    //return RedirectToAction("StatesDetails", new { id = 0, _bOverrideScreenMessage = true });

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);
                                }
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            //return RedirectToAction("StatesDetails", new { id = 0, _bOverrideScreenMessage = true });

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);
                        }
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        //return RedirectToAction("StatesDetails", new { id = 0, _bOverrideScreenMessage = true });

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult UsersChats_Delete(int id)
        {
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_UsersChats dbInteraction = new DINT_UsersChats(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_UsersChats.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_UsersChats.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        //iParentID = recRecord.iParentID;
                                        //sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }
                        oSystem.CloseDataConnection();
                        return RedirectToAction("UsersChats_List", new { _iParentID = iParentID, _sParentID = sParentID });
                        //return RedirectToAction("UsersChats_List");
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return RedirectToAction("UsersChats_List", new { _iParentID = iParentID, _sParentID = sParentID });
                        //return RedirectToAction("UsersChats_List");
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form UsersLogs

        string sUsersLogs_Details = "/views/Forms/UsersLogs_Details.cshtml";
        string sUsersLogs_List = "/views/Forms/UsersLogs_List.cshtml";

        public ActionResult UsersLogs_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsersLogs_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_UsersLogs dbInteraction = new DINT_UsersLogs(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_UsersLogs.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    DataParameter pParameter = null;

                    if (_iParentID > 0)
                    {
                        pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }


                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        lstParameters = new List<DataParameter>();
                        if (_iParentID > 0)
                        {
                            pParameter = new DataParameter("sTitle", "'%" + Search + "%'", "string", 11, "sTitle", " LIKE ", " AND ");
                            lstParameters.Add(pParameter);
                            iTotalRows = dbInteraction.GetRowCount(lstParameters);
                        }
                        else
                        {
                            pParameter = new DataParameter("sTitle", "'%" + Search + "%'", "string", 11, "sTitle", " LIKE ", "");
                            lstParameters.Add(pParameter);
                            iTotalRows = dbInteraction.GetRowCount(lstParameters);
                        }
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_UsersLogs.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult UsersLogs_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsersLogs_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_UsersLogs dbInteraction = new DINT_UsersLogs(oSystem.cnCon);
                        List<DEF_UsersLogs.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_UsersLogs.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_UsersLogs dbInteraction = new DINT_UsersLogs(oSystem.cnCon);
                        List<DEF_UsersLogs.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_UsersLogs.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }

                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        //
        public ActionResult UsersLogs_Create(int _iParentID = 0, string _sParentID = "")
        {
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsersLogs_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_UsersLogs.RecordObject recRecord = new DEF_UsersLogs.RecordObject();

                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;


                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public ActionResult UsersLogs_AddUpdate(DEF_UsersLogs.RecordObject _rec)
        {
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsersLogs_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_UsersLogs dbInteraction = new DINT_UsersLogs(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);



                                //List<DataParameter> lstParameters = new List<DataParameter>();
                                //DataParameter pParameter = new DataParameter("sControl", "'" + _rec.WebSitePage.sControl.ToString() + "'", "sControl", 3, "sControl", " = ", "");
                                //lstParameters.Add(pParameter);

                                //List<DEF_UsersLogs.RecordObject> dbSearch = dbInteraction.Get(lstParameters);
                                //if (dbSearch != null)
                                //{
                                //  if (dbSearch.Count > 0)
                                //  {
                                //      _rec = dbSearch[0];
                                //      ViewBag.iParentID = _rec.iParentID;
                                //      ViewBag.sParentID = _rec.sParentID;
                                //  }
                                //}


                                oSystem.CloseDataConnection();
                                //return RedirectToAction("UsersLogs_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                #endregion
                                return RedirectToAction("UsersLogs_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_UsersLogs dbInteraction = new DINT_UsersLogs(oSystem.cnCon);

                                    _rec.dtLastUpdated = DateTime.Now;
                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("UsersLogs_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    oSystem.CloseDataConnection();
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    //return RedirectToAction("StatesDetails", new { id = 0, _bOverrideScreenMessage = true });

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);
                                }
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            //return RedirectToAction("StatesDetails", new { id = 0, _bOverrideScreenMessage = true });

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);
                        }
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        //return RedirectToAction("StatesDetails", new { id = 0, _bOverrideScreenMessage = true });

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult UsersLogs_Delete(int id)
        {
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_UsersLogs dbInteraction = new DINT_UsersLogs(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_UsersLogs.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_UsersLogs.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        //iParentID = recRecord.iParentID;
                                        //sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }
                        oSystem.CloseDataConnection();
                        return RedirectToAction("UsersLogs_List", new { _iParentID = iParentID, _sParentID = sParentID });
                        //return RedirectToAction("UsersLogs_List");
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return RedirectToAction("UsersLogs_List", new { _iParentID = iParentID, _sParentID = sParentID });
                        //return RedirectToAction("UsersLogs_List");
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form UsersMessages

        string sUsersMessages_Details = "/views/Forms/UsersMessages_Details.cshtml";
        string sUsersMessages_List = "/views/Forms/UsersMessages_List.cshtml";

        public ActionResult UsersMessages_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsersMessages_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_UsersMessages dbInteraction = new DINT_UsersMessages(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_UsersMessages.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    DataParameter pParameter = null;

                    if (_iParentID > 0)
                    {
                        pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }


                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        lstParameters = new List<DataParameter>();
                        if (_iParentID > 0)
                        {
                            pParameter = new DataParameter("sTitle", "'%" + Search + "%'", "string", 11, "sTitle", " LIKE ", " AND ");
                            lstParameters.Add(pParameter);
                            iTotalRows = dbInteraction.GetRowCount(lstParameters);
                        }
                        else
                        {
                            pParameter = new DataParameter("sTitle", "'%" + Search + "%'", "string", 11, "sTitle", " LIKE ", "");
                            lstParameters.Add(pParameter);
                            iTotalRows = dbInteraction.GetRowCount(lstParameters);
                        }
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_UsersMessages.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult UsersMessages_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsersMessages_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_UsersMessages dbInteraction = new DINT_UsersMessages(oSystem.cnCon);
                        List<DEF_UsersMessages.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_UsersMessages.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_UsersMessages dbInteraction = new DINT_UsersMessages(oSystem.cnCon);
                        List<DEF_UsersMessages.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_UsersMessages.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }

                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult UsersMessages_Create(int _iParentID = 0, string _sParentID = "")
        {
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsersMessages_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_UsersMessages.RecordObject recRecord = new DEF_UsersMessages.RecordObject();

                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;


                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public ActionResult UsersMessages_AddUpdate(DEF_UsersMessages.RecordObject _rec)
        {
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsersMessages_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_UsersMessages dbInteraction = new DINT_UsersMessages(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);



                                //List<DataParameter> lstParameters = new List<DataParameter>();
                                //DataParameter pParameter = new DataParameter("sControl", "'" + _rec.WebSitePage.sControl.ToString() + "'", "sControl", 3, "sControl", " = ", "");
                                //lstParameters.Add(pParameter);

                                //List<DEF_UsersMessages.RecordObject> dbSearch = dbInteraction.Get(lstParameters);
                                //if (dbSearch != null)
                                //{
                                //  if (dbSearch.Count > 0)
                                //  {
                                //      _rec = dbSearch[0];
                                //      ViewBag.iParentID = _rec.iParentID;
                                //      ViewBag.sParentID = _rec.sParentID;
                                //  }
                                //}


                                oSystem.CloseDataConnection();
                                //return RedirectToAction("UsersMessages_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                #endregion
                                return RedirectToAction("UsersMessages_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_UsersMessages dbInteraction = new DINT_UsersMessages(oSystem.cnCon);

                                    _rec.dtLastUpdated = DateTime.Now;
                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("UsersMessages_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    oSystem.CloseDataConnection();
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    //return RedirectToAction("StatesDetails", new { id = 0, _bOverrideScreenMessage = true });

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);
                                }
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            //return RedirectToAction("StatesDetails", new { id = 0, _bOverrideScreenMessage = true });

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);
                        }
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        //return RedirectToAction("StatesDetails", new { id = 0, _bOverrideScreenMessage = true });

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult UsersMessages_Delete(int id)
        {
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_UsersMessages dbInteraction = new DINT_UsersMessages(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_UsersMessages.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_UsersMessages.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        //iParentID = recRecord.iParentID;
                                        //sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }
                        oSystem.CloseDataConnection();
                        return RedirectToAction("UsersMessages_List", new { _iParentID = iParentID, _sParentID = sParentID });
                        //return RedirectToAction("UsersMessages_List");
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return RedirectToAction("UsersMessages_List", new { _iParentID = iParentID, _sParentID = sParentID });
                        //return RedirectToAction("UsersMessages_List");
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form UsersPosts

        string sUsersPosts_Details = "/views/Forms/UsersPosts_Details.cshtml";
        string sUsersPosts_List = "/views/Forms/UsersPosts_List.cshtml";


        public ActionResult UsersPosts_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsersPosts_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_UsersPosts dbInteraction = new DINT_UsersPosts(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_UsersPosts.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    DataParameter pParameter = null;

                    if (_iParentID > 0)
                    {
                        pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }


                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        lstParameters = new List<DataParameter>();
                        if (_iParentID > 0)
                        {
                            pParameter = new DataParameter("sSubject", "'%" + Search + "%'", "string", 11, "sSubject", " LIKE ", " AND ");
                            lstParameters.Add(pParameter);
                            iTotalRows = dbInteraction.GetRowCount(lstParameters);
                        }
                        else
                        {
                            pParameter = new DataParameter("sSubject", "'%" + Search + "%'", "string", 11, "sSubject", " LIKE ", "");
                            lstParameters.Add(pParameter);
                            iTotalRows = dbInteraction.GetRowCount(lstParameters);
                        }
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_UsersPosts.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult UsersPosts_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsersPosts_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_UsersPosts dbInteraction = new DINT_UsersPosts(oSystem.cnCon);
                        List<DEF_UsersPosts.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_UsersPosts.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_UsersPosts dbInteraction = new DINT_UsersPosts(oSystem.cnCon);
                        List<DEF_UsersPosts.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_UsersPosts.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }

                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult UsersPosts_Create(int _iParentID = 0, string _sParentID = "")
        {
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsersPosts_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_UsersPosts.RecordObject recRecord = new DEF_UsersPosts.RecordObject();

                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;


                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public ActionResult UsersPosts_AddUpdate(DEF_UsersPosts.RecordObject _rec)
        {
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsersPosts_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_UsersPosts dbInteraction = new DINT_UsersPosts(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);



                                //List<DataParameter> lstParameters = new List<DataParameter>();
                                //DataParameter pParameter = new DataParameter("sControl", "'" + _rec.WebSitePage.sControl.ToString() + "'", "sControl", 3, "sControl", " = ", "");
                                //lstParameters.Add(pParameter);

                                //List<DEF_UsersPosts.RecordObject> dbSearch = dbInteraction.Get(lstParameters);
                                //if (dbSearch != null)
                                //{
                                //  if (dbSearch.Count > 0)
                                //  {
                                //      _rec = dbSearch[0];
                                //      ViewBag.iParentID = _rec.iParentID;
                                //      ViewBag.sParentID = _rec.sParentID;
                                //  }
                                //}


                                oSystem.CloseDataConnection();
                                //return RedirectToAction("UsersPosts_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                #endregion
                                return RedirectToAction("UsersPosts_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_UsersPosts dbInteraction = new DINT_UsersPosts(oSystem.cnCon);

                                    _rec.dtLastUpdated = DateTime.Now;
                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("UsersPosts_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    oSystem.CloseDataConnection();
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    //return RedirectToAction("StatesDetails", new { id = 0, _bOverrideScreenMessage = true });

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);
                                }
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            //return RedirectToAction("StatesDetails", new { id = 0, _bOverrideScreenMessage = true });

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);
                        }
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        //return RedirectToAction("StatesDetails", new { id = 0, _bOverrideScreenMessage = true });

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult UsersPosts_Delete(int id)
        {
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_UsersPosts dbInteraction = new DINT_UsersPosts(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_UsersPosts.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_UsersPosts.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        //iParentID = recRecord.iParentID;
                                        //sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }
                        oSystem.CloseDataConnection();
                        //return RedirectToAction("UsersPosts_List", new { _iParentID = iParentID, _sParentID = sParentID });
                        return RedirectToAction("UsersPosts_List");
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        //return RedirectToAction("UsersPosts_List", new { _iParentID = iParentID, _sParentID = sParentID });
                        return RedirectToAction("UsersPosts_List");
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form UsersAltAuth
        public ActionResult UsersAltAuth_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("UsersAltAuth_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsersAltAuth_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_UsersAltAuth dbInteraction = new DINT_UsersAltAuth(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_UsersAltAuth.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }

                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        DataParameter pParameter = new DataParameter("sAuthValue1", "'" + Search + "'", "string", 10, "sAuthValue1", " = ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_UsersAltAuth.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult UsersAltAuth_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("UsersAltAuth_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsersAltAuth_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_UsersAltAuth dbInteraction = new DINT_UsersAltAuth(oSystem.cnCon);
                        List<DEF_UsersAltAuth.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_UsersAltAuth.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 1, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_UsersAltAuth dbInteraction = new DINT_UsersAltAuth(oSystem.cnCon);
                        List<DEF_UsersAltAuth.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_UsersAltAuth.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult UsersAltAuth_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("UsersAltAuth_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsersAltAuth_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_UsersAltAuth.RecordObject recRecord = new DEF_UsersAltAuth.RecordObject();
                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;

                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public ActionResult UsersAltAuth_AddUpdate(DEF_UsersAltAuth.RecordObject _rec)
        {
            Set_Client_NavSettings("UsersAltAuth_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsersAltAuth_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_UsersAltAuth dbInteraction = new DINT_UsersAltAuth(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);

                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("UsersAltAuth_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_UsersAltAuth dbInteraction = new DINT_UsersAltAuth(oSystem.cnCon);

                                    _rec.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("UsersAltAuth_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);

                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult UsersAltAuth_Delete(int id)
        {
            Set_Client_NavSettings("UsersAltAuth_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_UsersAltAuth dbInteraction = new DINT_UsersAltAuth(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_UsersAltAuth.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_UsersAltAuth.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("UsersAltAuth_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("UsersAltAuth_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form UsersProperties
        public ActionResult UsersProperties_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("UsersProperties_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsersProperties_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_UsersProperties dbInteraction = new DINT_UsersProperties(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_UsersProperties.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }

                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        DataParameter pParameter = new DataParameter("sFieldName", "'" + Search + "'", "string", 10, "sFieldName", " = ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_UsersProperties.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }


                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult UsersProperties_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("UsersProperties_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsersProperties_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_UsersProperties dbInteraction = new DINT_UsersProperties(oSystem.cnCon);
                        List<DEF_UsersProperties.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_UsersProperties.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 1, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_UsersProperties dbInteraction = new DINT_UsersProperties(oSystem.cnCon);
                        List<DEF_UsersProperties.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_UsersProperties.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }


                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult UsersProperties_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("UsersProperties_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsersProperties_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_UsersProperties.RecordObject recRecord = new DEF_UsersProperties.RecordObject();
                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;


                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);


                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public ActionResult UsersProperties_AddUpdate(DEF_UsersProperties.RecordObject _rec)
        {
            Set_Client_NavSettings("UsersProperties_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUsersProperties_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_UsersProperties dbInteraction = new DINT_UsersProperties(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);

                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("UsersProperties_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_UsersProperties dbInteraction = new DINT_UsersProperties(oSystem.cnCon);

                                    _rec.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("UsersProperties_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";


                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);

                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }

            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult UsersProperties_Delete(int id)
        {
            Set_Client_NavSettings("UsersProperties_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_UsersProperties dbInteraction = new DINT_UsersProperties(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_UsersProperties.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_UsersProperties.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("UsersProperties_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("UsersProperties_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form UserShareEvents

        string sUserShareEvents_Details = "/views/Forms/UserShareEvents_Details.cshtml";
        string sUserShareEvents_List = "/views/Forms/UserShareEvents_List.cshtml";


        public ActionResult UserShareEvents_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)

        {
            Set_Client_NavSettings("UserShareEvents");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    Set_ViewBag_Global();
                    Set_ViewBag_UserInfo();
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }

                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUserShareEvents_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_UserShareEvents dbInteraction = new DINT_UserShareEvents(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_UserShareEvents.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    DataParameter pParameter = null;
                    bool bParameterSet = false;
                    string sPRelationsToOthers = "";
                    //if (_iParentID > 0)
                    //{
                    pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                    lstParameters.Add(pParameter);
                    bParameterSet = true;
                    //}



                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;


                        bool bIsNumber = false;
                        bool bIsDate = false;
                        bool bIsBool = false;
                        #region Test For Number
                        try
                        {
                            int iTest = System.Convert.ToInt32(Search);
                            bIsNumber = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Date
                        try
                        {
                            DateTime dtTest = System.Convert.ToDateTime(Search);
                            bIsDate = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Boolean
                        try
                        {
                            bool bTest = System.Convert.ToBoolean(Search);
                            bIsBool = true;
                        }
                        catch
                        {
                        }
                        #endregion


                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }
                        //if (_iParentID > 0)
                        //{
                        //if (bIsNumber == true)
                        //{
                        //}
                        //}
                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }

                    }

                    iTotalRows = dbInteraction.GetRowCount(lstParameters);

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);


                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    else
                    {
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_UserShareEvents.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult UserShareEvents_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("UserShareEvents");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUserShareEvents_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_UserShareEvents dbInteraction = new DINT_UserShareEvents(oSystem.cnCon);
                        List<DEF_UserShareEvents.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_UserShareEvents.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_UserShareEvents dbInteraction = new DINT_UserShareEvents(oSystem.cnCon);
                        List<DEF_UserShareEvents.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_UserShareEvents.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }



        public ActionResult UserShareEvents_Create(int _iParentID = 0, string _sParentID = "")

        {
            Set_Client_NavSettings("UserShareEvents");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUserShareEvents_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_UserShareEvents.RecordObject recRecord = new DEF_UserShareEvents.RecordObject();


                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;





                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    oSystem.CloseDataConnection();
                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public ActionResult UserShareEvents_AddUpdate(DEF_UserShareEvents.RecordObject _rec)
        {
            Set_Client_NavSettings("UserShareEvents");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sUserShareEvents_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;



                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_UserShareEvents dbInteraction = new DINT_UserShareEvents(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);



                                oSystem.CloseDataConnection();
                                #endregion
                                return RedirectToAction("UserShareEvents_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_UserShareEvents dbInteraction = new DINT_UserShareEvents(oSystem.cnCon);
                                    _rec.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    return RedirectToAction("UserShareEvents_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    oSystem.CloseDataConnection();
                                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            oSystem.CloseDataConnection();
                            return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult UserShareEvents_Delete(int id)
        {
            Set_Client_NavSettings("UserShareEvents");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_UserShareEvents dbInteraction = new DINT_UserShareEvents(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_UserShareEvents.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_UserShareEvents.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {

                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;


                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }
                        oSystem.CloseDataConnection();

                        return RedirectToAction("UserShareEvents_List", new { _iParentID = iParentID, _sParentID = sParentID });


                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return RedirectToAction("UserShareEvents_List", new { _iParentID = iParentID, _sParentID = sParentID });

                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSite
        public ActionResult WebSite_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSite_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSite_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSite dbInteraction = new DINT_WebSite(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSite.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }

                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        DataParameter pParameter = new DataParameter("sName", "'" + Search + "'", "string", 10, "sName", " = ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSite.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSite_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSite_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSite_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSite dbInteraction = new DINT_WebSite(oSystem.cnCon);
                        List<DEF_WebSite.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSite.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }

                                ACMSDBView.WebSiteViewModel recRecordView = new WebSiteViewModel();
                                recRecordView.GetView(oSystem.cnCon, recRecord.ID);

                                DINT_Roles dbRoles = new DINT_Roles(oSystem.cnCon);
                                recRecordView.Build_SecurityRoles(dbRoles.Get());

                                DINT_WebSiteBlog dbWebSiteBlog = new DINT_WebSiteBlog(oSystem.cnCon);
                                List<DataParameter> lsWebSiteBlog = new List<DataParameter>();
                                DataParameter pWebSiteBlog_Parameter = new DataParameter("iParentID", "'" + recRecord.ID + "'", "int", 1, "iParentID", " = ", "");
                                lsWebSiteBlog.Add(pWebSiteBlog_Parameter);
                                recRecordView.Build_SiteBloggs(dbWebSiteBlog.Get(lsWebSiteBlog));

                                DINT_WebSitePageTemplates dbWebSitePageTemplates = new DINT_WebSitePageTemplates(oSystem.cnCon);
                                List<DataParameter> lsWebSitePageTemplates = new List<DataParameter>();
                                DataParameter pWebSitePageTemplates_Parameter = new DataParameter("iParentID", "'" + recRecord.ID + "'", "int", 1, "iParentID", " = ", "");
                                lsWebSitePageTemplates.Add(pWebSitePageTemplates_Parameter);
                                recRecordView.Build_SiteTemplates(dbWebSitePageTemplates.Get(lsWebSitePageTemplates));


                                ViewBag.iParentID = recRecordView.WebSite.iParentID;
                                ViewBag.sParentID = recRecordView.WebSite.sParentID;

                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecordView;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 1, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSite dbInteraction = new DINT_WebSite(oSystem.cnCon);
                        List<DEF_WebSite.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSite.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }

                                ACMSDBView.WebSiteViewModel recRecordView = new WebSiteViewModel();
                                recRecordView.GetView(oSystem.cnCon, recRecord.ID);

                                DINT_Roles dbRoles = new DINT_Roles(oSystem.cnCon);
                                recRecordView.Build_SecurityRoles(dbRoles.Get());

                                DINT_WebSiteBlog dbWebSiteBlog = new DINT_WebSiteBlog(oSystem.cnCon);
                                List<DataParameter> lsWebSiteBlog = new List<DataParameter>();
                                DataParameter pWebSiteBlog_Parameter = new DataParameter("iParentID", "'" + recRecord.ID + "'", "int", 1, "iParentID", " = ", "");
                                lsWebSiteBlog.Add(pWebSiteBlog_Parameter);
                                recRecordView.Build_SiteBloggs(dbWebSiteBlog.Get(lsWebSiteBlog));

                                DINT_WebSitePageTemplates dbWebSitePageTemplates = new DINT_WebSitePageTemplates(oSystem.cnCon);
                                List<DataParameter> lsWebSitePageTemplates = new List<DataParameter>();
                                DataParameter pWebSitePageTemplates_Parameter = new DataParameter("iParentID", "'" + recRecord.ID + "'", "int", 1, "iParentID", " = ", "");
                                lsWebSitePageTemplates.Add(pWebSitePageTemplates_Parameter);
                                recRecordView.Build_SiteTemplates(dbWebSitePageTemplates.Get(lsWebSitePageTemplates));


                                ViewBag.iParentID = recRecordView.WebSite.iParentID;
                                ViewBag.sParentID = recRecordView.WebSite.sParentID;


                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecordView;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSite_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSite_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSite_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";

                    ACMSDBView.WebSiteViewModel recRecord = new WebSiteViewModel();
                    recRecord.WebSite = new DEF_WebSite.RecordObject();

                    recRecord.WebSite.iParentID = _iParentID;
                    recRecord.WebSite.sParentID = _sParentID;


                    recRecord.Get_SecurityRoles(oSystem.cnCon);

                    recRecord.Build_SiteBloggs(null);
                    recRecord.Build_SiteTemplates(null);

                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public ActionResult WebSite_AddUpdate(ACMSDBView.WebSiteViewModel _rec)
        {
            Set_Client_NavSettings("WebSite_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSite_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.WebSite.ID == null) || (_rec.WebSite.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.WebSite.ID = -1;
                            //ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.WebSite.iParentID;
                            ViewBag.sParentID = _rec.WebSite.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSite dbInteraction = new DINT_WebSite(oSystem.cnCon);

                                _rec.WebSite.sControl = Guid.NewGuid().ToString();
                                _rec.WebSite.dtDateCreated = DateTime.Now;
                                _rec.WebSite.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec.WebSite);

                                _rec.Get_SecurityRoles(oSystem.cnCon);
                                _rec.Get_SiteBloggs(oSystem.cnCon, _rec.WebSite.ID);
                                _rec.Get_SiteTemplates(oSystem.cnCon, _rec.WebSite.ID);


                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("WebSite_Details", new { key = _rec.WebSite.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.WebSite.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();

                                    DINT_WebSite dbInteraction = new DINT_WebSite(oSystem.cnCon);
                                    _rec.WebSite.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec.WebSite);

                                    _rec.Get_SecurityRoles(oSystem.cnCon);
                                    _rec.Get_SiteBloggs(oSystem.cnCon, _rec.WebSite.ID);
                                    _rec.Get_SiteTemplates(oSystem.cnCon, _rec.WebSite.ID);



                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("WebSite_Details", new { id = _rec.WebSite.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);
                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSite_Delete(int id)
        {
            Set_Client_NavSettings("WebSite_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSite dbInteraction = new DINT_WebSite(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSite.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSite.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("WebSite_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("WebSite_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion
        
        #region Form WebSiteAnnouncements

        string sWebSiteAnnouncements_Details = "/views/Forms/WebSiteAnnouncements_Details.cshtml";
        string sWebSiteAnnouncements_List = "/views/Forms/WebSiteAnnouncements_List.cshtml";


        public ActionResult WebSiteAnnouncements_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)

        {
            Set_Client_NavSettings("WebSiteAnnouncements");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    Set_ViewBag_Global();
                    Set_ViewBag_UserInfo();
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }

                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteAnnouncements_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteAnnouncements dbInteraction = new DINT_WebSiteAnnouncements(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteAnnouncements.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    DataParameter pParameter = null;
                    bool bParameterSet = false;
                    string sPRelationsToOthers = "";
                    //if (_iParentID > 0)
                    //{
                    pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                    lstParameters.Add(pParameter);
                    bParameterSet = true;
                    //}



                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;


                        bool bIsNumber = false;
                        bool bIsDate = false;
                        bool bIsBool = false;
                        #region Test For Number
                        try
                        {
                            int iTest = System.Convert.ToInt32(Search);
                            bIsNumber = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Date
                        try
                        {
                            DateTime dtTest = System.Convert.ToDateTime(Search);
                            bIsDate = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Boolean
                        try
                        {
                            bool bTest = System.Convert.ToBoolean(Search);
                            bIsBool = true;
                        }
                        catch
                        {
                        }
                        #endregion


                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }
                        //if (_iParentID > 0)
                        //{
                        //if (bIsNumber == true)
                        //{
                        //}
                        //}
                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }

                    }

                    iTotalRows = dbInteraction.GetRowCount(lstParameters);

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);


                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    else
                    {
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteAnnouncements.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteAnnouncements_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteAnnouncements");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteAnnouncements_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteAnnouncements dbInteraction = new DINT_WebSiteAnnouncements(oSystem.cnCon);
                        List<DEF_WebSiteAnnouncements.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteAnnouncements.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteAnnouncements dbInteraction = new DINT_WebSiteAnnouncements(oSystem.cnCon);
                        List<DEF_WebSiteAnnouncements.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteAnnouncements.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }



        public ActionResult WebSiteAnnouncements_Create(int _iParentID = 0, string _sParentID = "")

        {
            Set_Client_NavSettings("WebSiteAnnouncements");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteAnnouncements_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_WebSiteAnnouncements.RecordObject recRecord = new DEF_WebSiteAnnouncements.RecordObject();


                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;





                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    oSystem.CloseDataConnection();
                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public ActionResult WebSiteAnnouncements_AddUpdate(DEF_WebSiteAnnouncements.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSiteAnnouncements");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteAnnouncements_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;



                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSiteAnnouncements dbInteraction = new DINT_WebSiteAnnouncements(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);



                                oSystem.CloseDataConnection();
                                #endregion
                                return RedirectToAction("WebSiteAnnouncements_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSiteAnnouncements dbInteraction = new DINT_WebSiteAnnouncements(oSystem.cnCon);
                                    _rec.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    return RedirectToAction("WebSiteAnnouncements_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    oSystem.CloseDataConnection();
                                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            oSystem.CloseDataConnection();
                            return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteAnnouncements_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteAnnouncements");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteAnnouncements dbInteraction = new DINT_WebSiteAnnouncements(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteAnnouncements.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteAnnouncements.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {

                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;


                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }
                        oSystem.CloseDataConnection();

                        return RedirectToAction("WebSiteAnnouncements_List", new { _iParentID = iParentID, _sParentID = sParentID });


                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return RedirectToAction("WebSiteAnnouncements_List", new { _iParentID = iParentID, _sParentID = sParentID });

                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteBlog
        public ActionResult WebSiteBlog_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSiteBlog_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlog_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteBlog dbInteraction = new DINT_WebSiteBlog(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteBlog.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }

                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sTitle", "'%" + Search + "%'", "string", 10, "sTitle", " LIKE ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteBlog.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteBlog_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteBlog_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlog_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        ACMSDBView.WebSiteBlogViewModel recRecord = new WebSiteBlogViewModel();
                        if (recRecord.GetView(oSystem.cnCon, id))
                        {
                            ViewBag.iParentID = recRecord.Blog.iParentID;
                            ViewBag.sParentID = recRecord.Blog.sParentID;


                            if (recRecord.Blog.iSiteTemplateID > 0)
                            {
                                recRecord.Get_SiteTemplatesZonez(oSystem.cnCon, recRecord.Blog.iSiteTemplateID);
                                recRecord.Get_SiteTemplatesPages(oSystem.cnCon, recRecord.Blog.iSiteTemplateID);
                            }
                            else if (recRecord.SiteTemplates.Count > 0)
                            {
                                recRecord.Get_SiteTemplatesZonez(oSystem.cnCon, System.Convert.ToInt32(recRecord.SiteTemplates[1].Value));
                                recRecord.Get_SiteTemplatesPages(oSystem.cnCon, System.Convert.ToInt32(recRecord.SiteTemplates[1].Value));
                            }
                            else
                            {
                                recRecord.Build_TemplateZonesItems(null);
                                recRecord.Build_SiteTemplatesPages(null);
                            }



                            oSystem.CloseDataConnection();
                            oPage.DataModelsPrimary = recRecord;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteBlog dbInteraction = new DINT_WebSiteBlog(oSystem.cnCon);
                        List<DEF_WebSiteBlog.RecordObject> dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                ACMSDBView.WebSiteBlogViewModel recRecord = new WebSiteBlogViewModel();
                                recRecord.Blog = dbSearch[0];
                                recRecord.Get_BloggersLists(oSystem.cnCon);
                                if (recRecord.Blog == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.Blog.iParentID;
                                ViewBag.sParentID = recRecord.Blog.sParentID;


                                if (recRecord.Blog.iSiteTemplateID > 0)
                                {
                                    recRecord.Get_SiteTemplatesPages(oSystem.cnCon, recRecord.Blog.iSiteTemplateID);
                                    if (recRecord.Blog.iSiteTemplatePageID > 0)
                                    {
                                        recRecord.Get_SiteTemplatesZonez(oSystem.cnCon, recRecord.Blog.iSiteTemplatePageID);
                                    }
                                }
                                else if (recRecord.SiteTemplates.Count > 0)
                                {
                                    recRecord.Get_SiteTemplatesZonez(oSystem.cnCon, System.Convert.ToInt32(recRecord.SiteTemplates[1].Value));
                                    if (recRecord.Blog.iSiteTemplatePageID > 0)
                                    {
                                        recRecord.Get_SiteTemplatesZonez(oSystem.cnCon, recRecord.Blog.iSiteTemplatePageID);
                                    }
                                }
                                else
                                {
                                    recRecord.Build_TemplateZonesItems(null);
                                    recRecord.Build_SiteTemplatesPages(null);
                                }


                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteBlog_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSiteBlog_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlog_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    ACMSDBView.WebSiteBlogViewModel recRecord = new WebSiteBlogViewModel();
                    recRecord.Blog = new DEF_WebSiteBlog.RecordObject();
                    recRecord.Blog.iParentID = _iParentID;
                    recRecord.Blog.sParentID = _sParentID;

                    recRecord.Get_BloggersLists(oSystem.cnCon, _iParentID);
                    recRecord.Get_SiteTemplatesList(oSystem.cnCon, _iParentID);

                    if (recRecord.Blog.iSiteTemplateID > 0)
                    {
                        recRecord.Get_SiteTemplatesPages(oSystem.cnCon, recRecord.Blog.iSiteTemplateID);
                    }
                    else if (recRecord.SiteTemplates.Count > 0)
                    {
                        recRecord.Get_SiteTemplatesPages(oSystem.cnCon, System.Convert.ToInt32(recRecord.SiteTemplates[1].Value));
                    }

                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        [ValidateInput(false)]
        public ActionResult WebSiteBlog_AddUpdate(ACMSDBView.WebSiteBlogViewModel _rec)
        {
            Set_Client_NavSettings("WebSiteBlog_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlog_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.Blog.ID == null) || (_rec.Blog.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.Blog.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.Blog.iParentID;
                            ViewBag.sParentID = _rec.Blog.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSiteBlog dbInteraction = new DINT_WebSiteBlog(oSystem.cnCon);

                                _rec.Blog.sControl = Guid.NewGuid().ToString();
                                _rec.Blog.dtDateCreated = DateTime.Now;
                                _rec.Blog.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec.Blog);

                                _rec.Get_BloggersLists(oSystem.cnCon);

                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("WebSiteBlog_Details", new { key = _rec.Blog.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.Blog.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSiteBlog dbInteraction = new DINT_WebSiteBlog(oSystem.cnCon);

                                    _rec.Blog.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec.Blog);

                                    //_rec.Get_BloggersLists(oSystem.cnCon);


                                    //if (_rec.Blog.iSiteTemplateID > 0)
                                    //{
                                    //    _rec.Get_SiteTemplatesZonez(oSystem.cnCon, _rec.Blog.iSiteTemplateID);
                                    //}
                                    //else
                                    //{
                                    //    _rec.Build_TemplateZonesItems(null);
                                    //}

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("WebSiteBlog_Details", new { id = _rec.Blog.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);

                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteBlog_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteBlog_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteBlog dbInteraction = new DINT_WebSiteBlog(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteBlog.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteBlog.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("WebSiteBlog_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("WebSiteBlog_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteBlogComments
        public ActionResult WebSiteBlogComments_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSiteBlogComments_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogComments_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();

                    DINT_WebSiteBlogComments dbInteraction = new DINT_WebSiteBlogComments(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteBlogComments.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }

                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        DataParameter pParameter = new DataParameter("sComment", "'%" + Search + "%'", "string", 12, "sComment", " LIKE ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteBlogComments.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteBlogComments_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteBlogComments_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogComments_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        ACMSDBView.WebSiteBlogCommentsViewModel recRecord = new WebSiteBlogCommentsViewModel();

                        if (recRecord.GetView(oSystem.cnCon, id))
                        {
                            ViewBag.iParentID = recRecord.WebSiteBlogComments.iParentID;
                            ViewBag.sParentID = recRecord.WebSiteBlogComments.sParentID;

                            oSystem.CloseDataConnection();
                            oPage.DataModelsPrimary = recRecord;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 1, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteBlogComments dbInteraction = new DINT_WebSiteBlogComments(oSystem.cnCon);
                        List<DEF_WebSiteBlogComments.RecordObject> dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                ACMSDBView.WebSiteBlogCommentsViewModel recRecord = new WebSiteBlogCommentsViewModel();
                                recRecord.WebSiteBlogComments = dbSearch[0];
                                if (recRecord.WebSiteBlogComments == null)
                                {
                                    return HttpNotFound();
                                }
                                recRecord.Get_ParentComment(oSystem.cnCon);
                                ViewBag.iParentID = recRecord.WebSiteBlogComments.iParentID;
                                ViewBag.sParentID = recRecord.WebSiteBlogComments.sParentID;

                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);


                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteBlogComments_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSiteBlogComments_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogComments_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";

                    ACMSDBView.WebSiteBlogCommentsViewModel recRecord = new WebSiteBlogCommentsViewModel();
                    recRecord.WebSiteBlogComments = new DEF_WebSiteBlogComments.RecordObject();
                    recRecord.WebSiteBlogComments.iParentID = _iParentID;
                    recRecord.WebSiteBlogComments.sParentID = _sParentID;

                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);


                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        [ValidateInput(false)]
        public ActionResult WebSiteBlogComments_AddUpdate(ACMSDBView.WebSiteBlogCommentsViewModel _rec)
        {
            Set_Client_NavSettings("WebSiteBlogComments_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogComments_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.WebSiteBlogComments.ID == null) || (_rec.WebSiteBlogComments.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.WebSiteBlogComments.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.WebSiteBlogComments.iParentID;
                            ViewBag.sParentID = _rec.WebSiteBlogComments.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSiteBlogComments dbInteraction = new DINT_WebSiteBlogComments(oSystem.cnCon);

                                _rec.WebSiteBlogComments.sControl = Guid.NewGuid().ToString();
                                _rec.WebSiteBlogComments.dtDateCreated = DateTime.Now;
                                _rec.WebSiteBlogComments.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec.WebSiteBlogComments);

                                _rec.Get_ParentComment(oSystem.cnCon);

                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("WebSiteBlogComments_Details", new { key = _rec.WebSiteBlogComments.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.WebSiteBlogComments.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSiteBlogComments dbInteraction = new DINT_WebSiteBlogComments(oSystem.cnCon);

                                    _rec.WebSiteBlogComments.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec.WebSiteBlogComments);

                                    _rec.Get_ParentComment(oSystem.cnCon);
                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("WebSiteBlogComments_Details", new { id = _rec.WebSiteBlogComments.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);

                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteBlogComments_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteBlogComments_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteBlogComments dbInteraction = new DINT_WebSiteBlogComments(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteBlogComments.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteBlogComments.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("WebSiteBlogComments_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("WebSiteBlogComments_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteBlogCommentsProperties
        public ActionResult WebSiteBlogCommentsProperties_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSiteBlogCommentsProperties_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogCommentsProperties_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteBlogCommentsProperties dbInteraction = new DINT_WebSiteBlogCommentsProperties(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteBlogCommentsProperties.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }

                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        DataParameter pParameter = new DataParameter("sFieldName", "'" + Search + "'", "string", 10, "sFieldName", " = ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteBlogCommentsProperties.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteBlogCommentsProperties_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteBlogCommentsProperties_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogCommentsProperties_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteBlogCommentsProperties dbInteraction = new DINT_WebSiteBlogCommentsProperties(oSystem.cnCon);
                        List<DEF_WebSiteBlogCommentsProperties.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteBlogCommentsProperties.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 1, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteBlogCommentsProperties dbInteraction = new DINT_WebSiteBlogCommentsProperties(oSystem.cnCon);
                        List<DEF_WebSiteBlogCommentsProperties.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteBlogCommentsProperties.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteBlogCommentsProperties_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSiteBlogCommentsProperties_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogCommentsProperties_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_WebSiteBlogCommentsProperties.RecordObject recRecord = new DEF_WebSiteBlogCommentsProperties.RecordObject();
                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;

                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        [ValidateInput(false)]
        public ActionResult WebSiteBlogCommentsProperties_AddUpdate(DEF_WebSiteBlogCommentsProperties.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSiteBlogCommentsProperties_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogCommentsProperties_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSiteBlogCommentsProperties dbInteraction = new DINT_WebSiteBlogCommentsProperties(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);

                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("WebSiteBlogCommentsProperties_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSiteBlogCommentsProperties dbInteraction = new DINT_WebSiteBlogCommentsProperties(oSystem.cnCon);

                                    _rec.dtLastUpdated = DateTime.Now;
                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("WebSiteBlogCommentsProperties_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);

                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteBlogCommentsProperties_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteBlogCommentsProperties_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteBlogCommentsProperties dbInteraction = new DINT_WebSiteBlogCommentsProperties(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteBlogCommentsProperties.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteBlogCommentsProperties.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("WebSiteBlogCommentsProperties_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("WebSiteBlogCommentsProperties_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteBlogEntry
        public ActionResult WebSiteBlogEntry_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSiteBlogEntry_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogEntry_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteBlogEntry dbInteraction = new DINT_WebSiteBlogEntry(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteBlogEntry.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }

                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        DataParameter pParameter = new DataParameter("sTitle", "'" + Search + "'", "string", 10, "sTitle", " = ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteBlogEntry.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteBlogEntry_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteBlogEntry_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogEntry_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteBlogEntry dbInteraction = new DINT_WebSiteBlogEntry(oSystem.cnCon);
                        List<DEF_WebSiteBlogEntry.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteBlogEntry.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();


                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 1, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteBlogEntry dbInteraction = new DINT_WebSiteBlogEntry(oSystem.cnCon);
                        List<DEF_WebSiteBlogEntry.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteBlogEntry.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();


                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteBlogEntry_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSiteBlogEntry_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogEntry_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_WebSiteBlogEntry.RecordObject recRecord = new DEF_WebSiteBlogEntry.RecordObject();
                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;
                    recRecord.dtStart = DateTime.Parse("01/01/1901");
                    recRecord.dtEnd = DateTime.Parse("01/01/1901");



                    recRecord.iLanguageID = 205;
                    recRecord.sLanguageID = "United States English";


                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        [ValidateInput(false)]
        public ActionResult WebSiteBlogEntry_AddUpdate(DEF_WebSiteBlogEntry.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSiteBlogEntry_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogEntry_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSiteBlogEntry dbInteraction = new DINT_WebSiteBlogEntry(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);

                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("WebSiteBlogEntry_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSiteBlogEntry dbInteraction = new DINT_WebSiteBlogEntry(oSystem.cnCon);

                                    _rec.dtLastUpdated = DateTime.Now;
                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("WebSiteBlogEntry_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";


                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);

                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteBlogEntry_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteBlogEntry_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteBlogEntry dbInteraction = new DINT_WebSiteBlogEntry(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteBlogEntry.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteBlogEntry.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;

                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("WebSiteBlogEntry_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("WebSiteBlogEntry_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteBlogEvents

        string sWebSiteBlogEvents_Details = "/views/Forms/WebSiteBlogEvents_Details.cshtml";
        string sWebSiteBlogEvents_List = "/views/Forms/WebSiteBlogEvents_List.cshtml";


        public ActionResult WebSiteBlogEvents_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)

        {
            Set_Client_NavSettings("WebSiteBlogEvents");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    Set_ViewBag_Global();
                    Set_ViewBag_UserInfo();
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }

                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogEvents_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteBlogEvents dbInteraction = new DINT_WebSiteBlogEvents(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteBlogEvents.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    DataParameter pParameter = null;
                    bool bParameterSet = false;
                    string sPRelationsToOthers = "";
                    //if (_iParentID > 0)
                    //{
                    pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                    lstParameters.Add(pParameter);
                    bParameterSet = true;
                    //}



                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;


                        bool bIsNumber = false;
                        bool bIsDate = false;
                        bool bIsBool = false;
                        #region Test For Number
                        try
                        {
                            int iTest = System.Convert.ToInt32(Search);
                            bIsNumber = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Date
                        try
                        {
                            DateTime dtTest = System.Convert.ToDateTime(Search);
                            bIsDate = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Boolean
                        try
                        {
                            bool bTest = System.Convert.ToBoolean(Search);
                            bIsBool = true;
                        }
                        catch
                        {
                        }
                        #endregion


                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }
                        //if (_iParentID > 0)
                        //{
                        //if (bIsNumber == true)
                        //{
                        //}
                        //}
                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }

                    }

                    iTotalRows = dbInteraction.GetRowCount(lstParameters);

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);


                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    else
                    {
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteBlogEvents.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteBlogEvents_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteBlogEvents");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogEvents_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteBlogEvents dbInteraction = new DINT_WebSiteBlogEvents(oSystem.cnCon);
                        List<DEF_WebSiteBlogEvents.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteBlogEvents.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteBlogEvents dbInteraction = new DINT_WebSiteBlogEvents(oSystem.cnCon);
                        List<DEF_WebSiteBlogEvents.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteBlogEvents.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }



        public ActionResult WebSiteBlogEvents_Create(int _iParentID = 0, string _sParentID = "")

        {
            Set_Client_NavSettings("WebSiteBlogEvents");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogEvents_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_WebSiteBlogEvents.RecordObject recRecord = new DEF_WebSiteBlogEvents.RecordObject();


                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;





                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    oSystem.CloseDataConnection();
                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public ActionResult WebSiteBlogEvents_AddUpdate(DEF_WebSiteBlogEvents.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSiteBlogEvents");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogEvents_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;



                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSiteBlogEvents dbInteraction = new DINT_WebSiteBlogEvents(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);



                                oSystem.CloseDataConnection();
                                #endregion
                                return RedirectToAction("WebSiteBlogEvents_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSiteBlogEvents dbInteraction = new DINT_WebSiteBlogEvents(oSystem.cnCon);
                                    _rec.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    return RedirectToAction("WebSiteBlogEvents_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    oSystem.CloseDataConnection();
                                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            oSystem.CloseDataConnection();
                            return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteBlogEvents_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteBlogEvents");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteBlogEvents dbInteraction = new DINT_WebSiteBlogEvents(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteBlogEvents.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteBlogEvents.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {

                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;


                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }
                        oSystem.CloseDataConnection();

                        return RedirectToAction("WebSiteBlogEvents_List", new { _iParentID = iParentID, _sParentID = sParentID });


                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return RedirectToAction("WebSiteBlogEvents_List", new { _iParentID = iParentID, _sParentID = sParentID });

                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteBlogEntryProperties
        public ActionResult WebSiteBlogEntryProperties_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSiteBlogEntryProperties_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogEntryProperties_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteBlogEntryProperties dbInteraction = new DINT_WebSiteBlogEntryProperties(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteBlogEntryProperties.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }

                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        DataParameter pParameter = new DataParameter("sFieldName", "'" + Search + "'", "string", 10, "sFieldName", " = ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteBlogEntryProperties.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteBlogEntryProperties_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteBlogEntryProperties_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogEntryProperties_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteBlogEntryProperties dbInteraction = new DINT_WebSiteBlogEntryProperties(oSystem.cnCon);
                        List<DEF_WebSiteBlogEntryProperties.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteBlogEntryProperties.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 1, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteBlogEntryProperties dbInteraction = new DINT_WebSiteBlogEntryProperties(oSystem.cnCon);
                        List<DEF_WebSiteBlogEntryProperties.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteBlogEntryProperties.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteBlogEntryProperties_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSiteBlogEntryProperties_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogEntryProperties_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_WebSiteBlogEntryProperties.RecordObject recRecord = new DEF_WebSiteBlogEntryProperties.RecordObject();
                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;

                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public ActionResult WebSiteBlogEntryProperties_AddUpdate(DEF_WebSiteBlogEntryProperties.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSiteBlogEntryProperties_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogEntryProperties_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSiteBlogEntryProperties dbInteraction = new DINT_WebSiteBlogEntryProperties(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);

                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("WebSiteBlogEntryProperties_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSiteBlogEntryProperties dbInteraction = new DINT_WebSiteBlogEntryProperties(oSystem.cnCon);

                                    _rec.dtLastUpdated = DateTime.Now;
                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("WebSiteBlogEntryProperties_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);

                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteBlogEntryProperties_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteBlogEntryProperties_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteBlogEntryProperties dbInteraction = new DINT_WebSiteBlogEntryProperties(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteBlogEntryProperties.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteBlogEntryProperties.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("WebSiteBlogEntryProperties_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("WebSiteBlogEntryProperties_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteBlogProperties
        public ActionResult WebSiteBlogProperties_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSiteBlogProperties_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogProperties_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteBlogProperties dbInteraction = new DINT_WebSiteBlogProperties(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteBlogProperties.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }

                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        DataParameter pParameter = new DataParameter("sFieldName", "'" + Search + "'", "string", 10, "sFieldName", " = ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteBlogProperties.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteBlogProperties_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteBlogProperties_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogProperties_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteBlogProperties dbInteraction = new DINT_WebSiteBlogProperties(oSystem.cnCon);
                        List<DEF_WebSiteBlogProperties.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteBlogProperties.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 1, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteBlogProperties dbInteraction = new DINT_WebSiteBlogProperties(oSystem.cnCon);
                        List<DEF_WebSiteBlogProperties.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteBlogProperties.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteBlogProperties_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSiteBlogProperties_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogProperties_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_WebSiteBlogProperties.RecordObject recRecord = new DEF_WebSiteBlogProperties.RecordObject();
                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;

                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);


                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public ActionResult WebSiteBlogProperties_AddUpdate(DEF_WebSiteBlogProperties.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSiteBlogProperties_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogProperties_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSiteBlogProperties dbInteraction = new DINT_WebSiteBlogProperties(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);

                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("WebSiteBlogProperties_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSiteBlogProperties dbInteraction = new DINT_WebSiteBlogProperties(oSystem.cnCon);

                                    _rec.dtLastUpdated = DateTime.Now;
                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("WebSiteBlogProperties_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);

                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteBlogProperties_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteBlogProperties_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteBlogProperties dbInteraction = new DINT_WebSiteBlogProperties(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteBlogProperties.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteBlogProperties.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("WebSiteBlogProperties_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("WebSiteBlogProperties_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteEvents
        public ActionResult WebSiteEvents_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSiteEvents_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteEvents_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteEvents dbInteraction = new DINT_WebSiteEvents(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteEvents.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }


                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sEvent", "'%" + Search + "%'", "string", 12, "sEvent", " LIKE ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteEvents.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteEvents_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteEvents_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteEvents_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteEvents dbInteraction = new DINT_WebSiteEvents(oSystem.cnCon);
                        List<DEF_WebSiteEvents.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteEvents.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", key, "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteEvents dbInteraction = new DINT_WebSiteEvents(oSystem.cnCon);
                        List<DEF_WebSiteEvents.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteEvents.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }

                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteEvents_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSiteEvents_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteEvents_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_WebSiteEvents.RecordObject recRecord = new DEF_WebSiteEvents.RecordObject();

                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;

                    oSystem.CloseDataConnection();
                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public ActionResult WebSiteEvents_AddUpdate(DEF_WebSiteEvents.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSiteEvents_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteEvents_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSiteEvents dbInteraction = new DINT_WebSiteEvents(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);



                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("WebSiteEvents_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSiteEvents dbInteraction = new DINT_WebSiteEvents(oSystem.cnCon);

                                    _rec.dtLastUpdated = DateTime.Now;
                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("WebSiteEvents_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);

                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteEvents_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteEvents_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteEvents dbInteraction = new DINT_WebSiteEvents(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteEvents.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteEvents.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("WebSiteEvents_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("WebSiteEvents_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteExtAppIntegrationSettings
        public ActionResult WebSiteExtAppIntegrationSettings_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSiteExtAppIntegrationSettings_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteExtAppIntegrationSettings_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteExtAppIntegrationSettings dbInteraction = new DINT_WebSiteExtAppIntegrationSettings(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteExtAppIntegrationSettings.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }

                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        DataParameter pParameter = new DataParameter("sApplicationKey", "'" + Search + "'", "string", 23, "sApplicationKey", " = ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteExtAppIntegrationSettings.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteExtAppIntegrationSettings_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteExtAppIntegrationSettings_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteExtAppIntegrationSettings_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteExtAppIntegrationSettings dbInteraction = new DINT_WebSiteExtAppIntegrationSettings(oSystem.cnCon);
                        List<DEF_WebSiteExtAppIntegrationSettings.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteExtAppIntegrationSettings.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 1, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteExtAppIntegrationSettings dbInteraction = new DINT_WebSiteExtAppIntegrationSettings(oSystem.cnCon);
                        List<DEF_WebSiteExtAppIntegrationSettings.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteExtAppIntegrationSettings.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteExtAppIntegrationSettings_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSiteExtAppIntegrationSettings_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteExtAppIntegrationSettings_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_WebSiteExtAppIntegrationSettings.RecordObject recRecord = new DEF_WebSiteExtAppIntegrationSettings.RecordObject();
                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;
                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public ActionResult WebSiteExtAppIntegrationSettings_AddUpdate(DEF_WebSiteExtAppIntegrationSettings.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSiteExtAppIntegrationSettings_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteExtAppIntegrationSettings_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSiteExtAppIntegrationSettings dbInteraction = new DINT_WebSiteExtAppIntegrationSettings(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);

                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("WebSiteExtAppIntegrationSettings_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSiteExtAppIntegrationSettings dbInteraction = new DINT_WebSiteExtAppIntegrationSettings(oSystem.cnCon);

                                    _rec.dtLastUpdated = DateTime.Now;
                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("WebSiteExtAppIntegrationSettings_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";


                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);

                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteExtAppIntegrationSettings_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteExtAppIntegrationSettings_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteExtAppIntegrationSettings dbInteraction = new DINT_WebSiteExtAppIntegrationSettings(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteExtAppIntegrationSettings.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteExtAppIntegrationSettings.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("WebSiteExtAppIntegrationSettings_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("WebSiteExtAppIntegrationSettings_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteForum

        string sWebSiteForum_Details = "/views/Forms/WebSiteForum_Details.cshtml";
        string sWebSiteForum_List = "/views/Forms/WebSiteForum_List.cshtml";


        public ActionResult WebSiteForum_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)

        {
            Set_Client_NavSettings("WebSiteForum");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    Set_ViewBag_Global();
                    Set_ViewBag_UserInfo();
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }

                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForum_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteForum dbInteraction = new DINT_WebSiteForum(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteForum.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    DataParameter pParameter = null;
                    bool bParameterSet = false;
                    string sPRelationsToOthers = "";
                    //if (_iParentID > 0)
                    //{
                    pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                    lstParameters.Add(pParameter);
                    bParameterSet = true;
                    //}



                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;


                        bool bIsNumber = false;
                        bool bIsDate = false;
                        bool bIsBool = false;
                        #region Test For Number
                        try
                        {
                            int iTest = System.Convert.ToInt32(Search);
                            bIsNumber = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Date
                        try
                        {
                            DateTime dtTest = System.Convert.ToDateTime(Search);
                            bIsDate = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Boolean
                        try
                        {
                            bool bTest = System.Convert.ToBoolean(Search);
                            bIsBool = true;
                        }
                        catch
                        {
                        }
                        #endregion


                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }
                        //if (_iParentID > 0)
                        //{
                        //if (bIsNumber == true)
                        //{
                        //}
                        //}
                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }

                    }

                    iTotalRows = dbInteraction.GetRowCount(lstParameters);

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);


                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    else
                    {
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteForum.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteForum_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteForum");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForum_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteForum dbInteraction = new DINT_WebSiteForum(oSystem.cnCon);
                        List<DEF_WebSiteForum.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteForum.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteForum dbInteraction = new DINT_WebSiteForum(oSystem.cnCon);
                        List<DEF_WebSiteForum.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteForum.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }



        public ActionResult WebSiteForum_Create(int _iParentID = 0, string _sParentID = "")

        {
            Set_Client_NavSettings("WebSiteForum");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForum_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_WebSiteForum.RecordObject recRecord = new DEF_WebSiteForum.RecordObject();


                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;





                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    oSystem.CloseDataConnection();
                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public ActionResult WebSiteForum_AddUpdate(DEF_WebSiteForum.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSiteForum");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForum_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;



                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSiteForum dbInteraction = new DINT_WebSiteForum(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);



                                oSystem.CloseDataConnection();
                                #endregion
                                return RedirectToAction("WebSiteForum_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSiteForum dbInteraction = new DINT_WebSiteForum(oSystem.cnCon);
                                    _rec.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    return RedirectToAction("WebSiteForum_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    oSystem.CloseDataConnection();
                                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            oSystem.CloseDataConnection();
                            return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteForum_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteForum");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteForum dbInteraction = new DINT_WebSiteForum(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteForum.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteForum.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {

                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;


                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }
                        oSystem.CloseDataConnection();

                        return RedirectToAction("WebSiteForum_List", new { _iParentID = iParentID, _sParentID = sParentID });


                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return RedirectToAction("WebSiteForum_List", new { _iParentID = iParentID, _sParentID = sParentID });

                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteForumiAnnouncements

        string sWebSiteForumiAnnouncements_Details = "/views/Forms/WebSiteForumiAnnouncements_Details.cshtml";
        string sWebSiteForumiAnnouncements_List = "/views/Forms/WebSiteForumiAnnouncements_List.cshtml";


        public ActionResult WebSiteForumiAnnouncements_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)

        {
            Set_Client_NavSettings("WebSiteForumiAnnouncements");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    Set_ViewBag_Global();
                    Set_ViewBag_UserInfo();
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }

                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForumiAnnouncements_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteForumiAnnouncements dbInteraction = new DINT_WebSiteForumiAnnouncements(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteForumiAnnouncements.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    DataParameter pParameter = null;
                    bool bParameterSet = false;
                    string sPRelationsToOthers = "";
                    //if (_iParentID > 0)
                    //{
                    pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                    lstParameters.Add(pParameter);
                    bParameterSet = true;
                    //}



                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;


                        bool bIsNumber = false;
                        bool bIsDate = false;
                        bool bIsBool = false;
                        #region Test For Number
                        try
                        {
                            int iTest = System.Convert.ToInt32(Search);
                            bIsNumber = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Date
                        try
                        {
                            DateTime dtTest = System.Convert.ToDateTime(Search);
                            bIsDate = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Boolean
                        try
                        {
                            bool bTest = System.Convert.ToBoolean(Search);
                            bIsBool = true;
                        }
                        catch
                        {
                        }
                        #endregion


                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }
                        //if (_iParentID > 0)
                        //{
                        //if (bIsNumber == true)
                        //{
                        //}
                        //}
                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }

                    }

                    iTotalRows = dbInteraction.GetRowCount(lstParameters);

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);


                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    else
                    {
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteForumiAnnouncements.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteForumiAnnouncements_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteForumiAnnouncements");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForumiAnnouncements_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteForumiAnnouncements dbInteraction = new DINT_WebSiteForumiAnnouncements(oSystem.cnCon);
                        List<DEF_WebSiteForumiAnnouncements.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteForumiAnnouncements.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteForumiAnnouncements dbInteraction = new DINT_WebSiteForumiAnnouncements(oSystem.cnCon);
                        List<DEF_WebSiteForumiAnnouncements.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteForumiAnnouncements.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }



        public ActionResult WebSiteForumiAnnouncements_Create(int _iParentID = 0, string _sParentID = "")

        {
            Set_Client_NavSettings("WebSiteForumiAnnouncements");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForumiAnnouncements_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_WebSiteForumiAnnouncements.RecordObject recRecord = new DEF_WebSiteForumiAnnouncements.RecordObject();


                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;





                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    oSystem.CloseDataConnection();
                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public ActionResult WebSiteForumiAnnouncements_AddUpdate(DEF_WebSiteForumiAnnouncements.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSiteForumiAnnouncements");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForumiAnnouncements_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;



                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSiteForumiAnnouncements dbInteraction = new DINT_WebSiteForumiAnnouncements(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);



                                oSystem.CloseDataConnection();
                                #endregion
                                return RedirectToAction("WebSiteForumiAnnouncements_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSiteForumiAnnouncements dbInteraction = new DINT_WebSiteForumiAnnouncements(oSystem.cnCon);
                                    _rec.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    return RedirectToAction("WebSiteForumiAnnouncements_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    oSystem.CloseDataConnection();
                                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            oSystem.CloseDataConnection();
                            return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteForumiAnnouncements_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteForumiAnnouncements");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteForumiAnnouncements dbInteraction = new DINT_WebSiteForumiAnnouncements(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteForumiAnnouncements.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteForumiAnnouncements.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {

                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;


                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }
                        oSystem.CloseDataConnection();

                        return RedirectToAction("WebSiteForumiAnnouncements_List", new { _iParentID = iParentID, _sParentID = sParentID });


                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return RedirectToAction("WebSiteForumiAnnouncements_List", new { _iParentID = iParentID, _sParentID = sParentID });

                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteForumTopiAnnouncements

        string sWebSiteForumTopiAnnouncements_Details = "/views/Forms/WebSiteForumTopiAnnouncements_Details.cshtml";
        string sWebSiteForumTopiAnnouncements_List = "/views/Forms/WebSiteForumTopiAnnouncements_List.cshtml";


        public ActionResult WebSiteForumTopiAnnouncements_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)

        {
            Set_Client_NavSettings("WebSiteForumTopiAnnouncements");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    Set_ViewBag_Global();
                    Set_ViewBag_UserInfo();
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }

                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForumTopiAnnouncements_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteForumTopiAnnouncements dbInteraction = new DINT_WebSiteForumTopiAnnouncements(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteForumTopiAnnouncements.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    DataParameter pParameter = null;
                    bool bParameterSet = false;
                    string sPRelationsToOthers = "";
                    //if (_iParentID > 0)
                    //{
                    pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                    lstParameters.Add(pParameter);
                    bParameterSet = true;
                    //}



                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;


                        bool bIsNumber = false;
                        bool bIsDate = false;
                        bool bIsBool = false;
                        #region Test For Number
                        try
                        {
                            int iTest = System.Convert.ToInt32(Search);
                            bIsNumber = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Date
                        try
                        {
                            DateTime dtTest = System.Convert.ToDateTime(Search);
                            bIsDate = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Boolean
                        try
                        {
                            bool bTest = System.Convert.ToBoolean(Search);
                            bIsBool = true;
                        }
                        catch
                        {
                        }
                        #endregion


                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }
                        //if (_iParentID > 0)
                        //{
                        //if (bIsNumber == true)
                        //{
                        //}
                        //}
                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }

                    }

                    iTotalRows = dbInteraction.GetRowCount(lstParameters);

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);


                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    else
                    {
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteForumTopiAnnouncements.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteForumTopiAnnouncements_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteForumTopiAnnouncements");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForumTopiAnnouncements_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteForumTopiAnnouncements dbInteraction = new DINT_WebSiteForumTopiAnnouncements(oSystem.cnCon);
                        List<DEF_WebSiteForumTopiAnnouncements.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteForumTopiAnnouncements.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteForumTopiAnnouncements dbInteraction = new DINT_WebSiteForumTopiAnnouncements(oSystem.cnCon);
                        List<DEF_WebSiteForumTopiAnnouncements.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteForumTopiAnnouncements.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }



        public ActionResult WebSiteForumTopiAnnouncements_Create(int _iParentID = 0, string _sParentID = "")

        {
            Set_Client_NavSettings("WebSiteForumTopiAnnouncements");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForumTopiAnnouncements_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_WebSiteForumTopiAnnouncements.RecordObject recRecord = new DEF_WebSiteForumTopiAnnouncements.RecordObject();


                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;





                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    oSystem.CloseDataConnection();
                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public ActionResult WebSiteForumTopiAnnouncements_AddUpdate(DEF_WebSiteForumTopiAnnouncements.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSiteForumTopiAnnouncements");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForumTopiAnnouncements_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;



                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSiteForumTopiAnnouncements dbInteraction = new DINT_WebSiteForumTopiAnnouncements(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);



                                oSystem.CloseDataConnection();
                                #endregion
                                return RedirectToAction("WebSiteForumTopiAnnouncements_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSiteForumTopiAnnouncements dbInteraction = new DINT_WebSiteForumTopiAnnouncements(oSystem.cnCon);
                                    _rec.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    return RedirectToAction("WebSiteForumTopiAnnouncements_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    oSystem.CloseDataConnection();
                                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            oSystem.CloseDataConnection();
                            return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteForumTopiAnnouncements_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteForumTopiAnnouncements");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteForumTopiAnnouncements dbInteraction = new DINT_WebSiteForumTopiAnnouncements(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteForumTopiAnnouncements.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteForumTopiAnnouncements.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {

                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;


                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }
                        oSystem.CloseDataConnection();

                        return RedirectToAction("WebSiteForumTopiAnnouncements_List", new { _iParentID = iParentID, _sParentID = sParentID });


                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return RedirectToAction("WebSiteForumTopiAnnouncements_List", new { _iParentID = iParentID, _sParentID = sParentID });

                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteForumTopicEvents

        string sWebSiteForumTopicEvents_Details = "/views/Forms/WebSiteForumTopicEvents_Details.cshtml";
        string sWebSiteForumTopicEvents_List = "/views/Forms/WebSiteForumTopicEvents_List.cshtml";


        public ActionResult WebSiteForumTopicEvents_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)

        {
            Set_Client_NavSettings("WebSiteForumTopicEvents");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    Set_ViewBag_Global();
                    Set_ViewBag_UserInfo();
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }

                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForumTopicEvents_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteForumTopicEvents dbInteraction = new DINT_WebSiteForumTopicEvents(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteForumTopicEvents.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    DataParameter pParameter = null;
                    bool bParameterSet = false;
                    string sPRelationsToOthers = "";
                    //if (_iParentID > 0)
                    //{
                    pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                    lstParameters.Add(pParameter);
                    bParameterSet = true;
                    //}



                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;


                        bool bIsNumber = false;
                        bool bIsDate = false;
                        bool bIsBool = false;
                        #region Test For Number
                        try
                        {
                            int iTest = System.Convert.ToInt32(Search);
                            bIsNumber = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Date
                        try
                        {
                            DateTime dtTest = System.Convert.ToDateTime(Search);
                            bIsDate = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Boolean
                        try
                        {
                            bool bTest = System.Convert.ToBoolean(Search);
                            bIsBool = true;
                        }
                        catch
                        {
                        }
                        #endregion


                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }
                        //if (_iParentID > 0)
                        //{
                        //if (bIsNumber == true)
                        //{
                        //}
                        //}
                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }

                    }

                    iTotalRows = dbInteraction.GetRowCount(lstParameters);

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);


                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    else
                    {
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteForumTopicEvents.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteForumTopicEvents_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteForumTopicEvents");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForumTopicEvents_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteForumTopicEvents dbInteraction = new DINT_WebSiteForumTopicEvents(oSystem.cnCon);
                        List<DEF_WebSiteForumTopicEvents.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteForumTopicEvents.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteForumTopicEvents dbInteraction = new DINT_WebSiteForumTopicEvents(oSystem.cnCon);
                        List<DEF_WebSiteForumTopicEvents.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteForumTopicEvents.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }



        public ActionResult WebSiteForumTopicEvents_Create(int _iParentID = 0, string _sParentID = "")

        {
            Set_Client_NavSettings("WebSiteForumTopicEvents");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForumTopicEvents_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_WebSiteForumTopicEvents.RecordObject recRecord = new DEF_WebSiteForumTopicEvents.RecordObject();


                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;





                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    oSystem.CloseDataConnection();
                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public ActionResult WebSiteForumTopicEvents_AddUpdate(DEF_WebSiteForumTopicEvents.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSiteForumTopicEvents");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForumTopicEvents_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;



                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSiteForumTopicEvents dbInteraction = new DINT_WebSiteForumTopicEvents(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);



                                oSystem.CloseDataConnection();
                                #endregion
                                return RedirectToAction("WebSiteForumTopicEvents_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSiteForumTopicEvents dbInteraction = new DINT_WebSiteForumTopicEvents(oSystem.cnCon);
                                    _rec.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    return RedirectToAction("WebSiteForumTopicEvents_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    oSystem.CloseDataConnection();
                                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            oSystem.CloseDataConnection();
                            return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteForumTopicEvents_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteForumTopicEvents");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteForumTopicEvents dbInteraction = new DINT_WebSiteForumTopicEvents(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteForumTopicEvents.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteForumTopicEvents.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {

                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;


                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }
                        oSystem.CloseDataConnection();

                        return RedirectToAction("WebSiteForumTopicEvents_List", new { _iParentID = iParentID, _sParentID = sParentID });


                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return RedirectToAction("WebSiteForumTopicEvents_List", new { _iParentID = iParentID, _sParentID = sParentID });

                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteForumTopicPosts

        string sWebSiteForumTopicPosts_Details = "/views/Forms/WebSiteForumTopicPosts_Details.cshtml";
        string sWebSiteForumTopicPosts_List = "/views/Forms/WebSiteForumTopicPosts_List.cshtml";


        public ActionResult WebSiteForumTopicPosts_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)

        {
            Set_Client_NavSettings("WebSiteForumTopicPosts");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    Set_ViewBag_Global();
                    Set_ViewBag_UserInfo();
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }

                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForumTopicPosts_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteForumTopicPosts dbInteraction = new DINT_WebSiteForumTopicPosts(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteForumTopicPosts.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    DataParameter pParameter = null;
                    bool bParameterSet = false;
                    string sPRelationsToOthers = "";
                    //if (_iParentID > 0)
                    //{
                    pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                    lstParameters.Add(pParameter);
                    bParameterSet = true;
                    //}



                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;


                        bool bIsNumber = false;
                        bool bIsDate = false;
                        bool bIsBool = false;
                        #region Test For Number
                        try
                        {
                            int iTest = System.Convert.ToInt32(Search);
                            bIsNumber = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Date
                        try
                        {
                            DateTime dtTest = System.Convert.ToDateTime(Search);
                            bIsDate = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Boolean
                        try
                        {
                            bool bTest = System.Convert.ToBoolean(Search);
                            bIsBool = true;
                        }
                        catch
                        {
                        }
                        #endregion


                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }
                        //if (_iParentID > 0)
                        //{
                        //if (bIsNumber == true)
                        //{
                        //}
                        //}
                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }

                    }

                    iTotalRows = dbInteraction.GetRowCount(lstParameters);

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);


                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    else
                    {
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteForumTopicPosts.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteForumTopicPosts_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteForumTopicPosts");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForumTopicPosts_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteForumTopicPosts dbInteraction = new DINT_WebSiteForumTopicPosts(oSystem.cnCon);
                        List<DEF_WebSiteForumTopicPosts.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteForumTopicPosts.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteForumTopicPosts dbInteraction = new DINT_WebSiteForumTopicPosts(oSystem.cnCon);
                        List<DEF_WebSiteForumTopicPosts.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteForumTopicPosts.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }



        public ActionResult WebSiteForumTopicPosts_Create(int _iParentID = 0, string _sParentID = "")

        {
            Set_Client_NavSettings("WebSiteForumTopicPosts");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForumTopicPosts_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_WebSiteForumTopicPosts.RecordObject recRecord = new DEF_WebSiteForumTopicPosts.RecordObject();


                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;





                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    oSystem.CloseDataConnection();
                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public ActionResult WebSiteForumTopicPosts_AddUpdate(DEF_WebSiteForumTopicPosts.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSiteForumTopicPosts");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForumTopicPosts_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;



                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSiteForumTopicPosts dbInteraction = new DINT_WebSiteForumTopicPosts(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);



                                oSystem.CloseDataConnection();
                                #endregion
                                return RedirectToAction("WebSiteForumTopicPosts_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSiteForumTopicPosts dbInteraction = new DINT_WebSiteForumTopicPosts(oSystem.cnCon);
                                    _rec.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    return RedirectToAction("WebSiteForumTopicPosts_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    oSystem.CloseDataConnection();
                                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            oSystem.CloseDataConnection();
                            return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteForumTopicPosts_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteForumTopicPosts");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteForumTopicPosts dbInteraction = new DINT_WebSiteForumTopicPosts(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteForumTopicPosts.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteForumTopicPosts.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {

                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;


                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }
                        oSystem.CloseDataConnection();

                        return RedirectToAction("WebSiteForumTopicPosts_List", new { _iParentID = iParentID, _sParentID = sParentID });


                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return RedirectToAction("WebSiteForumTopicPosts_List", new { _iParentID = iParentID, _sParentID = sParentID });

                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteForumTopicPostsResponses

        string sWebSiteForumTopicPostsResponses_Details = "/views/Forms/WebSiteForumTopicPostsResponses_Details.cshtml";
        string sWebSiteForumTopicPostsResponses_List = "/views/Forms/WebSiteForumTopicPostsResponses_List.cshtml";


        public ActionResult WebSiteForumTopicPostsResponses_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)

        {
            Set_Client_NavSettings("WebSiteForumTopicPostsResponses");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    Set_ViewBag_Global();
                    Set_ViewBag_UserInfo();
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }

                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForumTopicPostsResponses_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteForumTopicPostsResponses dbInteraction = new DINT_WebSiteForumTopicPostsResponses(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteForumTopicPostsResponses.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    DataParameter pParameter = null;
                    bool bParameterSet = false;
                    string sPRelationsToOthers = "";
                    //if (_iParentID > 0)
                    //{
                    pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                    lstParameters.Add(pParameter);
                    bParameterSet = true;
                    //}



                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;


                        bool bIsNumber = false;
                        bool bIsDate = false;
                        bool bIsBool = false;
                        #region Test For Number
                        try
                        {
                            int iTest = System.Convert.ToInt32(Search);
                            bIsNumber = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Date
                        try
                        {
                            DateTime dtTest = System.Convert.ToDateTime(Search);
                            bIsDate = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Boolean
                        try
                        {
                            bool bTest = System.Convert.ToBoolean(Search);
                            bIsBool = true;
                        }
                        catch
                        {
                        }
                        #endregion


                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }
                        //if (_iParentID > 0)
                        //{
                        //if (bIsNumber == true)
                        //{
                        //}
                        //}
                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }

                    }

                    iTotalRows = dbInteraction.GetRowCount(lstParameters);

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);


                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    else
                    {
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteForumTopicPostsResponses.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteForumTopicPostsResponses_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteForumTopicPostsResponses");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForumTopicPostsResponses_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteForumTopicPostsResponses dbInteraction = new DINT_WebSiteForumTopicPostsResponses(oSystem.cnCon);
                        List<DEF_WebSiteForumTopicPostsResponses.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteForumTopicPostsResponses.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteForumTopicPostsResponses dbInteraction = new DINT_WebSiteForumTopicPostsResponses(oSystem.cnCon);
                        List<DEF_WebSiteForumTopicPostsResponses.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteForumTopicPostsResponses.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }



        public ActionResult WebSiteForumTopicPostsResponses_Create(int _iParentID = 0, string _sParentID = "")

        {
            Set_Client_NavSettings("WebSiteForumTopicPostsResponses");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForumTopicPostsResponses_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_WebSiteForumTopicPostsResponses.RecordObject recRecord = new DEF_WebSiteForumTopicPostsResponses.RecordObject();


                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;





                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    oSystem.CloseDataConnection();
                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public ActionResult WebSiteForumTopicPostsResponses_AddUpdate(DEF_WebSiteForumTopicPostsResponses.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSiteForumTopicPostsResponses");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForumTopicPostsResponses_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;



                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSiteForumTopicPostsResponses dbInteraction = new DINT_WebSiteForumTopicPostsResponses(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);



                                oSystem.CloseDataConnection();
                                #endregion
                                return RedirectToAction("WebSiteForumTopicPostsResponses_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSiteForumTopicPostsResponses dbInteraction = new DINT_WebSiteForumTopicPostsResponses(oSystem.cnCon);
                                    _rec.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    return RedirectToAction("WebSiteForumTopicPostsResponses_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    oSystem.CloseDataConnection();
                                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            oSystem.CloseDataConnection();
                            return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteForumTopicPostsResponses_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteForumTopicPostsResponses");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteForumTopicPostsResponses dbInteraction = new DINT_WebSiteForumTopicPostsResponses(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteForumTopicPostsResponses.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteForumTopicPostsResponses.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {

                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;


                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }
                        oSystem.CloseDataConnection();

                        return RedirectToAction("WebSiteForumTopicPostsResponses_List", new { _iParentID = iParentID, _sParentID = sParentID });


                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return RedirectToAction("WebSiteForumTopicPostsResponses_List", new { _iParentID = iParentID, _sParentID = sParentID });

                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteForumTopics

        string sWebSiteForumTopics_Details = "/views/Forms/WebSiteForumTopics_Details.cshtml";
        string sWebSiteForumTopics_List = "/views/Forms/WebSiteForumTopics_List.cshtml";


        public ActionResult WebSiteForumTopics_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)

        {
            Set_Client_NavSettings("WebSiteForumTopics");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    Set_ViewBag_Global();
                    Set_ViewBag_UserInfo();
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }

                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForumTopics_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteForumTopics dbInteraction = new DINT_WebSiteForumTopics(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteForumTopics.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    DataParameter pParameter = null;
                    bool bParameterSet = false;
                    string sPRelationsToOthers = "";
                    //if (_iParentID > 0)
                    //{
                    pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                    lstParameters.Add(pParameter);
                    bParameterSet = true;
                    //}



                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;


                        bool bIsNumber = false;
                        bool bIsDate = false;
                        bool bIsBool = false;
                        #region Test For Number
                        try
                        {
                            int iTest = System.Convert.ToInt32(Search);
                            bIsNumber = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Date
                        try
                        {
                            DateTime dtTest = System.Convert.ToDateTime(Search);
                            bIsDate = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Boolean
                        try
                        {
                            bool bTest = System.Convert.ToBoolean(Search);
                            bIsBool = true;
                        }
                        catch
                        {
                        }
                        #endregion


                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }
                        //if (_iParentID > 0)
                        //{
                        //if (bIsNumber == true)
                        //{
                        //}
                        //}
                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }

                    }

                    iTotalRows = dbInteraction.GetRowCount(lstParameters);

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);


                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    else
                    {
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteForumTopics.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteForumTopics_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteForumTopics");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForumTopics_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteForumTopics dbInteraction = new DINT_WebSiteForumTopics(oSystem.cnCon);
                        List<DEF_WebSiteForumTopics.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteForumTopics.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteForumTopics dbInteraction = new DINT_WebSiteForumTopics(oSystem.cnCon);
                        List<DEF_WebSiteForumTopics.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteForumTopics.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }



        public ActionResult WebSiteForumTopics_Create(int _iParentID = 0, string _sParentID = "")

        {
            Set_Client_NavSettings("WebSiteForumTopics");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForumTopics_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_WebSiteForumTopics.RecordObject recRecord = new DEF_WebSiteForumTopics.RecordObject();


                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;





                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    oSystem.CloseDataConnection();
                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public ActionResult WebSiteForumTopics_AddUpdate(DEF_WebSiteForumTopics.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSiteForumTopics");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteForumTopics_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;



                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSiteForumTopics dbInteraction = new DINT_WebSiteForumTopics(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);



                                oSystem.CloseDataConnection();
                                #endregion
                                return RedirectToAction("WebSiteForumTopics_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSiteForumTopics dbInteraction = new DINT_WebSiteForumTopics(oSystem.cnCon);
                                    _rec.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    return RedirectToAction("WebSiteForumTopics_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    oSystem.CloseDataConnection();
                                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            oSystem.CloseDataConnection();
                            return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteForumTopics_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteForumTopics");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteForumTopics dbInteraction = new DINT_WebSiteForumTopics(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteForumTopics.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteForumTopics.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {

                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;


                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }
                        oSystem.CloseDataConnection();

                        return RedirectToAction("WebSiteForumTopics_List", new { _iParentID = iParentID, _sParentID = sParentID });


                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return RedirectToAction("WebSiteForumTopics_List", new { _iParentID = iParentID, _sParentID = sParentID });

                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteIPFilters

        string sWebSiteIPFilters_Details = "/views/Forms/WebSiteIPFilters_Details.cshtml";
        string sWebSiteIPFilters_List = "/views/Forms/WebSiteIPFilters_List.cshtml";

        public ActionResult WebSiteIPFilters_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSiteIPFilters_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteIPFilters_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteIPFilters dbInteraction = new DINT_WebSiteIPFilters(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteIPFilters.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    DataParameter pParameter = null;


                    if (_iParentID > 0)
                    {
                        pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }


                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        lstParameters = new List<DataParameter>();
                        if (_iParentID > 0)
                        {
                            pParameter = new DataParameter("sIP", "'%" + Search + "%'", "string", 11, "sIP", " LIKE ", " AND ");
                            lstParameters.Add(pParameter);
                            iTotalRows = dbInteraction.GetRowCount(lstParameters);
                        }
                        else
                        {
                            pParameter = new DataParameter("sIP", "'%" + Search + "%'", "string", 11, "sIP", " LIKE ", "");
                            lstParameters.Add(pParameter);
                            iTotalRows = dbInteraction.GetRowCount(lstParameters);
                        }
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteIPFilters.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteIPFilters_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteIPFilters_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteIPFilters_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteIPFilters dbInteraction = new DINT_WebSiteIPFilters(oSystem.cnCon);
                        List<DEF_WebSiteIPFilters.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteIPFilters.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteIPFilters dbInteraction = new DINT_WebSiteIPFilters(oSystem.cnCon);
                        List<DEF_WebSiteIPFilters.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteIPFilters.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }

                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        //
        public ActionResult WebSiteIPFilters_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSiteIPFilters_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteIPFilters_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_WebSiteIPFilters.RecordObject recRecord = new DEF_WebSiteIPFilters.RecordObject();

                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;


                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public ActionResult WebSiteIPFilters_AddUpdate(DEF_WebSiteIPFilters.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSiteIPFilters_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteIPFilters_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSiteIPFilters dbInteraction = new DINT_WebSiteIPFilters(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);



                                //List<DataParameter> lstParameters = new List<DataParameter>();
                                //DataParameter pParameter = new DataParameter("sControl", "'" + _rec.WebSitePage.sControl.ToString() + "'", "sControl", 3, "sControl", " = ", "");
                                //lstParameters.Add(pParameter);

                                //List<DEF_WebSiteIPFilters.RecordObject> dbSearch = dbInteraction.Get(lstParameters);
                                //if (dbSearch != null)
                                //{
                                //  if (dbSearch.Count > 0)
                                //  {
                                //      _rec = dbSearch[0];
                                //      ViewBag.iParentID = _rec.iParentID;
                                //      ViewBag.sParentID = _rec.sParentID;
                                //  }
                                //}


                                oSystem.CloseDataConnection();
                                //return RedirectToAction("WebSiteIPFilters_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                #endregion
                                return RedirectToAction("WebSiteIPFilters_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSiteIPFilters dbInteraction = new DINT_WebSiteIPFilters(oSystem.cnCon);

                                    _rec.dtLastUpdated = DateTime.Now;
                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("WebSiteIPFilters_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    oSystem.CloseDataConnection();
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    //return RedirectToAction("StatesDetails", new { id = 0, _bOverrideScreenMessage = true });

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);
                                }
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            //return RedirectToAction("StatesDetails", new { id = 0, _bOverrideScreenMessage = true });

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);
                        }
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        //return RedirectToAction("StatesDetails", new { id = 0, _bOverrideScreenMessage = true });

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteIPFilters_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteIPFilters_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteIPFilters dbInteraction = new DINT_WebSiteIPFilters(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteIPFilters.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteIPFilters.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        //iParentID = recRecord.iParentID;
                                        //sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }
                        oSystem.CloseDataConnection();
                        return RedirectToAction("WebSiteIPFilters_List", new { _iParentID = iParentID, _sParentID = sParentID });
                        //return RedirectToAction("WebSiteIPFilters_List");
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return RedirectToAction("WebSiteIPFilters_List", new { _iParentID = iParentID, _sParentID = sParentID });
                        //return RedirectToAction("WebSiteIPFilters_List");
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSite_Leads

        string sWebSite_Leads_Details = "/views/Forms/WebSite_Leads_Details.cshtml";
        string sWebSite_Leads_List = "/views/Forms/WebSite_Leads_List.cshtml";


        public ActionResult WebSite_Leads_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSite_Leads");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    Set_ViewBag_Global();
                    Set_ViewBag_UserInfo();
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }

                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSite_Leads_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSite_Leads dbInteraction = new DINT_WebSite_Leads(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSite_Leads.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    DataParameter pParameter = null;
                    bool bParameterSet = false;
                    string sPRelationsToOthers = "";
                    //if (_iParentID > 0)
                    //{
                    pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                    lstParameters.Add(pParameter);
                    bParameterSet = true;
                    //}



                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;


                        bool bIsNumber = false;
                        bool bIsDate = false;
                        bool bIsBool = false;
                        #region Test For Number
                        try
                        {
                            int iTest = System.Convert.ToInt32(Search);
                            bIsNumber = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Date
                        try
                        {
                            DateTime dtTest = System.Convert.ToDateTime(Search);
                            bIsDate = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Boolean
                        try
                        {
                            bool bTest = System.Convert.ToBoolean(Search);
                            bIsBool = true;
                        }
                        catch
                        {
                        }
                        #endregion


                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }
                        //if (_iParentID > 0)
                        //{
                        //if (bIsNumber == true)
                        //{
                        //}
                        //}
                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }

                    }

                    iTotalRows = dbInteraction.GetRowCount(lstParameters);

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);


                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    else
                    {
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSite_Leads.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSite_Leads_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSite_Leads");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSite_Leads_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSite_Leads dbInteraction = new DINT_WebSite_Leads(oSystem.cnCon);
                        List<DEF_WebSite_Leads.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                //DEF_WebSite_Leads.RecordObject recRecord = dbSearch[0];
                                ACMSDBView.WebSite_LeadsViewModel recRecord = new WebSite_LeadsViewModel();
                                recRecord.WebSite_Leads = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.WebSite_Leads.iParentID;
                                ViewBag.sParentID = recRecord.WebSite_Leads.sParentID;

                                recRecord.Get_Countries(oSystem.cnCon);
                                recRecord.Get_States(oSystem.cnCon, recRecord.WebSite_Leads.iCountryID);

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSite_Leads dbInteraction = new DINT_WebSite_Leads(oSystem.cnCon);
                        List<DEF_WebSite_Leads.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                //DEF_WebSite_Leads.RecordObject recRecord = dbSearch[0];
                                ACMSDBView.WebSite_LeadsViewModel recRecord = new WebSite_LeadsViewModel();
                                recRecord.WebSite_Leads = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.WebSite_Leads.iParentID;
                                ViewBag.sParentID = recRecord.WebSite_Leads.sParentID;

                                recRecord.Get_Countries(oSystem.cnCon);
                                recRecord.Get_States(oSystem.cnCon, recRecord.WebSite_Leads.iCountryID);



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }



        public ActionResult WebSite_Leads_Create(int _iParentID = 0, string _sParentID = "")

        {
            Set_Client_NavSettings("WebSite_Leads");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSite_Leads_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    //DEF_WebSite_Leads.RecordObject recRecord = new DEF_WebSite_Leads.RecordObject();

                    ACMSDBView.WebSite_LeadsViewModel recRecord = new WebSite_LeadsViewModel();

                    recRecord.WebSite_Leads.iParentID = _iParentID;
                    recRecord.WebSite_Leads.sParentID = _sParentID;

                    recRecord.Get_Countries(oSystem.cnCon);
                    recRecord.Get_States(oSystem.cnCon);






                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    oSystem.CloseDataConnection();
                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public ActionResult WebSite_Leads_AddUpdate(DEF_WebSite_Leads.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSite_Leads");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSite_Leads_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;



                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSite_Leads dbInteraction = new DINT_WebSite_Leads(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);



                                oSystem.CloseDataConnection();
                                #endregion
                                return RedirectToAction("WebSite_Leads_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSite_Leads dbInteraction = new DINT_WebSite_Leads(oSystem.cnCon);
                                    _rec.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    return RedirectToAction("WebSite_Leads_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    oSystem.CloseDataConnection();
                                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            oSystem.CloseDataConnection();
                            return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSite_Leads_Delete(int id)
        {
            Set_Client_NavSettings("WebSite_Leads");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSite_Leads dbInteraction = new DINT_WebSite_Leads(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSite_Leads.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSite_Leads.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {

                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;


                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }
                        oSystem.CloseDataConnection();

                        return RedirectToAction("WebSite_Leads_List", new { _iParentID = iParentID, _sParentID = sParentID });


                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return RedirectToAction("WebSite_Leads_List", new { _iParentID = iParentID, _sParentID = sParentID });

                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteAdGroupAds

        string sWebSiteAdGroupAds_Details = "/views/Forms/WebSiteAdGroupAds_Details.cshtml";
        string sWebSiteAdGroupAds_List = "/views/Forms/WebSiteAdGroupAds_List.cshtml";


        public ActionResult WebSiteAdGroupAds_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)

        {
            Set_Client_NavSettings("WebSiteAdGroupAds");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    Set_ViewBag_Global();
                    Set_ViewBag_UserInfo();
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }

                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteAdGroupAds_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteAdGroupAds dbInteraction = new DINT_WebSiteAdGroupAds(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteAdGroupAds.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    DataParameter pParameter = null;
                    bool bParameterSet = false;
                    string sPRelationsToOthers = "";
                    //if (_iParentID > 0)
                    //{
                    pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                    lstParameters.Add(pParameter);
                    bParameterSet = true;
                    //}



                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;


                        bool bIsNumber = false;
                        bool bIsDate = false;
                        bool bIsBool = false;
                        #region Test For Number
                        try
                        {
                            int iTest = System.Convert.ToInt32(Search);
                            bIsNumber = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Date
                        try
                        {
                            DateTime dtTest = System.Convert.ToDateTime(Search);
                            bIsDate = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Boolean
                        try
                        {
                            bool bTest = System.Convert.ToBoolean(Search);
                            bIsBool = true;
                        }
                        catch
                        {
                        }
                        #endregion


                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }
                        //if (_iParentID > 0)
                        //{
                        //if (bIsNumber == true)
                        //{
                        //}
                        //}
                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }

                    }

                    iTotalRows = dbInteraction.GetRowCount(lstParameters);

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);


                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    else
                    {
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteAdGroupAds.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteAdGroupAds_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteAdGroupAds");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteAdGroupAds_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteAdGroupAds dbInteraction = new DINT_WebSiteAdGroupAds(oSystem.cnCon);
                        List<DEF_WebSiteAdGroupAds.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteAdGroupAds.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteAdGroupAds dbInteraction = new DINT_WebSiteAdGroupAds(oSystem.cnCon);
                        List<DEF_WebSiteAdGroupAds.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteAdGroupAds.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }



        public ActionResult WebSiteAdGroupAds_Create(int _iParentID = 0, string _sParentID = "")

        {
            Set_Client_NavSettings("WebSiteAdGroupAds");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteAdGroupAds_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_WebSiteAdGroupAds.RecordObject recRecord = new DEF_WebSiteAdGroupAds.RecordObject();


                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;





                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    oSystem.CloseDataConnection();
                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public ActionResult WebSiteAdGroupAds_AddUpdate(DEF_WebSiteAdGroupAds.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSiteAdGroupAds");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteAdGroupAds_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;



                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSiteAdGroupAds dbInteraction = new DINT_WebSiteAdGroupAds(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);



                                oSystem.CloseDataConnection();
                                #endregion
                                return RedirectToAction("WebSiteAdGroupAds_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSiteAdGroupAds dbInteraction = new DINT_WebSiteAdGroupAds(oSystem.cnCon);
                                    _rec.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    return RedirectToAction("WebSiteAdGroupAds_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    oSystem.CloseDataConnection();
                                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            oSystem.CloseDataConnection();
                            return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteAdGroupAds_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteAdGroupAds");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteAdGroupAds dbInteraction = new DINT_WebSiteAdGroupAds(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteAdGroupAds.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteAdGroupAds.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {

                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;


                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }
                        oSystem.CloseDataConnection();

                        return RedirectToAction("WebSiteAdGroupAds_List", new { _iParentID = iParentID, _sParentID = sParentID });


                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return RedirectToAction("WebSiteAdGroupAds_List", new { _iParentID = iParentID, _sParentID = sParentID });

                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteAdvertisementGroup

        string sWebSiteAdvertisementGroup_Details = "/views/Forms/WebSiteAdvertisementGroup_Details.cshtml";
        string sWebSiteAdvertisementGroup_List = "/views/Forms/WebSiteAdvertisementGroup_List.cshtml";


        public ActionResult WebSiteAdvertisementGroup_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)

        {
            Set_Client_NavSettings("WebSiteAdvertisementGroup");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    Set_ViewBag_Global();
                    Set_ViewBag_UserInfo();
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }

                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteAdvertisementGroup_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteAdvertisementGroup dbInteraction = new DINT_WebSiteAdvertisementGroup(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteAdvertisementGroup.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    DataParameter pParameter = null;
                    bool bParameterSet = false;
                    string sPRelationsToOthers = "";
                    //if (_iParentID > 0)
                    //{
                    pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                    lstParameters.Add(pParameter);
                    bParameterSet = true;
                    //}



                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;


                        bool bIsNumber = false;
                        bool bIsDate = false;
                        bool bIsBool = false;
                        #region Test For Number
                        try
                        {
                            int iTest = System.Convert.ToInt32(Search);
                            bIsNumber = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Date
                        try
                        {
                            DateTime dtTest = System.Convert.ToDateTime(Search);
                            bIsDate = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Boolean
                        try
                        {
                            bool bTest = System.Convert.ToBoolean(Search);
                            bIsBool = true;
                        }
                        catch
                        {
                        }
                        #endregion


                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }
                        //if (_iParentID > 0)
                        //{
                        //if (bIsNumber == true)
                        //{
                        //}
                        //}
                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }

                    }

                    iTotalRows = dbInteraction.GetRowCount(lstParameters);

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);


                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    else
                    {
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteAdvertisementGroup.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteAdvertisementGroup_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteAdvertisementGroup");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteAdvertisementGroup_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteAdvertisementGroup dbInteraction = new DINT_WebSiteAdvertisementGroup(oSystem.cnCon);
                        List<DEF_WebSiteAdvertisementGroup.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteAdvertisementGroup.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteAdvertisementGroup dbInteraction = new DINT_WebSiteAdvertisementGroup(oSystem.cnCon);
                        List<DEF_WebSiteAdvertisementGroup.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteAdvertisementGroup.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }



        public ActionResult WebSiteAdvertisementGroup_Create(int _iParentID = 0, string _sParentID = "")

        {
            Set_Client_NavSettings("WebSiteAdvertisementGroup");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteAdvertisementGroup_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_WebSiteAdvertisementGroup.RecordObject recRecord = new DEF_WebSiteAdvertisementGroup.RecordObject();


                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;





                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    oSystem.CloseDataConnection();
                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public ActionResult WebSiteAdvertisementGroup_AddUpdate(DEF_WebSiteAdvertisementGroup.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSiteAdvertisementGroup");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteAdvertisementGroup_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;



                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSiteAdvertisementGroup dbInteraction = new DINT_WebSiteAdvertisementGroup(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);



                                oSystem.CloseDataConnection();
                                #endregion
                                return RedirectToAction("WebSiteAdvertisementGroup_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSiteAdvertisementGroup dbInteraction = new DINT_WebSiteAdvertisementGroup(oSystem.cnCon);
                                    _rec.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    return RedirectToAction("WebSiteAdvertisementGroup_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    oSystem.CloseDataConnection();
                                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            oSystem.CloseDataConnection();
                            return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteAdvertisementGroup_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteAdvertisementGroup");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteAdvertisementGroup dbInteraction = new DINT_WebSiteAdvertisementGroup(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteAdvertisementGroup.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteAdvertisementGroup.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {

                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;


                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }
                        oSystem.CloseDataConnection();

                        return RedirectToAction("WebSiteAdvertisementGroup_List", new { _iParentID = iParentID, _sParentID = sParentID });


                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return RedirectToAction("WebSiteAdvertisementGroup_List", new { _iParentID = iParentID, _sParentID = sParentID });

                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }
        #endregion
        
        #region Form WebSiteModules
        public ActionResult WebSiteModules_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSiteModules_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteModules_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteModules dbInteraction = new DINT_WebSiteModules(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteModules.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }

                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        DataParameter pParameter = new DataParameter("sName", "'" + Search + "'", "string", 10, "sName", " = ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteModules.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteModules_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteModules_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteModules_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteModules dbInteraction = new DINT_WebSiteModules(oSystem.cnCon);
                        List<DEF_WebSiteModules.RecordObject> dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteModules.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 1, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteModules dbInteraction = new DINT_WebSiteModules(oSystem.cnCon);
                        List<DEF_WebSiteModules.RecordObject> dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteModules.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteModules_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSiteModules_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteModules_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_WebSiteModules.RecordObject recRecord = new DEF_WebSiteModules.RecordObject();
                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;
                    oSystem.CloseDataConnection();
                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public ActionResult WebSiteModules_AddUpdate(DEF_WebSiteModules.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSiteModules_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteModules_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSiteModules dbInteraction = new DINT_WebSiteModules(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);

                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("WebSiteModules_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSiteModules dbInteraction = new DINT_WebSiteModules(oSystem.cnCon);

                                    _rec.dtLastUpdated = DateTime.Now;
                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("WebSiteModules_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);

                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteModules_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteModules_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteModules dbInteraction = new DINT_WebSiteModules(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteModules.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteModules.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("WebSiteModules_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("WebSiteModules_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteNavigation
        public ActionResult WebSiteNavigation_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSiteNavigation_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteNavigation_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteNavigation dbInteraction = new DINT_WebSiteNavigation(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteNavigation.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }

                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sDisplayName", "'%" + Search + "%'", "string", 10, "sDisplayName", " LIKE ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteNavigation.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteNavigation_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteNavigation_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteNavigation_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteNavigation dbInteraction = new DINT_WebSiteNavigation(oSystem.cnCon);
                        List<DEF_WebSiteNavigation.RecordObject> dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                ACMSDBView.WebSiteNavigationViewModel recRecord = new WebSiteNavigationViewModel();
                                recRecord.GetView(oSystem.cnCon, dbSearch[0].ID);
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.Navigation.iParentID;
                                ViewBag.sParentID = recRecord.Navigation.sParentID;
                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 1, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteNavigation dbInteraction = new DINT_WebSiteNavigation(oSystem.cnCon);
                        List<DEF_WebSiteNavigation.RecordObject> dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                ACMSDBView.WebSiteNavigationViewModel recRecord = new WebSiteNavigationViewModel();
                                recRecord.GetView(oSystem.cnCon, dbSearch[0].ID);
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.Navigation.iParentID;
                                ViewBag.sParentID = recRecord.Navigation.sParentID;
                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteNavigation_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSiteNavigation_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteNavigation_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    ACMSDBView.WebSiteNavigationViewModel recRecord = new WebSiteNavigationViewModel();
                    recRecord.Navigation = new DEF_WebSiteNavigation.RecordObject();

                    recRecord.Navigation.iParentID = _iParentID;
                    recRecord.Navigation.sParentID = _sParentID;

                    recRecord.Get_NavigationList(oSystem.cnCon, _iParentID);
                    recRecord.Get_PagesList(oSystem.cnCon, _iParentID);

                    oSystem.CloseDataConnection();
                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public ActionResult WebSiteNavigation_AddUpdate(ACMSDBView.WebSiteNavigationViewModel _rec)
        {
            Set_Client_NavSettings("WebSiteNavigation_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteNavigation_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.Navigation.ID == null) || (_rec.Navigation.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.Navigation.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.Navigation.iParentID;
                            ViewBag.sParentID = _rec.Navigation.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSiteNavigation dbInteraction = new DINT_WebSiteNavigation(oSystem.cnCon);

                                _rec.Navigation.sControl = Guid.NewGuid().ToString();
                                _rec.Navigation.dtDateCreated = DateTime.Now;
                                _rec.Navigation.dtLastUpdated = DateTime.Now;

                                _rec.Get_NavigationList(oSystem.cnCon, _rec.Navigation.iPageID);
                                _rec.Get_PagesList(oSystem.cnCon, _rec.Navigation.iPageID);
                                if (_rec.Navigation.iPageID > 0)
                                {
                                    foreach (SelectListItem oRec in _rec.Pages)
                                    {
                                        if (oRec.Value == _rec.Navigation.iPageID.ToString())
                                        {
                                            _rec.Navigation.sPageID = oRec.Text;
                                        }
                                    }
                                }



                                dbInteraction.Insert_SQL(_rec.Navigation);

                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("WebSiteNavigation_Details", new { key = _rec.Navigation.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.Navigation.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSiteNavigation dbInteraction = new DINT_WebSiteNavigation(oSystem.cnCon);

                                    _rec.Navigation.dtLastUpdated = DateTime.Now;

                                    _rec.Get_NavigationList(oSystem.cnCon, _rec.Navigation.iParentID);
                                    _rec.Get_PagesList(oSystem.cnCon, _rec.Navigation.iParentID);
                                    if (_rec.Navigation.iPageID > 0)
                                    {
                                        foreach (SelectListItem oRec in _rec.Pages)
                                        {
                                            if (oRec.Value == _rec.Navigation.iPageID.ToString())
                                            {
                                                _rec.Navigation.sPageID = oRec.Text;
                                            }
                                        }
                                    }


                                    dbInteraction.Update_SQL(_rec.Navigation);


                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("WebSiteNavigation_Details", new { id = _rec.Navigation.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);

                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteNavigation_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteNavigation_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteNavigation dbInteraction = new DINT_WebSiteNavigation(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteNavigation.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteNavigation.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("WebSiteNavigation_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("WebSiteNavigation_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSitePage
        public ActionResult WebSitePage_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSitePage_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePage_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSitePage dbInteraction = new DINT_WebSitePage(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSitePage.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }

                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sPageName", "'%" + Search + "%'", "string", 10, "sPageName", " LIKE ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSitePage.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSitePage_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSitePage_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePage_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSitePage dbInteraction = new DINT_WebSitePage(oSystem.cnCon);
                        List<DEF_WebSitePage.RecordObject> dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                ACMSDBView.WebSitePageViewModel recRecord = new ACMSDBView.WebSitePageViewModel();

                                recRecord.GetView(oSystem.cnCon, dbSearch[0].ID, dbSearch[0].iLanguageID);
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                recRecord.Get_Languages(oSystem.cnCon);
                                recRecord.Get_SiteTemplatesList(oSystem.cnCon, 1);

                                if (recRecord.WebSitePage.iSiteTemplateID > 0)
                                {
                                    recRecord.Get_SiteTemplatesPages(oSystem.cnCon, recRecord.WebSitePage.iSiteTemplateID);
                                }

                                ViewBag.iParentID = recRecord.WebSitePage.iParentID;
                                ViewBag.sParentID = recRecord.WebSitePage.sParentID;

                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 1, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSitePage dbInteraction = new DINT_WebSitePage(oSystem.cnCon);
                        List<DEF_WebSitePage.RecordObject> dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                ACMSDBView.WebSitePageViewModel recRecord = new ACMSDBView.WebSitePageViewModel();

                                recRecord.GetView(oSystem.cnCon, dbSearch[0].ID, dbSearch[0].iLanguageID);
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                recRecord.Get_Languages(oSystem.cnCon);
                                recRecord.Get_SiteTemplatesList(oSystem.cnCon, 1);

                                if (recRecord.WebSitePage.iSiteTemplateID > 0)
                                {
                                    recRecord.Get_SiteTemplatesPages(oSystem.cnCon, recRecord.WebSitePage.iSiteTemplateID);
                                }

                                ViewBag.iParentID = recRecord.WebSitePage.iParentID;
                                ViewBag.sParentID = recRecord.WebSitePage.sParentID;

                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSitePage_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSitePage_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePage_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";

                    ACMSDBView.WebSitePageViewModel recRecord = new ACMSDBView.WebSitePageViewModel();
                    recRecord.WebSitePage = new DEF_WebSitePage.RecordObject();
                    recRecord.WebSitePage.iParentID = _iParentID;
                    recRecord.WebSitePage.sParentID = _sParentID;

                    recRecord.WebSitePage.dtEnd = DateTime.Parse("01/01/1901");
                    recRecord.WebSitePage.dtStart = DateTime.Parse("01/01/1901");


                    recRecord.WebSitePage.iLanguageID = 205;
                    recRecord.WebSitePage.sLanguageID = "United States English";


                    recRecord.Get_SiteTemplatesList(oSystem.cnCon, _iParentID);

                    recRecord.Get_Languages(oSystem.cnCon);
                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        [ValidateInput(false)]
        public ActionResult WebSitePage_AddUpdate(ACMSDBView.WebSitePageViewModel _rec)
        {
            Set_Client_NavSettings("WebSitePage_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePage_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.WebSitePage.ID == null) || (_rec.WebSitePage.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.WebSitePage.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.WebSitePage.iParentID;
                            ViewBag.sParentID = _rec.WebSitePage.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSitePage dbInteraction = new DINT_WebSitePage(oSystem.cnCon);

                                _rec.WebSitePage.sControl = Guid.NewGuid().ToString();
                                _rec.WebSitePage.dtDateCreated = DateTime.Now;
                                _rec.WebSitePage.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec.WebSitePage);

                                _rec.Get_SiteTemplatesList(oSystem.cnCon, _rec.WebSitePage.iParentID);


                                List<DataParameter> lstParameters = new List<DataParameter>();
                                DataParameter pParameter = new DataParameter("sControl", "'" + _rec.WebSitePage.sControl.ToString() + "'", "sControl", 3, "sControl", " = ", "");
                                lstParameters.Add(pParameter);

                                List<DEF_WebSitePage.RecordObject> dbSearch = dbInteraction.Get(lstParameters);
                                if (dbSearch != null)
                                {
                                    if (dbSearch.Count > 0)
                                    {
                                        _rec.WebSitePage = dbSearch[0];
                                        ViewBag.iParentID = _rec.WebSitePage.iParentID;
                                        ViewBag.sParentID = _rec.WebSitePage.sParentID;
                                    }
                                }



                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("WebSitePage_Details", new { key = _rec.WebSitePage.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.WebSitePage.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSitePage dbInteraction = new DINT_WebSitePage(oSystem.cnCon);

                                    _rec.WebSitePage.dtLastUpdated = DateTime.Now;
                                    dbInteraction.Update_SQL(_rec.WebSitePage);

                                    _rec.Get_SiteTemplatesList(oSystem.cnCon, _rec.WebSitePage.iParentID);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("WebSitePage_Details", new { id = _rec.WebSitePage.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);

                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSitePage_Delete(int id)
        {
            Set_Client_NavSettings("WebSitePage_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSitePage dbInteraction = new DINT_WebSitePage(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSitePage.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSitePage.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("WebSitePage_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("WebSitePage_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion
        
        #region Form WebSitePageComments

        string sWebSitePageComments_Details = "/views/Forms/WebSitePageComments_Details.cshtml";
        string sWebSitePageComments_List = "/views/Forms/WebSitePageComments_List.cshtml";


        public ActionResult WebSitePageComments_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)

        {
            Set_Client_NavSettings("WebSitePageComments");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    Set_ViewBag_Global();
                    Set_ViewBag_UserInfo();
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }

                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageComments_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSitePageComments dbInteraction = new DINT_WebSitePageComments(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSitePageComments.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    DataParameter pParameter = null;
                    bool bParameterSet = false;
                    string sPRelationsToOthers = "";
                    //if (_iParentID > 0)
                    //{
                    pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                    lstParameters.Add(pParameter);
                    bParameterSet = true;
                    //}



                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;


                        bool bIsNumber = false;
                        bool bIsDate = false;
                        bool bIsBool = false;
                        #region Test For Number
                        try
                        {
                            int iTest = System.Convert.ToInt32(Search);
                            bIsNumber = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Date
                        try
                        {
                            DateTime dtTest = System.Convert.ToDateTime(Search);
                            bIsDate = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Boolean
                        try
                        {
                            bool bTest = System.Convert.ToBoolean(Search);
                            bIsBool = true;
                        }
                        catch
                        {
                        }
                        #endregion


                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }
                        //if (_iParentID > 0)
                        //{
                        //if (bIsNumber == true)
                        //{
                        //}
                        //}
                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }

                    }

                    iTotalRows = dbInteraction.GetRowCount(lstParameters);

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);


                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    else
                    {
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSitePageComments.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSitePageComments_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSitePageComments");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageComments_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSitePageComments dbInteraction = new DINT_WebSitePageComments(oSystem.cnCon);
                        List<DEF_WebSitePageComments.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSitePageComments.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSitePageComments dbInteraction = new DINT_WebSitePageComments(oSystem.cnCon);
                        List<DEF_WebSitePageComments.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSitePageComments.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }



        public ActionResult WebSitePageComments_Create(int _iParentID = 0, string _sParentID = "")

        {
            Set_Client_NavSettings("WebSitePageComments");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageComments_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_WebSitePageComments.RecordObject recRecord = new DEF_WebSitePageComments.RecordObject();


                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;





                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    oSystem.CloseDataConnection();
                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public ActionResult WebSitePageComments_AddUpdate(DEF_WebSitePageComments.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSitePageComments");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageComments_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;



                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSitePageComments dbInteraction = new DINT_WebSitePageComments(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);



                                oSystem.CloseDataConnection();
                                #endregion
                                return RedirectToAction("WebSitePageComments_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSitePageComments dbInteraction = new DINT_WebSitePageComments(oSystem.cnCon);
                                    _rec.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    return RedirectToAction("WebSitePageComments_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    oSystem.CloseDataConnection();
                                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            oSystem.CloseDataConnection();
                            return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSitePageComments_Delete(int id)
        {
            Set_Client_NavSettings("WebSitePageComments");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSitePageComments dbInteraction = new DINT_WebSitePageComments(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSitePageComments.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSitePageComments.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {

                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;


                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }
                        oSystem.CloseDataConnection();

                        return RedirectToAction("WebSitePageComments_List", new { _iParentID = iParentID, _sParentID = sParentID });


                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return RedirectToAction("WebSitePageComments_List", new { _iParentID = iParentID, _sParentID = sParentID });

                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSitePageiAnnouncements

        string sWebSitePageiAnnouncements_Details = "/views/Forms/WebSitePageiAnnouncements_Details.cshtml";
        string sWebSitePageiAnnouncements_List = "/views/Forms/WebSitePageiAnnouncements_List.cshtml";


        public ActionResult WebSitePageiAnnouncements_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)

        {
            Set_Client_NavSettings("WebSitePageiAnnouncements");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    Set_ViewBag_Global();
                    Set_ViewBag_UserInfo();
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }

                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageiAnnouncements_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSitePageiAnnouncements dbInteraction = new DINT_WebSitePageiAnnouncements(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSitePageiAnnouncements.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    DataParameter pParameter = null;
                    bool bParameterSet = false;
                    string sPRelationsToOthers = "";
                    //if (_iParentID > 0)
                    //{
                    pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                    lstParameters.Add(pParameter);
                    bParameterSet = true;
                    //}



                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;


                        bool bIsNumber = false;
                        bool bIsDate = false;
                        bool bIsBool = false;
                        #region Test For Number
                        try
                        {
                            int iTest = System.Convert.ToInt32(Search);
                            bIsNumber = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Date
                        try
                        {
                            DateTime dtTest = System.Convert.ToDateTime(Search);
                            bIsDate = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Boolean
                        try
                        {
                            bool bTest = System.Convert.ToBoolean(Search);
                            bIsBool = true;
                        }
                        catch
                        {
                        }
                        #endregion


                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }
                        //if (_iParentID > 0)
                        //{
                        //if (bIsNumber == true)
                        //{
                        //}
                        //}
                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }

                    }

                    iTotalRows = dbInteraction.GetRowCount(lstParameters);

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);


                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    else
                    {
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSitePageiAnnouncements.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSitePageiAnnouncements_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSitePageiAnnouncements");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageiAnnouncements_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSitePageiAnnouncements dbInteraction = new DINT_WebSitePageiAnnouncements(oSystem.cnCon);
                        List<DEF_WebSitePageiAnnouncements.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSitePageiAnnouncements.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSitePageiAnnouncements dbInteraction = new DINT_WebSitePageiAnnouncements(oSystem.cnCon);
                        List<DEF_WebSitePageiAnnouncements.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSitePageiAnnouncements.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }



        public ActionResult WebSitePageiAnnouncements_Create(int _iParentID = 0, string _sParentID = "")

        {
            Set_Client_NavSettings("WebSitePageiAnnouncements");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageiAnnouncements_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_WebSitePageiAnnouncements.RecordObject recRecord = new DEF_WebSitePageiAnnouncements.RecordObject();


                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;





                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    oSystem.CloseDataConnection();
                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public ActionResult WebSitePageiAnnouncements_AddUpdate(DEF_WebSitePageiAnnouncements.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSitePageiAnnouncements");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageiAnnouncements_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;



                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSitePageiAnnouncements dbInteraction = new DINT_WebSitePageiAnnouncements(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);



                                oSystem.CloseDataConnection();
                                #endregion
                                return RedirectToAction("WebSitePageiAnnouncements_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSitePageiAnnouncements dbInteraction = new DINT_WebSitePageiAnnouncements(oSystem.cnCon);
                                    _rec.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    return RedirectToAction("WebSitePageiAnnouncements_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    oSystem.CloseDataConnection();
                                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            oSystem.CloseDataConnection();
                            return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSitePageiAnnouncements_Delete(int id)
        {
            Set_Client_NavSettings("WebSitePageiAnnouncements");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSitePageiAnnouncements dbInteraction = new DINT_WebSitePageiAnnouncements(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSitePageiAnnouncements.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSitePageiAnnouncements.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {

                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;


                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }
                        oSystem.CloseDataConnection();

                        return RedirectToAction("WebSitePageiAnnouncements_List", new { _iParentID = iParentID, _sParentID = sParentID });


                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return RedirectToAction("WebSitePageiAnnouncements_List", new { _iParentID = iParentID, _sParentID = sParentID });

                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSitePageProperties
        public ActionResult WebSitePageProperties_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSitePageProperties_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageProperties_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSitePageProperties dbInteraction = new DINT_WebSitePageProperties(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSitePageProperties.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }

                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        DataParameter pParameter = new DataParameter("sFieldName", "'" + Search + "'", "string", 10, "sFieldName", " = ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSitePageProperties.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSitePageProperties_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSitePageProperties_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageProperties_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSitePageProperties dbInteraction = new DINT_WebSitePageProperties(oSystem.cnCon);
                        List<DEF_WebSitePageProperties.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSitePageProperties.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 1, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSitePageProperties dbInteraction = new DINT_WebSitePageProperties(oSystem.cnCon);
                        List<DEF_WebSitePageProperties.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSitePageProperties.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSitePageProperties_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSitePageProperties_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageProperties_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_WebSitePageProperties.RecordObject recRecord = new DEF_WebSitePageProperties.RecordObject();
                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;
                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public ActionResult WebSitePageProperties_AddUpdate(DEF_WebSitePageProperties.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSitePageProperties_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageProperties_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSitePageProperties dbInteraction = new DINT_WebSitePageProperties(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);

                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("WebSitePageProperties_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSitePageProperties dbInteraction = new DINT_WebSitePageProperties(oSystem.cnCon);

                                    _rec.dtLastUpdated = DateTime.Now;
                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("WebSitePageProperties_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);

                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSitePageProperties_Delete(int id)
        {
            Set_Client_NavSettings("WebSitePageProperties_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSitePageProperties dbInteraction = new DINT_WebSitePageProperties(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSitePageProperties.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSitePageProperties.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("WebSitePageProperties_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("WebSitePageProperties_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSitePageRoles
        public ActionResult WebSitePageRoles_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSitePageRoles_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageRoles_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSitePageRoles dbInteraction = new DINT_WebSitePageRoles(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSitePageRoles.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }

                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        DataParameter pParameter = new DataParameter("sRoleID", "'" + Search + "'", "string", 11, "sRoleID", " = ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSitePageRoles.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);


                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSitePageRoles_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSitePageRoles_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageRoles_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSitePageRoles dbInteraction = new DINT_WebSitePageRoles(oSystem.cnCon);
                        List<DEF_WebSitePageRoles.RecordObject> dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                ACMSDBView.WebSitePageRolesViewModel recRecord = new WebSitePageRolesViewModel();
                                recRecord.GetView(oSystem.cnCon, dbSearch[0].ID);
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.WebSitePageRoles.iParentID;
                                ViewBag.sParentID = recRecord.WebSitePageRoles.sParentID;

                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 1, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSitePageRoles dbInteraction = new DINT_WebSitePageRoles(oSystem.cnCon);
                        List<DEF_WebSitePageRoles.RecordObject> dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                ACMSDBView.WebSitePageRolesViewModel recRecord = new WebSitePageRolesViewModel();
                                recRecord.GetView(oSystem.cnCon, dbSearch[0].ID);
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.WebSitePageRoles.iParentID;
                                ViewBag.sParentID = recRecord.WebSitePageRoles.sParentID;

                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSitePageRoles_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSitePageRoles_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageRoles_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    ACMSDBView.WebSitePageRolesViewModel recRecord = new ACMSDBView.WebSitePageRolesViewModel();
                    recRecord.WebSitePageRoles = new DEF_WebSitePageRoles.RecordObject();
                    recRecord.WebSitePageRoles.iParentID = _iParentID;
                    recRecord.WebSitePageRoles.sParentID = _sParentID;

                    recRecord.Get_RolesList(oSystem.cnCon);
                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public ActionResult WebSitePageRoles_AddUpdate(ACMSDBView.WebSitePageRolesViewModel _rec)
        {
            Set_Client_NavSettings("WebSitePageRoles_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageRoles_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.WebSitePageRoles.ID == null) || (_rec.WebSitePageRoles.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.WebSitePageRoles.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.WebSitePageRoles.iParentID;
                            ViewBag.sParentID = _rec.WebSitePageRoles.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSitePageRoles dbInteraction = new DINT_WebSitePageRoles(oSystem.cnCon);

                                _rec.WebSitePageRoles.sControl = Guid.NewGuid().ToString();
                                _rec.WebSitePageRoles.dtDateCreated = DateTime.Now;
                                _rec.WebSitePageRoles.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec.WebSitePageRoles);

                                _rec.Get_RolesList(oSystem.cnCon);

                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("WebSitePageRoles_Details", new { key = _rec.WebSitePageRoles.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.WebSitePageRoles.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSitePageRoles dbInteraction = new DINT_WebSitePageRoles(oSystem.cnCon);

                                    _rec.WebSitePageRoles.dtLastUpdated = DateTime.Now;
                                    dbInteraction.Update_SQL(_rec.WebSitePageRoles);

                                    _rec.Get_RolesList(oSystem.cnCon);


                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("WebSitePageRoles_Details", new { id = _rec.WebSitePageRoles.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);

                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSitePageRoles_Delete(int id)
        {
            Set_Client_NavSettings("WebSitePageRoles_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSitePageRoles dbInteraction = new DINT_WebSitePageRoles(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSitePageRoles.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSitePageRoles.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("WebSitePageRoles_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("WebSitePageRoles_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSitePageTemplates
        public ActionResult WebSitePageTemplates_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSitePageTemplates_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;

                    string sLocalDefaultView = sModuleBase + sWebSitePageTemplates_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();

                    DINT_WebSitePageTemplates dbInteraction = new DINT_WebSitePageTemplates(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSitePageTemplates.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();

                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }

                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sName", "'%" + Search + "%'", "string", 10, "sName", " LIKE ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSitePageTemplates.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSitePageTemplates_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSitePageTemplates_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageTemplates_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSitePageTemplates dbInteraction = new DINT_WebSitePageTemplates(oSystem.cnCon);
                        List<DEF_WebSitePageTemplates.RecordObject> dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                ACMSDBView.WebSitePageTemplatesViewModel recRecord = new WebSitePageTemplatesViewModel();
                                recRecord.GetView(oSystem.cnCon, dbSearch[0].ID);
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.WebSitePageTemplates.iParentID;
                                ViewBag.sParentID = recRecord.WebSitePageTemplates.sParentID;

                                recRecord.Get_Languages(oSystem.cnCon);

                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 1, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSitePageTemplates dbInteraction = new DINT_WebSitePageTemplates(oSystem.cnCon);
                        List<DEF_WebSitePageTemplates.RecordObject> dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                ACMSDBView.WebSitePageTemplatesViewModel recRecord = new WebSitePageTemplatesViewModel();
                                recRecord.GetView(oSystem.cnCon, dbSearch[0].ID);
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.WebSitePageTemplates.iParentID;
                                ViewBag.sParentID = recRecord.WebSitePageTemplates.sParentID;

                                recRecord.Get_Languages(oSystem.cnCon);

                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSitePageTemplates_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSitePageTemplates_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageTemplates_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    ACMSDBView.WebSitePageTemplatesViewModel recRecord = new ACMSDBView.WebSitePageTemplatesViewModel();
                    recRecord.WebSitePageTemplates = new DEF_WebSitePageTemplates.RecordObject();
                    recRecord.WebSitePageTemplates.iParentID = _iParentID;
                    recRecord.WebSitePageTemplates.sParentID = _sParentID;

                    recRecord.WebSitePageTemplates.iLanguageID = 205;
                    recRecord.WebSitePageTemplates.sLanguageID = "United States English";



                    recRecord.Get_Languages(oSystem.cnCon);
                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        [ValidateInput(false)]
        public ActionResult WebSitePageTemplates_AddUpdate(ACMSDBView.WebSitePageTemplatesViewModel _rec)
        {
            Set_Client_NavSettings("WebSitePageTemplates_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageTemplates_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.WebSitePageTemplates.ID == null) || (_rec.WebSitePageTemplates.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.WebSitePageTemplates.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.WebSitePageTemplates.iParentID;
                            ViewBag.sParentID = _rec.WebSitePageTemplates.sParentID;

                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSitePageTemplates dbInteraction = new DINT_WebSitePageTemplates(oSystem.cnCon);

                                _rec.WebSitePageTemplates.sControl = Guid.NewGuid().ToString();
                                _rec.WebSitePageTemplates.dtDateCreated = DateTime.Now;
                                _rec.WebSitePageTemplates.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec.WebSitePageTemplates);

                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("WebSitePageTemplates_Details", new { key = _rec.WebSitePageTemplates.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.WebSitePageTemplates.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSitePageTemplates dbInteraction = new DINT_WebSitePageTemplates(oSystem.cnCon);

                                    _rec.WebSitePageTemplates.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec.WebSitePageTemplates);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("WebSitePageTemplates_Details", new { id = _rec.WebSitePageTemplates.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);

                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSitePageTemplates_Delete(int id)
        {
            Set_Client_NavSettings("WebSitePageTemplates_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSitePageTemplates dbInteraction = new DINT_WebSitePageTemplates(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSitePageTemplates.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSitePageTemplates.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("WebSitePageTemplates_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("WebSitePageTemplates_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public JsonResult GetTemplats()
        {
            try
            {
                if (oSystem.OpenDataConnection())
                {
                    DINT_WebSitePageTemplates dbInteraction = new DINT_WebSitePageTemplates(oSystem.cnCon);

                    List<DEF_WebSitePageTemplates.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();

                    //DataParameter pParameter = new DataParameter("iParentID", "'" + _iTemplateID + "'", "int", 1, "iParentID", " = ", "");
                    //lstParameters.Add(pParameter);

                    dbSearch = dbInteraction.Get(lstParameters);
                    List<SelectListItem> SiteTemplates = new List<SelectListItem>();

                    if (dbSearch != null)
                    {
                        foreach (DEF_WebSitePageTemplates.RecordObject oV in dbSearch)
                        {
                            SiteTemplates.Add(new SelectListItem { Selected = false, Text = oV.sName, Value = oV.ID.ToString() });
                        }


                    }


                    var oResponse = Json(SiteTemplates);
                    return oResponse;
                }


                var oResponseError = Json(new { RESPONSE = "ERROR" });
                return oResponseError;
            }
            catch
            {
                var oResponseError1 = Json(new { RESPONSE = "ERROR" });
                return oResponseError1;
            }
        }
        #endregion

        #region Form WebSitePageTemplatesPage
        string sWebSitePageTemplatesPage_Details = "/views/Forms/WebSitePageTemplatesPage_Details.cshtml";
        string sWebSitePageTemplatesPage_List = "/views/Forms/WebSitePageTemplatesPage_List.cshtml";

        public ActionResult WebSitePageTemplatesPage_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {

            Set_Client_NavSettings("WebSitePageTemplatesPage_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageTemplatesPage_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSitePageTemplatesPage dbInteraction = new DINT_WebSitePageTemplatesPage(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSitePageTemplatesPage.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    DataParameter pParameter = null;
                    if (_iParentID > 0)
                    {
                        pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }


                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        lstParameters = new List<DataParameter>();
                        if (_iParentID > 0)
                        {
                            pParameter = new DataParameter("sName", "'%" + Search + "%'", "string", 11, "sName", " LIKE ", " AND ");
                            lstParameters.Add(pParameter);
                            iTotalRows = dbInteraction.GetRowCount(lstParameters);
                        }
                        else
                        {
                            pParameter = new DataParameter("sName", "'%" + Search + "%'", "string", 11, "sName", " LIKE ", "");
                            lstParameters.Add(pParameter);
                            iTotalRows = dbInteraction.GetRowCount(lstParameters);
                        }
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSitePageTemplatesPage.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSitePageTemplatesPage_Details(int id = 0, string key = "", bool _UseParameterResults = false,
            bool _AddNew = false, bool _Saved = false)
        {

            Set_Client_NavSettings("WebSitePageTemplatesPage_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageTemplatesPage_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSitePageTemplatesPage dbInteraction = new DINT_WebSitePageTemplatesPage(oSystem.cnCon);
                        List<DEF_WebSitePageTemplatesPage.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                //DEF_WebSitePageTemplatesPage.RecordObject recRecord = dbSearch[0];

                                ACMSDBView.WebSitePageTemplatesPageViewModel recRecord = new WebSitePageTemplatesPageViewModel();
                                recRecord.WebSitePageTemplatesPage = dbSearch[0];

                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.WebSitePageTemplatesPage.iParentID;
                                ViewBag.sParentID = recRecord.WebSitePageTemplatesPage.sParentID;

                                recRecord.Get_Languages(oSystem.cnCon);
                                recRecord.Get_Templates(oSystem.cnCon);

                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSitePageTemplatesPage dbInteraction = new DINT_WebSitePageTemplatesPage(oSystem.cnCon);
                        List<DEF_WebSitePageTemplatesPage.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                //DEF_WebSitePageTemplatesPage.RecordObject recRecord = dbSearch[0];

                                ACMSDBView.WebSitePageTemplatesPageViewModel recRecord = new WebSitePageTemplatesPageViewModel();
                                recRecord.WebSitePageTemplatesPage = dbSearch[0];

                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.WebSitePageTemplatesPage.iParentID;
                                ViewBag.sParentID = recRecord.WebSitePageTemplatesPage.sParentID;

                                recRecord.Get_Languages(oSystem.cnCon);
                                recRecord.Get_Templates(oSystem.cnCon);

                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSitePageTemplatesPage_Create(int _iParentID = 0, string _sParentID = "")
        {

            Set_Client_NavSettings("WebSitePageTemplatesPage_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageTemplatesPage_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";


                    ACMSDBView.WebSitePageTemplatesPageViewModel recRecord = new WebSitePageTemplatesPageViewModel();
                    //DEF_WebSitePageTemplatesPage.RecordObject recRecord = new DEF_WebSitePageTemplatesPage.RecordObject();

                    recRecord.WebSitePageTemplatesPage.iParentID = _iParentID;
                    recRecord.WebSitePageTemplatesPage.sParentID = _sParentID;

                    recRecord.WebSitePageTemplatesPage.iLanguageID = 205;
                    recRecord.WebSitePageTemplatesPage.sLanguageID = "United States English";



                    recRecord.Get_Languages(oSystem.cnCon);
                    recRecord.Get_Templates(oSystem.cnCon);


                    oSystem.CloseDataConnection();

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        [ValidateInput(false)]
        public ActionResult WebSitePageTemplatesPage_AddUpdate(ACMSDBView.WebSitePageTemplatesPageViewModel _rec)
        {

            Set_Client_NavSettings("WebSitePageTemplatesPage_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageTemplatesPage_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.WebSitePageTemplatesPage.ID == null) || (_rec.WebSitePageTemplatesPage.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.WebSitePageTemplatesPage.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.WebSitePageTemplatesPage.iParentID;
                            ViewBag.sParentID = _rec.WebSitePageTemplatesPage.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSitePageTemplatesPage dbInteraction = new DINT_WebSitePageTemplatesPage(oSystem.cnCon);

                                _rec.WebSitePageTemplatesPage.sControl = Guid.NewGuid().ToString();
                                _rec.WebSitePageTemplatesPage.dtDateCreated = DateTime.Now;
                                _rec.WebSitePageTemplatesPage.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec.WebSitePageTemplatesPage);

                                //List<DataParameter> lstParameters = new List<DataParameter>();
                                //DataParameter pParameter = new DataParameter("sControl", "'" + _rec.WebSitePage.sControl.ToString() + "'", "sControl", 3, "sControl", " = ", "");
                                //lstParameters.Add(pParameter);

                                //List<DEF_WebSitePageTemplatesPage.RecordObject> dbSearch = dbInteraction.Get(lstParameters);
                                //if (dbSearch != null)
                                //{
                                //  if (dbSearch.Count > 0)
                                //  {
                                //      _rec = dbSearch[0];
                                //      ViewBag.iParentID = _rec.iParentID;
                                //      ViewBag.sParentID = _rec.sParentID;
                                //  }
                                //}


                                oSystem.CloseDataConnection();
                                //return RedirectToAction("WebSitePageTemplatesPage_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                #endregion
                                return RedirectToAction("WebSitePageTemplatesPage_Details", new { key = _rec.WebSitePageTemplatesPage.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.WebSitePageTemplatesPage.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSitePageTemplatesPage dbInteraction = new DINT_WebSitePageTemplatesPage(oSystem.cnCon);

                                    //_rec.dtLastUpdated = DateTime.Now;
                                    dbInteraction.Update_SQL(_rec.WebSitePageTemplatesPage);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("WebSitePageTemplatesPage_Details", new { id = _rec.WebSitePageTemplatesPage.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    oSystem.CloseDataConnection();
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    //return RedirectToAction("StatesDetails", new { id = 0, _bOverrideScreenMessage = true });

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);
                                }
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            //return RedirectToAction("StatesDetails", new { id = 0, _bOverrideScreenMessage = true });

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);
                        }
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        //return RedirectToAction("StatesDetails", new { id = 0, _bOverrideScreenMessage = true });

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSitePageTemplatesPage_Delete(int id)
        {

            Set_Client_NavSettings("WebSitePageTemplatesPage_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSitePageTemplatesPage dbInteraction = new DINT_WebSitePageTemplatesPage(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSitePageTemplatesPage.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSitePageTemplatesPage.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        //iParentID = recRecord.iParentID;
                                        //sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }
                        oSystem.CloseDataConnection();
                        return RedirectToAction("WebSitePageTemplatesPage_List", new { _iParentID = iParentID, _sParentID = sParentID });
                        //return RedirectToAction("WebSitePageTemplatesPage_List");
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return RedirectToAction("WebSitePageTemplatesPage_List", new { _iParentID = iParentID, _sParentID = sParentID });
                        //return RedirectToAction("WebSitePageTemplatesPage_List");
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public JsonResult GetTemplatePage(int _ParentID)
        {
            try
            {
                if (_ParentID > 0)
                {
                    if (oSystem.OpenDataConnection())
                    {
                        DINT_WebSitePageTemplatesPage dbInteraction = new DINT_WebSitePageTemplatesPage(oSystem.cnCon);

                        List<DEF_WebSitePageTemplatesPage.RecordObject> dbSearch = null;
                        List<DataParameter> lstParameters = new List<DataParameter>();

                        DataParameter pParameter = new DataParameter("iParentID", "'" + _ParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);

                        dbSearch = dbInteraction.Get(lstParameters);
                        List<SelectListItem> SiteTemplatesPages = new List<SelectListItem>();

                        if (dbSearch != null)
                        {
                            foreach (DEF_WebSitePageTemplatesPage.RecordObject oV in dbSearch)
                            {
                                SiteTemplatesPages.Add(new SelectListItem { Selected = false, Text = oV.sName, Value = oV.ID.ToString() });
                            }


                        }


                        var oResponse = Json(SiteTemplatesPages);
                        return oResponse;
                    }

                }
                var oResponseError = Json(new { RESPONSE = "ERROR" });
                return oResponseError;
            }
            catch
            {
                var oResponseError1 = Json(new { RESPONSE = "ERROR" });
                return oResponseError1;
            }
        }
        #endregion

        #region Form WebSitePageTemplateZones
        public ActionResult WebSitePageTemplateZones_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSitePageTemplateZones_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageTemplateZones_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSitePageTemplateZones dbInteraction = new DINT_WebSitePageTemplateZones(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSitePageTemplateZones.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }

                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        DataParameter pParameter = new DataParameter("sName", "'" + Search + "'", "string", 10, "sName", " = ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSitePageTemplateZones.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSitePageTemplateZones_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSitePageTemplateZones_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageTemplateZones_DetailsWYSIWYG;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSitePageTemplateZones dbInteraction = new DINT_WebSitePageTemplateZones(oSystem.cnCon);
                        List<DEF_WebSitePageTemplateZones.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                //DEF_WebSitePageTemplateZones.RecordObject recRecord = dbSearch[0];
                                ACMSDBView.WebSitePageTemplateZonesViewModel recRecord = new WebSitePageTemplateZonesViewModel();
                                recRecord.WebSitePageTemplateZones = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }

                                ViewBag.iParentID = recRecord.WebSitePageTemplateZones.iParentID;
                                ViewBag.sParentID = recRecord.WebSitePageTemplateZones.sParentID;

                                recRecord.Get_Languages(oSystem.cnCon);

                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 1, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSitePageTemplateZones dbInteraction = new DINT_WebSitePageTemplateZones(oSystem.cnCon);
                        List<DEF_WebSitePageTemplateZones.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                //DEF_WebSitePageTemplateZones.RecordObject recRecord = dbSearch[0];
                                ACMSDBView.WebSitePageTemplateZonesViewModel recRecord = new WebSitePageTemplateZonesViewModel();
                                recRecord.WebSitePageTemplateZones = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }

                                ViewBag.iParentID = recRecord.WebSitePageTemplateZones.iParentID;
                                ViewBag.sParentID = recRecord.WebSitePageTemplateZones.sParentID;

                                recRecord.Get_Languages(oSystem.cnCon);

                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSitePageTemplateZones_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSitePageTemplateZones_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageTemplateZones_DetailsWYSIWYG;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    //DEF_WebSitePageTemplateZones.RecordObject recRecord = new DEF_WebSitePageTemplateZones.RecordObject();
                    ACMSDBView.WebSitePageTemplateZonesViewModel recRecord = new WebSitePageTemplateZonesViewModel();
                    recRecord.Get_Languages(oSystem.cnCon);

                    recRecord.WebSitePageTemplateZones.iParentID = _iParentID;
                    recRecord.WebSitePageTemplateZones.sParentID = _sParentID;

                    recRecord.WebSitePageTemplateZones.iLanguageID = 205;
                    recRecord.WebSitePageTemplateZones.sLanguageID = "United States English";




                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);


                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public JsonResult GetTemplatZones(int _iTemplateID)
        {
            try
            {
                if (oSystem.OpenDataConnection())
                {
                    if (_iTemplateID > 0)
                    {

                        DINT_WebSitePageTemplateZones dbInteraction = new DINT_WebSitePageTemplateZones(oSystem.cnCon);

                        List<DEF_WebSitePageTemplateZones.RecordObject> dbSearch = null;
                        List<DataParameter> lstParameters = new List<DataParameter>();

                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iTemplateID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);

                        dbSearch = dbInteraction.Get(lstParameters);
                        List<SelectListItem> SiteTemplates = new List<SelectListItem>();

                        if (dbSearch != null)
                        {
                            foreach (DEF_WebSitePageTemplateZones.RecordObject oV in dbSearch)
                            {
                                SiteTemplates.Add(new SelectListItem { Selected = false, Text = oV.sName, Value = oV.ID.ToString() });
                            }


                        }


                        var oResponse = Json(SiteTemplates);
                        return oResponse;
                    }
                }


                var oResponseError = Json(new { RESPONSE = "ERROR" });
                return oResponseError;
            }
            catch
            {
                var oResponseError1 = Json(new { RESPONSE = "ERROR" });
                return oResponseError1;
            }
        }
        [HttpPost]
        [ValidateInput(false)]
        public ActionResult WebSitePageTemplateZones_AddUpdate(ACMSDBView.WebSitePageTemplateZonesViewModel _rec)
        {
            Set_Client_NavSettings("WebSitePageTemplateZones_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageTemplateZones_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.WebSitePageTemplateZones.ID == null) || (_rec.WebSitePageTemplateZones.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.WebSitePageTemplateZones.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.WebSitePageTemplateZones.iParentID;
                            ViewBag.sParentID = _rec.WebSitePageTemplateZones.sParentID;

                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSitePageTemplateZones dbInteraction = new DINT_WebSitePageTemplateZones(oSystem.cnCon);

                                _rec.WebSitePageTemplateZones.sControl = Guid.NewGuid().ToString();
                                _rec.WebSitePageTemplateZones.dtDateCreated = DateTime.Now;
                                _rec.WebSitePageTemplateZones.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec.WebSitePageTemplateZones);



                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("WebSitePageTemplateZones_Details", new { key = _rec.WebSitePageTemplateZones.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.WebSitePageTemplateZones.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSitePageTemplateZones dbInteraction = new DINT_WebSitePageTemplateZones(oSystem.cnCon);

                                    _rec.WebSitePageTemplateZones.dtLastUpdated = DateTime.Now;
                                    dbInteraction.Update_SQL(_rec.WebSitePageTemplateZones);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("WebSitePageTemplateZones_Details", new { id = _rec.WebSitePageTemplateZones.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);

                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSitePageTemplateZones_Delete(int id)
        {
            Set_Client_NavSettings("WebSitePageTemplateZones_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSitePageTemplateZones dbInteraction = new DINT_WebSitePageTemplateZones(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSitePageTemplateZones.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSitePageTemplateZones.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("WebSitePageTemplateZones_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("WebSitePageTemplateZones_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSitePageZoneContent
        public ActionResult WebSitePageZoneContent_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSitePageZoneContent_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageZoneContent_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSitePageZoneContent dbInteraction = new DINT_WebSitePageZoneContent(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSitePageZoneContent.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }

                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        DataParameter pParameter = new DataParameter("sZoneID", "'" + Search + "'", "string", 11, "sZoneID", " = ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSitePageZoneContent.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSitePageZoneContent_Details(int id = 0, string _ViewType = "N", string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSitePageZoneContent_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageZoneContent_Details;
                    if (_ViewType != "N")
                    {
                        sLocalDefaultView = sModuleBase + sWebSitePageTemplateZones_DetailsWYSIWYG;
                    }

                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSitePageZoneContent dbInteraction = new DINT_WebSitePageZoneContent(oSystem.cnCon);
                        List<DEF_WebSitePageZoneContent.RecordObject> dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                int iTemplateID = 0;
                                lstParameters = new List<DataParameter>();
                                pParameter = new DataParameter("ID", dbSearch[0].iParentID.ToString(), "int", 0, "ID", " = ", "");
                                lstParameters.Add(pParameter);

                                DINT_WebSitePage dbWebSitePage = new DINT_WebSitePage(oSystem.cnCon);
                                List<DEF_WebSitePage.RecordObject> lsrWebSitePage = dbWebSitePage.Get(lstParameters);
                                if (lsrWebSitePage != null)
                                {
                                    if (lsrWebSitePage.Count > 0)
                                    {
                                        iTemplateID = lsrWebSitePage[0].iSiteTemplatePageID;
                                    }
                                }
                                ACMSDBView.WebSitePageZoneContentViewModel recRecord = new WebSitePageZoneContentViewModel();
                                recRecord.GetView(oSystem.cnCon, dbSearch[0].ID, iTemplateID);
                                recRecord.Get_WebSitePageTemplateZonesContent(oSystem.cnCon, recRecord.WebSitePageZoneContent.iZoneID);

                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.WebSitePageZoneContent.iParentID;
                                ViewBag.sParentID = recRecord.WebSitePageZoneContent.sParentID;


                                recRecord.Get_Languages(oSystem.cnCon);
                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 1, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSitePageZoneContent dbInteraction = new DINT_WebSitePageZoneContent(oSystem.cnCon);
                        List<DEF_WebSitePageZoneContent.RecordObject> dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                int iTemplateID = 0;
                                lstParameters = new List<DataParameter>();
                                pParameter = new DataParameter("ID", dbSearch[0].iParentID.ToString(), "int", 0, "ID", " = ", "");
                                lstParameters.Add(pParameter);

                                DINT_WebSitePage dbWebSitePage = new DINT_WebSitePage(oSystem.cnCon);
                                List<DEF_WebSitePage.RecordObject> lsrWebSitePage = dbWebSitePage.Get(lstParameters);
                                if (lsrWebSitePage != null)
                                {
                                    if (lsrWebSitePage.Count > 0)
                                    {
                                        iTemplateID = lsrWebSitePage[0].iSiteTemplatePageID;
                                    }
                                }
                                ACMSDBView.WebSitePageZoneContentViewModel recRecord = new WebSitePageZoneContentViewModel();
                                recRecord.GetView(oSystem.cnCon, dbSearch[0].ID, iTemplateID);
                                recRecord.Get_WebSitePageTemplateZonesContent(oSystem.cnCon, recRecord.WebSitePageZoneContent.iZoneID);

                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.WebSitePageZoneContent.iParentID;
                                ViewBag.sParentID = recRecord.WebSitePageZoneContent.sParentID;
                                recRecord.Get_Languages(oSystem.cnCon);
                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSitePageZoneContent_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSitePageZoneContent_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageZoneContent_Details;

                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";

                    ACMSDBView.WebSitePageZoneContentViewModel recRecord = new ACMSDBView.WebSitePageZoneContentViewModel();
                    recRecord.WebSitePageZoneContent = new DEF_WebSitePageZoneContent.RecordObject();
                    if (_iParentID > 0)
                    {
                        int iTemplateID = 0;
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", _iParentID.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSitePage dbWebSitePage = new DINT_WebSitePage(oSystem.cnCon);
                        List<DEF_WebSitePage.RecordObject> lsrWebSitePage = dbWebSitePage.Get(lstParameters);
                        if (lsrWebSitePage != null)
                        {
                            if (lsrWebSitePage.Count > 0)
                            {
                                iTemplateID = lsrWebSitePage[0].iSiteTemplatePageID;
                                recRecord.Get_WebSitePageTemplateZonesList(oSystem.cnCon, iTemplateID);
                                //recRecord.Get_WebSitePageTemplateZonesContent(oSystem.cnCon, 0);
                            }
                            else
                            {
                                iTemplateID = 1;
                                recRecord.Get_WebSitePageTemplateZonesList(oSystem.cnCon, iTemplateID);
                                //recRecord.Get_WebSitePageTemplateZonesContent(oSystem.cnCon, 0);

                            }
                        }
                        else
                        {
                            iTemplateID = 1;
                            recRecord.Get_WebSitePageTemplateZonesList(oSystem.cnCon, iTemplateID);
                            //recRecord.Get_WebSitePageTemplateZonesContent(oSystem.cnCon, 0);
                        }

                        recRecord.Get_Languages(oSystem.cnCon);
                        recRecord.WebSitePageZoneContent.iParentID = _iParentID;
                        recRecord.WebSitePageZoneContent.sParentID = _sParentID;

                        recRecord.WebSitePageZoneContent.iLanguageID = 205;
                        recRecord.WebSitePageZoneContent.sLanguageID = "United States English";


                        oPage.DataModelsPrimary = recRecord;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    else
                    {
                        return RedirectToAction("Index");
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }

            }
            else
            {
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        [ValidateInput(false)]
        public ActionResult WebSitePageZoneContent_AddUpdate(ACMSDBView.WebSitePageZoneContentViewModel _rec, string _sViewType = "N")
        {
            Set_Client_NavSettings("WebSitePageZoneContent_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageZoneContent_Details;
                    if (_sViewType != "N")
                    {
                        sLocalDefaultView = sModuleBase + sWebSitePageTemplateZones_DetailsWYSIWYG;
                    }

                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (_rec != null)
                    {
                        if ((_rec.WebSitePageZoneContent.ID == null) || (_rec.WebSitePageZoneContent.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.WebSitePageZoneContent.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.WebSitePageZoneContent.iParentID;
                            ViewBag.sParentID = _rec.WebSitePageZoneContent.sParentID;

                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                int iTemplateID = 0;
                                List<DataParameter> lstParameters = new List<DataParameter>();
                                DataParameter pParameter = new DataParameter("ID", _rec.WebSitePageZoneContent.iParentID.ToString(), "int", 0, "ID", " = ", "");
                                lstParameters.Add(pParameter);

                                DINT_WebSitePage dbWebSitePage = new DINT_WebSitePage(oSystem.cnCon);
                                List<DEF_WebSitePage.RecordObject> lsrWebSitePage = dbWebSitePage.Get(lstParameters);
                                if (lsrWebSitePage != null)
                                {
                                    if (lsrWebSitePage.Count > 0)
                                    {
                                        iTemplateID = lsrWebSitePage[0].iSiteTemplateID;
                                        _rec.Get_WebSitePageTemplateZonesList(oSystem.cnCon, iTemplateID);
                                    }
                                }


                                DINT_WebSitePageZoneContent dbInteraction = new DINT_WebSitePageZoneContent(oSystem.cnCon);

                                _rec.WebSitePageZoneContent.sControl = Guid.NewGuid().ToString();
                                _rec.WebSitePageZoneContent.dtDateCreated = DateTime.Now;
                                _rec.WebSitePageZoneContent.dtLastUpdated = DateTime.Now;

                                if (_rec.WebSitePageZoneContent.iZoneID > 0)
                                {
                                    _rec.WebSitePageZoneContent.sZoneID = _rec.GetZoneName(_rec.WebSitePageZoneContent.iZoneID);
                                    _rec.Get_WebSitePageTemplateZonesContent(oSystem.cnCon, _rec.WebSitePageZoneContent.iZoneID);
                                    if (_rec.WebSitePageZoneContent.iContentZoneID > 0)
                                    {
                                        foreach (SelectListItem oV in _rec.WebSitePageTemplateZonesContent)
                                        {
                                            if (oV.Value == _rec.WebSitePageZoneContent.iContentZoneID.ToString())
                                            {
                                                _rec.WebSitePageZoneContent.sContentZoneID = oV.Text;
                                            }
                                        }
                                    }
                                }


                                dbInteraction.Insert_SQL(_rec.WebSitePageZoneContent);


                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("WebSitePageZoneContent_Details", new { key = _rec.WebSitePageZoneContent.sControl, _ViewType = _sViewType, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.WebSitePageZoneContent.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    int iTemplateID = 0;
                                    List<DataParameter> lstParameters = new List<DataParameter>();
                                    DataParameter pParameter = new DataParameter("ID", _rec.WebSitePageZoneContent.iParentID.ToString(), "int", 0, "ID", " = ", "");
                                    lstParameters.Add(pParameter);

                                    DINT_WebSitePage dbWebSitePage = new DINT_WebSitePage(oSystem.cnCon);
                                    List<DEF_WebSitePage.RecordObject> lsrWebSitePage = dbWebSitePage.Get(lstParameters);
                                    if (lsrWebSitePage != null)
                                    {
                                        if (lsrWebSitePage.Count > 0)
                                        {
                                            iTemplateID = lsrWebSitePage[0].iSiteTemplateID;
                                            _rec.Get_WebSitePageTemplateZonesList(oSystem.cnCon, iTemplateID);
                                        }
                                    }

                                    DINT_WebSitePageZoneContent dbInteraction = new DINT_WebSitePageZoneContent(oSystem.cnCon);

                                    _rec.WebSitePageZoneContent.dtLastUpdated = DateTime.Now;

                                    if (_rec.WebSitePageZoneContent.iZoneID > 0)
                                    {
                                        _rec.WebSitePageZoneContent.sZoneID = _rec.GetZoneName(_rec.WebSitePageZoneContent.iZoneID);
                                        _rec.Get_WebSitePageTemplateZonesContent(oSystem.cnCon, _rec.WebSitePageZoneContent.iZoneID);
                                        if (_rec.WebSitePageZoneContent.iContentZoneID > 0)
                                        {
                                            foreach (SelectListItem oV in _rec.WebSitePageTemplateZonesContent)
                                            {
                                                if (oV.Value == _rec.WebSitePageZoneContent.iContentZoneID.ToString())
                                                {
                                                    _rec.WebSitePageZoneContent.sContentZoneID = oV.Text;
                                                }
                                            }
                                        }
                                    }



                                    dbInteraction.Update_SQL(_rec.WebSitePageZoneContent);



                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("WebSitePageZoneContent_Details", new { id = _rec.WebSitePageZoneContent.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);

                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSitePageZoneContent_Delete(int id)
        {
            Set_Client_NavSettings("WebSitePageZoneContent_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSitePageZoneContent dbInteraction = new DINT_WebSitePageZoneContent(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSitePageZoneContent.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSitePageZoneContent.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("WebSitePageZoneContent_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("WebSitePageZoneContent_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteProperties
        public ActionResult WebSiteProperties_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSiteProperties_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteProperties_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteProperties dbInteraction = new DINT_WebSiteProperties(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteProperties.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }

                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sFieldName", "'" + Search + "'", "string", 10, "sFieldName", " = ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteProperties.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);


                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteProperties_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteProperties_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteProperties_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteProperties dbInteraction = new DINT_WebSiteProperties(oSystem.cnCon);
                        List<DEF_WebSiteProperties.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteProperties.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;

                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 1, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteProperties dbInteraction = new DINT_WebSiteProperties(oSystem.cnCon);
                        List<DEF_WebSiteProperties.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteProperties.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;

                                oSystem.CloseDataConnection();
                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteProperties_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSiteProperties_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteProperties_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_WebSiteProperties.RecordObject recRecord = new DEF_WebSiteProperties.RecordObject();
                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public ActionResult WebSiteProperties_AddUpdate(DEF_WebSiteProperties.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSiteProperties_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteProperties_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;

                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSiteProperties dbInteraction = new DINT_WebSiteProperties(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);

                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("WebSiteProperties_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSiteProperties dbInteraction = new DINT_WebSiteProperties(oSystem.cnCon);

                                    _rec.dtLastUpdated = DateTime.Now;
                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("WebSiteProperties_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);
                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteProperties_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteProperties_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteProperties dbInteraction = new DINT_WebSiteProperties(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteProperties.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteProperties.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("WebSiteProperties_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("WebSiteProperties_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteScreenRoles
        public ActionResult WebSiteScreenRoles_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSiteScreenRoles_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteScreenRoles_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteScreenRoles dbInteraction = new DINT_WebSiteScreenRoles(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteScreenRoles.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }


                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sRoleID", "'%" + Search + "%'", "string", 11, "sRoleID", " LIKE ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteScreenRoles.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteScreenRoles_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteScreenRoles_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteScreenRoles_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        ACMSDBView.WebSiteScreenRolesViewModel recRecord = new WebSiteScreenRolesViewModel();

                        if (recRecord.GetView(oSystem.cnCon, id))
                        {
                            ViewBag.iParentID = recRecord.WebSiteScreenRoles.iParentID;
                            ViewBag.sParentID = recRecord.WebSiteScreenRoles.sParentID;
                            oSystem.CloseDataConnection();

                            oPage.DataModelsPrimary = recRecord;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }

                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "int", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteScreenRoles dbInteraction = new DINT_WebSiteScreenRoles(oSystem.cnCon);
                        List<DEF_WebSiteScreenRoles.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                ACMSDBView.WebSiteScreenRolesViewModel recRecord = new WebSiteScreenRolesViewModel();
                                recRecord.WebSiteScreenRoles = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }

                                recRecord.Get_RolesList(oSystem.cnCon);

                                ViewBag.iParentID = recRecord.WebSiteScreenRoles.iParentID;
                                ViewBag.sParentID = recRecord.WebSiteScreenRoles.sParentID;
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteScreenRoles_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSiteScreenRoles_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteScreenRoles_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";

                    ACMSDBView.WebSiteScreenRolesViewModel recRecord = new WebSiteScreenRolesViewModel();

                    recRecord.WebSiteScreenRoles.iParentID = _iParentID;
                    recRecord.WebSiteScreenRoles.sParentID = _sParentID;

                    recRecord.Get_RolesList(oSystem.cnCon);

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public ActionResult WebSiteScreenRoles_AddUpdate(ACMSDBView.WebSiteScreenRolesViewModel _rec)
        {
            Set_Client_NavSettings("WebSiteScreenRoles_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteScreenRoles_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if (_rec.WebSiteScreenRoles != null)
                        {
                            if ((_rec.WebSiteScreenRoles.ID == null) || (_rec.WebSiteScreenRoles.ID == 0))
                            {
                                ViewBag.bAddNew = true;
                                _rec.WebSiteScreenRoles.ID = -1;
                                ModelState.Remove("ID");
                            }

                            if (ModelState.IsValid)
                            {
                                ViewBag.iParentID = _rec.WebSiteScreenRoles.iParentID;
                                ViewBag.sParentID = _rec.WebSiteScreenRoles.sParentID;
                                if (ViewBag.bAddNew == true)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();

                                    DINT_WebSiteScreenRoles dbInteraction = new DINT_WebSiteScreenRoles(oSystem.cnCon);

                                    _rec.WebSiteScreenRoles.sControl = Guid.NewGuid().ToString();
                                    _rec.WebSiteScreenRoles.dtDateCreated = DateTime.Now;
                                    _rec.WebSiteScreenRoles.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Insert_SQL(_rec.WebSiteScreenRoles);

                                    _rec.Get_RolesList(oSystem.cnCon);


                                    oSystem.CloseDataConnection();
                                    //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                    #endregion
                                    return RedirectToAction("WebSiteScreenRoles_Details", new { key = _rec.WebSiteScreenRoles.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_sViewToLoad, _rec);
                                    //return View(_rec);
                                }
                                else
                                {
                                    if (_rec.WebSiteScreenRoles.ID > 0)
                                    {
                                        #region
                                        ViewBag.bError = false;
                                        ViewBag.bAddNew = false;
                                        ViewBag.bSaved = true;
                                        ViewBag.sErrorMessage = "";
                                        oSystem.OpenDataConnection();


                                        DINT_WebSiteScreenRoles dbInteraction = new DINT_WebSiteScreenRoles(oSystem.cnCon);

                                        _rec.WebSiteScreenRoles.dtLastUpdated = DateTime.Now;
                                        dbInteraction.Update_SQL(_rec.WebSiteScreenRoles);

                                        oSystem.CloseDataConnection();
                                        #endregion
                                        //return View(_sViewToLoad, _rec);
                                        return RedirectToAction("WebSiteScreenRoles_Details", new { id = _rec.WebSiteScreenRoles.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                        //return View(_rec);
                                    }
                                    else
                                    {
                                        ViewBag.bError = true;
                                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";


                                        oPage.DataModelsPrimary = _rec;
                                        oPage.DataModelsSub.Add(oSystem);
                                        oPage.AuthenticatedUser = true;
                                        oPage.PartialViewToLoad = _sViewToLoad;
                                        return View(sModuleBase + sBasePage, oPage);
                                    }
                                }
                            }
                            else
                            {
                                ViewBag.bError = true;
                                ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                oPage.DataModelsPrimary = _rec;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteScreenRoles_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteScreenRoles_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteScreenRoles dbInteraction = new DINT_WebSiteScreenRoles(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteScreenRoles.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteScreenRoles.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("WebSiteScreenRoles_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("WebSiteScreenRoles_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteScreen
        public ActionResult WebSiteScreen_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSiteScreen_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteScreen_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteScreen dbInteraction = new DINT_WebSiteScreen(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteScreen.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }


                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sScreenName", "'%" + Search + "%'", "string", 10, "sScreenName", " LIKE ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteScreen.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteScreen_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteScreen_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteScreen_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        WebSiteScreenViewModel recRecord = new WebSiteScreenViewModel();
                        if (recRecord.GetView(oSystem.cnCon, id))
                        {
                            ViewBag.iParentID = recRecord.WebSiteScreen.iParentID;
                            ViewBag.sParentID = recRecord.WebSiteScreen.sParentID;
                            oSystem.CloseDataConnection();

                            oPage.DataModelsPrimary = recRecord;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteScreen dbInteraction = new DINT_WebSiteScreen(oSystem.cnCon);
                        List<DEF_WebSiteScreen.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                WebSiteScreenViewModel recRecord = new WebSiteScreenViewModel();
                                recRecord.WebSiteScreen = dbSearch[0];
                                if (recRecord.WebSiteScreen == null)
                                {
                                    return HttpNotFound();
                                }
                                recRecord.Get_WebSitePageTemplates(oSystem.cnCon);
                                if (recRecord.WebSiteScreen.iSiteTemplateID > 0)
                                {
                                    recRecord.Get_WebSitePageTemplateZones(oSystem.cnCon, recRecord.WebSiteScreen.iSiteTemplateID);
                                }
                                ViewBag.iParentID = recRecord.WebSiteScreen.iParentID;
                                ViewBag.sParentID = recRecord.WebSiteScreen.sParentID;
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteScreen_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSiteScreen_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteScreen_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    WebSiteScreenViewModel recRecord = new WebSiteScreenViewModel();

                    recRecord.WebSiteScreen.iParentID = _iParentID;
                    recRecord.WebSiteScreen.sParentID = _sParentID;

                    recRecord.Get_WebSitePageTemplates(oSystem.cnCon);

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public ActionResult WebSiteScreen_AddUpdate(ACMSDBView.WebSiteScreenViewModel _rec)
        {
            Set_Client_NavSettings("WebSiteScreen_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();


            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteScreen_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if (_rec.WebSiteScreen != null)
                        {
                            if ((_rec.WebSiteScreen.ID == null) || (_rec.WebSiteScreen.ID == 0))
                            {
                                ViewBag.bAddNew = true;
                                _rec.WebSiteScreen.ID = -1;
                                ModelState.Remove("ID");
                            }

                            if (ModelState.IsValid)
                            {
                                ViewBag.iParentID = _rec.WebSiteScreen.iParentID;
                                ViewBag.sParentID = _rec.WebSiteScreen.sParentID;
                                if (ViewBag.bAddNew == true)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();

                                    DINT_WebSiteScreen dbInteraction = new DINT_WebSiteScreen(oSystem.cnCon);

                                    _rec.WebSiteScreen.sControl = Guid.NewGuid().ToString();
                                    _rec.WebSiteScreen.dtDateCreated = DateTime.Now;
                                    _rec.WebSiteScreen.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Insert_SQL(_rec.WebSiteScreen);


                                    _rec.Get_WebSitePageTemplates(oSystem.cnCon);
                                    if (_rec.WebSiteScreen.iSiteTemplateID > 0)
                                    {
                                        _rec.Get_WebSitePageTemplateZones(oSystem.cnCon, _rec.WebSiteScreen.iSiteTemplateID);
                                    }

                                    oSystem.CloseDataConnection();
                                    //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                    #endregion
                                    return RedirectToAction("WebSiteScreen_Details", new { key = _rec.WebSiteScreen.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_sViewToLoad, _rec);
                                    //return View(_rec);
                                }
                                else
                                {
                                    if (_rec.WebSiteScreen.ID > 0)
                                    {
                                        #region
                                        ViewBag.bError = false;
                                        ViewBag.bAddNew = false;
                                        ViewBag.bSaved = true;
                                        ViewBag.sErrorMessage = "";
                                        oSystem.OpenDataConnection();


                                        DINT_WebSiteScreen dbInteraction = new DINT_WebSiteScreen(oSystem.cnCon);

                                        _rec.WebSiteScreen.dtLastUpdated = DateTime.Now;
                                        dbInteraction.Update_SQL(_rec.WebSiteScreen);


                                        _rec.Get_WebSitePageTemplates(oSystem.cnCon);
                                        if (_rec.WebSiteScreen.iSiteTemplateID > 0)
                                        {
                                            _rec.Get_WebSitePageTemplateZones(oSystem.cnCon, _rec.WebSiteScreen.iSiteTemplateID);
                                        }
                                        oSystem.CloseDataConnection();
                                        #endregion
                                        //return View(_sViewToLoad, _rec);
                                        return RedirectToAction("WebSiteScreen_Details", new { id = _rec.WebSiteScreen.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                        //return View(_rec);
                                    }
                                    else
                                    {
                                        ViewBag.bError = true;
                                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                        oPage.DataModelsPrimary = _rec;
                                        oPage.DataModelsSub.Add(oSystem);
                                        oPage.AuthenticatedUser = true;
                                        oPage.PartialViewToLoad = _sViewToLoad;
                                        return View(sModuleBase + sBasePage, oPage);
                                    }
                                }
                            }
                            else
                            {
                                ViewBag.bError = true;
                                ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                                oPage.DataModelsPrimary = _rec;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        //return RedirectToAction("StatesDetails", new { id = 0, _bOverrideScreenMessage = true });
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteScreen_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteScreen_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteScreen dbInteraction = new DINT_WebSiteScreen(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteScreen.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteScreen.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("WebSiteScreen_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("WebSiteScreen_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteRole
        public ActionResult WebSiteRole_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSiteRole_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteRole_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteRole dbInteraction = new DINT_WebSiteRole(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteRole.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }


                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sRoleID", "'%" + Search + "%'", "string", 11, "sRoleID", " = ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);

                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteRole.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteRole_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteRole_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteRole_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        ACMSDBView.WebSiteRoleViewModel recRecord = new WebSiteRoleViewModel();
                        if (recRecord.GetView(oSystem.cnCon, id))
                        {
                            ViewBag.iParentID = recRecord.WebSiteRole.iParentID;
                            ViewBag.sParentID = recRecord.WebSiteRole.sParentID;
                            oSystem.CloseDataConnection();

                            oPage.DataModelsPrimary = recRecord;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteRole dbInteraction = new DINT_WebSiteRole(oSystem.cnCon);
                        List<DEF_WebSiteRole.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                ACMSDBView.WebSiteRoleViewModel recRecord = new WebSiteRoleViewModel();
                                recRecord.WebSiteRole = dbSearch[0];
                                if (recRecord.WebSiteRole == null)
                                {
                                    return HttpNotFound();
                                }

                                ViewBag.iParentID = recRecord.WebSiteRole.iParentID;
                                ViewBag.sParentID = recRecord.WebSiteRole.sParentID;

                                recRecord.Get_RolesList(oSystem.cnCon);

                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteRole_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSiteRole_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteRole_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    ACMSDBView.WebSiteRoleViewModel recRecord = new WebSiteRoleViewModel();

                    recRecord.Get_RolesList(oSystem.cnCon);

                    recRecord.WebSiteRole.iParentID = _iParentID;
                    recRecord.WebSiteRole.sParentID = _sParentID;


                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public ActionResult WebSiteRole_AddUpdate(ACMSDBView.WebSiteRoleViewModel _rec)
        {
            Set_Client_NavSettings("WebSiteRole_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteRole_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if (_rec.WebSiteRole != null)
                        {
                            if ((_rec.WebSiteRole.ID == null) || (_rec.WebSiteRole.ID == 0))
                            {
                                ViewBag.bAddNew = true;
                                _rec.WebSiteRole.ID = -1;
                                ModelState.Remove("ID");
                            }

                            if (ModelState.IsValid)
                            {
                                ViewBag.iParentID = _rec.WebSiteRole.iParentID;
                                ViewBag.sParentID = _rec.WebSiteRole.sParentID;
                                if (ViewBag.bAddNew == true)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();

                                    DINT_WebSiteRole dbInteraction = new DINT_WebSiteRole(oSystem.cnCon);

                                    _rec.WebSiteRole.sControl = Guid.NewGuid().ToString();
                                    _rec.WebSiteRole.dtDateCreated = DateTime.Now;
                                    _rec.WebSiteRole.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Insert_SQL(_rec.WebSiteRole);

                                    _rec.Get_RolesList(oSystem.cnCon);

                                    oSystem.CloseDataConnection();
                                    //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                    #endregion
                                    return RedirectToAction("WebSiteRole_Details", new { key = _rec.WebSiteRole.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_sViewToLoad, _rec);
                                    //return View(_rec);
                                }
                                else
                                {
                                    if (_rec.WebSiteRole.ID > 0)
                                    {
                                        #region
                                        ViewBag.bError = false;
                                        ViewBag.bAddNew = false;
                                        ViewBag.bSaved = true;
                                        ViewBag.sErrorMessage = "";
                                        oSystem.OpenDataConnection();

                                        DINT_WebSiteRole dbInteraction = new DINT_WebSiteRole(oSystem.cnCon);

                                        _rec.WebSiteRole.dtLastUpdated = DateTime.Now;
                                        dbInteraction.Update_SQL(_rec.WebSiteRole);

                                        _rec.Get_RolesList(oSystem.cnCon);

                                        oSystem.CloseDataConnection();
                                        #endregion
                                        //return View(_sViewToLoad, _rec);
                                        return RedirectToAction("WebSiteRole_Details", new { id = _rec.WebSiteRole.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                        //return View(_rec);
                                    }
                                    else
                                    {
                                        ViewBag.bError = true;
                                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                        oPage.DataModelsPrimary = _rec;
                                        oPage.DataModelsSub.Add(oSystem);
                                        oPage.AuthenticatedUser = true;
                                        oPage.PartialViewToLoad = _sViewToLoad;
                                        return View(sModuleBase + sBasePage, oPage);

                                    }
                                }
                            }
                            else
                            {
                                ViewBag.bError = true;
                                ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                                oPage.DataModelsPrimary = _rec;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteRole_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteRole_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteRole dbInteraction = new DINT_WebSiteRole(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteRole.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteRole.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("WebSiteRole_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("WebSiteRole_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteNavigationRoles
        public ActionResult WebSiteNavigationRoles_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSiteNavigationRoles_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteNavigationRoles_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteNavigationRoles dbInteraction = new DINT_WebSiteNavigationRoles(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteNavigationRoles.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }


                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sRoleID", "'%" + Search + "%'", "string", 11, "sRoleID", " = ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteNavigationRoles.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteNavigationRoles_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteNavigationRoles_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteNavigationRoles_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        ACMSDBView.WebSiteNavigationRolesViewModel recRecord = new WebSiteNavigationRolesViewModel();

                        if (recRecord.GetView(oSystem.cnCon, id))
                        {
                            ViewBag.iParentID = recRecord.WebSiteNavigationRoles.iParentID;
                            ViewBag.sParentID = recRecord.WebSiteNavigationRoles.sParentID;
                            oSystem.CloseDataConnection();

                            oPage.DataModelsPrimary = recRecord;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteNavigationRoles dbInteraction = new DINT_WebSiteNavigationRoles(oSystem.cnCon);
                        List<DEF_WebSiteNavigationRoles.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                ACMSDBView.WebSiteNavigationRolesViewModel recRecord = new WebSiteNavigationRolesViewModel();
                                recRecord.WebSiteNavigationRoles = dbSearch[0];
                                if (recRecord.WebSiteNavigationRoles == null)
                                {
                                    return HttpNotFound();
                                }

                                ViewBag.iParentID = recRecord.WebSiteNavigationRoles.iParentID;
                                ViewBag.sParentID = recRecord.WebSiteNavigationRoles.sParentID;

                                recRecord.Get_RolesList(oSystem.cnCon);

                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteNavigationRoles_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSiteNavigationRoles_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteNavigationRoles_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";

                    ACMSDBView.WebSiteNavigationRolesViewModel recRecord = new WebSiteNavigationRolesViewModel();

                    recRecord.WebSiteNavigationRoles.iParentID = _iParentID;
                    recRecord.WebSiteNavigationRoles.sParentID = _sParentID;

                    recRecord.Get_RolesList(oSystem.cnCon);

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public ActionResult WebSiteNavigationRoles_AddUpdate(ACMSDBView.WebSiteNavigationRolesViewModel _rec)
        {
            Set_Client_NavSettings("WebSiteNavigationRoles_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteNavigationRoles_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if (_rec.WebSiteNavigationRoles != null)
                        {
                            if ((_rec.WebSiteNavigationRoles.ID == null) || (_rec.WebSiteNavigationRoles.ID == 0))
                            {
                                ViewBag.bAddNew = true;
                                _rec.WebSiteNavigationRoles.ID = -1;
                                ModelState.Remove("ID");
                            }

                            if (ModelState.IsValid)
                            {
                                ViewBag.iParentID = _rec.WebSiteNavigationRoles.iParentID;
                                ViewBag.sParentID = _rec.WebSiteNavigationRoles.sParentID;
                                if (ViewBag.bAddNew == true)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();

                                    DINT_WebSiteNavigationRoles dbInteraction = new DINT_WebSiteNavigationRoles(oSystem.cnCon);

                                    _rec.WebSiteNavigationRoles.sControl = Guid.NewGuid().ToString();
                                    _rec.WebSiteNavigationRoles.dtDateCreated = DateTime.Now;
                                    _rec.WebSiteNavigationRoles.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Insert_SQL(_rec.WebSiteNavigationRoles);

                                    _rec.Get_RolesList(oSystem.cnCon);

                                    oSystem.CloseDataConnection();
                                    //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                    #endregion
                                    return RedirectToAction("WebSiteNavigationRoles_Details", new { key = _rec.WebSiteNavigationRoles.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_sViewToLoad, _rec);
                                    //return View(_rec);
                                }
                                else
                                {
                                    if (_rec.WebSiteNavigationRoles.ID > 0)
                                    {
                                        #region
                                        ViewBag.bError = false;
                                        ViewBag.bAddNew = false;
                                        ViewBag.bSaved = true;
                                        ViewBag.sErrorMessage = "";
                                        oSystem.OpenDataConnection();


                                        DINT_WebSiteNavigationRoles dbInteraction = new DINT_WebSiteNavigationRoles(oSystem.cnCon);

                                        _rec.WebSiteNavigationRoles.dtLastUpdated = DateTime.Now;
                                        dbInteraction.Update_SQL(_rec.WebSiteNavigationRoles);

                                        _rec.Get_RolesList(oSystem.cnCon);

                                        oSystem.CloseDataConnection();
                                        #endregion
                                        //return View(_sViewToLoad, _rec.WebSiteNavigationRoles);
                                        return RedirectToAction("WebSiteNavigationRoles_Details", new { id = _rec.WebSiteNavigationRoles.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                        //return View(_rec);
                                    }
                                    else
                                    {
                                        ViewBag.bError = true;
                                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                        oPage.DataModelsPrimary = _rec;
                                        oPage.DataModelsSub.Add(oSystem);
                                        oPage.AuthenticatedUser = true;
                                        oPage.PartialViewToLoad = _sViewToLoad;
                                        return View(sModuleBase + sBasePage, oPage);

                                    }
                                }
                            }
                            else
                            {
                                ViewBag.bError = true;
                                ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                                oPage.DataModelsPrimary = _rec;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteNavigationRoles_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteNavigationRoles_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteNavigationRoles dbInteraction = new DINT_WebSiteNavigationRoles(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteNavigationRoles.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteNavigationRoles.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("WebSiteNavigationRoles_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("WebSiteNavigationRoles_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteBlogRoles
        public ActionResult WebSiteBlogRoles_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSiteBlogRoles_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogRoles_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteBlogRoles dbInteraction = new DINT_WebSiteBlogRoles(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteBlogRoles.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }


                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sRoleID", "'%" + Search + "%'", "string", 11, "sRoleID", " = ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);

                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        dbSearch = new List<DEF_WebSiteBlogRoles.RecordObject>();
                        ViewBag.iNumberOfPages = 0;
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteBlogRoles_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteBlogRoles_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogRoles_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        ACMSDBView.WebSiteBlogRolesViewModel recRecord = new WebSiteBlogRolesViewModel();
                        if (recRecord.GetView(oSystem.cnCon, id))
                        {
                            ViewBag.iParentID = recRecord.WebSiteBlogRoles.iParentID;
                            ViewBag.sParentID = recRecord.WebSiteBlogRoles.sParentID;

                            recRecord.Get_RolesList(oSystem.cnCon);

                            oSystem.CloseDataConnection();

                            oPage.DataModelsPrimary = recRecord;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteBlogRoles dbInteraction = new DINT_WebSiteBlogRoles(oSystem.cnCon);
                        List<DEF_WebSiteBlogRoles.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                ACMSDBView.WebSiteBlogRolesViewModel recRecord = new WebSiteBlogRolesViewModel();
                                recRecord.WebSiteBlogRoles = dbSearch[0];
                                if (recRecord.WebSiteBlogRoles == null)
                                {
                                    return HttpNotFound();
                                }
                                recRecord.Get_RolesList(oSystem.cnCon);

                                ViewBag.iParentID = recRecord.WebSiteBlogRoles.iParentID;
                                ViewBag.sParentID = recRecord.WebSiteBlogRoles.sParentID;
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteBlogRoles_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSiteBlogRoles_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogRoles_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    ACMSDBView.WebSiteBlogRolesViewModel recRecord = new WebSiteBlogRolesViewModel();

                    recRecord.Get_RolesList(oSystem.cnCon);

                    recRecord.WebSiteBlogRoles.iParentID = _iParentID;
                    recRecord.WebSiteBlogRoles.sParentID = _sParentID;

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public ActionResult WebSiteBlogRoles_AddUpdate(ACMSDBView.WebSiteBlogRolesViewModel _rec)
        {
            Set_Client_NavSettings("WebSiteBlogRoles_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogRoles_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if (_rec.WebSiteBlogRoles != null)
                        {
                            if ((_rec.WebSiteBlogRoles.ID == null) || (_rec.WebSiteBlogRoles.ID == 0))
                            {
                                ViewBag.bAddNew = true;
                                _rec.WebSiteBlogRoles.ID = -1;
                                ModelState.Remove("ID");
                            }

                            if (ModelState.IsValid)
                            {
                                ViewBag.iParentID = _rec.WebSiteBlogRoles.iParentID;
                                ViewBag.sParentID = _rec.WebSiteBlogRoles.sParentID;
                                if (ViewBag.bAddNew == true)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();

                                    DINT_WebSiteBlogRoles dbInteraction = new DINT_WebSiteBlogRoles(oSystem.cnCon);

                                    _rec.WebSiteBlogRoles.sControl = Guid.NewGuid().ToString();
                                    _rec.WebSiteBlogRoles.dtDateCreated = DateTime.Now;
                                    _rec.WebSiteBlogRoles.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Insert_SQL(_rec.WebSiteBlogRoles);

                                    _rec.Get_RolesList(oSystem.cnCon);

                                    oSystem.CloseDataConnection();
                                    //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                    #endregion
                                    return RedirectToAction("WebSiteBlogRoles_Details", new { key = _rec.WebSiteBlogRoles.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_sViewToLoad, _rec);
                                    //return View(_rec);
                                }
                                else
                                {
                                    if (_rec.WebSiteBlogRoles.ID > 0)
                                    {
                                        #region
                                        ViewBag.bError = false;
                                        ViewBag.bAddNew = false;
                                        ViewBag.bSaved = true;
                                        ViewBag.sErrorMessage = "";
                                        oSystem.OpenDataConnection();


                                        DINT_WebSiteBlogRoles dbInteraction = new DINT_WebSiteBlogRoles(oSystem.cnCon);

                                        _rec.WebSiteBlogRoles.dtLastUpdated = DateTime.Now;
                                        dbInteraction.Update_SQL(_rec.WebSiteBlogRoles);

                                        _rec.Get_RolesList(oSystem.cnCon);

                                        oSystem.CloseDataConnection();
                                        #endregion
                                        //return View(_sViewToLoad, _rec);
                                        return RedirectToAction("WebSiteBlogRoles_Details", new { id = _rec.WebSiteBlogRoles.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                        //return View(_rec);
                                    }
                                    else
                                    {
                                        ViewBag.bError = true;
                                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                        oPage.DataModelsPrimary = _rec;
                                        oPage.DataModelsSub.Add(oSystem);
                                        oPage.AuthenticatedUser = true;
                                        oPage.PartialViewToLoad = _sViewToLoad;
                                        return View(sModuleBase + sBasePage, oPage);

                                    }
                                }
                            }
                            else
                            {
                                ViewBag.bError = true;
                                ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                                oPage.DataModelsPrimary = _rec;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);

                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);

                        }

                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteBlogRoles_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteBlogRoles_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteBlogRoles dbInteraction = new DINT_WebSiteBlogRoles(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteBlogRoles.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteBlogRoles.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("WebSiteBlogRoles_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("WebSiteBlogRoles_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteBlogEntryRole
        public ActionResult WebSiteBlogEntryRole_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSiteBlogEntryRole_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogEntryRole_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteBlogEntryRole dbInteraction = new DINT_WebSiteBlogEntryRole(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteBlogEntryRole.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }


                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sRoleID", "'%" + Search + "%'", "string", 11, "sRoleID", " = ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);

                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteBlogEntryRole.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteBlogEntryRole_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteBlogEntryRole_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogEntryRole_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        ACMSDBView.WebSiteBlogEntryRoleViewModel recRecord = new WebSiteBlogEntryRoleViewModel();
                        if (recRecord.GetView(oSystem.cnCon, id))
                        {
                            ViewBag.iParentID = recRecord.WebSiteBlogEntryRole.iParentID;
                            ViewBag.sParentID = recRecord.WebSiteBlogEntryRole.sParentID;
                            recRecord.Get_RolesList(oSystem.cnCon);
                            oSystem.CloseDataConnection();

                            oPage.DataModelsPrimary = recRecord;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }

                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteBlogEntryRole dbInteraction = new DINT_WebSiteBlogEntryRole(oSystem.cnCon);
                        List<DEF_WebSiteBlogEntryRole.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                ACMSDBView.WebSiteBlogEntryRoleViewModel recRecord = new WebSiteBlogEntryRoleViewModel();
                                recRecord.WebSiteBlogEntryRole = dbSearch[0];
                                if (recRecord.WebSiteBlogEntryRole == null)
                                {
                                    return HttpNotFound();
                                }

                                ViewBag.iParentID = recRecord.WebSiteBlogEntryRole.iParentID;
                                ViewBag.sParentID = recRecord.WebSiteBlogEntryRole.sParentID;

                                recRecord.Get_RolesList(oSystem.cnCon);

                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteBlogEntryRole_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSiteBlogEntryRole_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogEntryRole_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    ACMSDBView.WebSiteBlogEntryRoleViewModel recRecord = new WebSiteBlogEntryRoleViewModel();

                    recRecord.WebSiteBlogEntryRole.iParentID = _iParentID;
                    recRecord.WebSiteBlogEntryRole.sParentID = _sParentID;

                    recRecord.Get_RolesList(oSystem.cnCon);

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public ActionResult WebSiteBlogEntryRole_AddUpdate(ACMSDBView.WebSiteBlogEntryRoleViewModel _rec)
        {
            Set_Client_NavSettings("WebSiteBlogEntryRole_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteBlogEntryRole_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if (_rec.WebSiteBlogEntryRole != null)
                        {
                            if ((_rec.WebSiteBlogEntryRole.ID == null) || (_rec.WebSiteBlogEntryRole.ID == 0))
                            {
                                ViewBag.bAddNew = true;
                                _rec.WebSiteBlogEntryRole.ID = -1;
                                ModelState.Remove("ID");
                            }

                            if (ModelState.IsValid)
                            {
                                ViewBag.iParentID = _rec.WebSiteBlogEntryRole.iParentID;
                                ViewBag.sParentID = _rec.WebSiteBlogEntryRole.sParentID;
                                if (ViewBag.bAddNew == true)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();

                                    DINT_WebSiteBlogEntryRole dbInteraction = new DINT_WebSiteBlogEntryRole(oSystem.cnCon);

                                    _rec.WebSiteBlogEntryRole.sControl = Guid.NewGuid().ToString();
                                    _rec.WebSiteBlogEntryRole.dtDateCreated = DateTime.Now;
                                    _rec.WebSiteBlogEntryRole.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Insert_SQL(_rec.WebSiteBlogEntryRole);

                                    _rec.Get_RolesList(oSystem.cnCon);

                                    oSystem.CloseDataConnection();
                                    //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                    #endregion
                                    return RedirectToAction("WebSiteBlogEntryRole_Details", new { key = _rec.WebSiteBlogEntryRole.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_sViewToLoad, _rec);
                                    //return View(_rec);
                                }
                                else
                                {
                                    if (_rec.WebSiteBlogEntryRole.ID > 0)
                                    {
                                        #region
                                        ViewBag.bError = false;
                                        ViewBag.bAddNew = false;
                                        ViewBag.bSaved = true;
                                        ViewBag.sErrorMessage = "";
                                        oSystem.OpenDataConnection();


                                        DINT_WebSiteBlogEntryRole dbInteraction = new DINT_WebSiteBlogEntryRole(oSystem.cnCon);

                                        _rec.WebSiteBlogEntryRole.dtLastUpdated = DateTime.Now;
                                        dbInteraction.Update_SQL(_rec.WebSiteBlogEntryRole);

                                        _rec.Get_RolesList(oSystem.cnCon);

                                        oSystem.CloseDataConnection();
                                        #endregion
                                        //return View(_sViewToLoad, _rec);
                                        return RedirectToAction("WebSiteBlogEntryRole_Details", new { id = _rec.WebSiteBlogEntryRole.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                        //return View(_rec);
                                    }
                                    else
                                    {
                                        ViewBag.bError = true;
                                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                        oPage.DataModelsPrimary = _rec;
                                        oPage.DataModelsSub.Add(oSystem);
                                        oPage.AuthenticatedUser = true;
                                        oPage.PartialViewToLoad = _sViewToLoad;
                                        return View(sModuleBase + sBasePage, oPage);
                                    }
                                }
                            }
                            else
                            {
                                ViewBag.bError = true;
                                ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                oPage.DataModelsPrimary = _rec;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);

                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSiteBlogEntryRole_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteBlogEntryRole_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                int iParentID = 0;
                string sParentID = "";

                #region if ParentID is less than or equal to zero see if it was included in the form
                try
                {
                    if (Request.Form["_iParentID"] != null)
                    {
                        try
                        {
                            iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                            sParentID = Request.Form["_sParentID"].ToString();
                        }
                        catch
                        {
                        }
                    }
                }
                catch
                {
                }
                #endregion


                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteBlogEntryRole dbInteraction = new DINT_WebSiteBlogEntryRole(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteBlogEntryRole.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);

                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteBlogEntryRole.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("WebSiteBlogEntryRole_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("WebSiteBlogEntryRole_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSitePageZone
        public ActionResult WebSitePageZone_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSitePageZone_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageZone_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSitePageZone dbInteraction = new DINT_WebSitePageZone(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSitePageZone.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }


                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sName", "'" + Search + "'", "string", 10, "sName", " = ", "");
                        lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);

                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSitePageZone.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSitePageZone_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSitePageZone_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageZone_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSitePageZone dbInteraction = new DINT_WebSitePageZone(oSystem.cnCon);
                        List<DEF_WebSitePageZone.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                //DEF_WebSitePageZone.RecordObject recRecord = dbSearch[0];
                                ACMSDBView.WebSitePageZoneViewModel recRecord = new WebSitePageZoneViewModel();

                                int iTemplateID = 0;
                                lstParameters = new List<DataParameter>();
                                pParameter = new DataParameter("ID", dbSearch[0].iParentID.ToString(), "int", 0, "ID", " = ", "");
                                lstParameters.Add(pParameter);

                                DINT_WebSitePage dbWebSitePage = new DINT_WebSitePage(oSystem.cnCon);
                                List<DEF_WebSitePage.RecordObject> lsrWebSitePage = dbWebSitePage.Get(lstParameters);
                                if (lsrWebSitePage != null)
                                {
                                    if (lsrWebSitePage.Count > 0)
                                    {
                                        iTemplateID = lsrWebSitePage[0].iSiteTemplatePageID;
                                    }
                                }

                                recRecord.GetView(oSystem.cnCon, dbSearch[0].ID);
                                recRecord.Get_WebSitePageTemplateZonesList(oSystem.cnCon, iTemplateID);
                                recRecord.Get_Languages(oSystem.cnCon);

                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.WebSitePageZone.iParentID;
                                ViewBag.sParentID = recRecord.WebSitePageZone.sParentID;
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSitePageZone dbInteraction = new DINT_WebSitePageZone(oSystem.cnCon);
                        List<DEF_WebSitePageZone.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                //DEF_WebSitePageZone.RecordObject recRecord = dbSearch[0];
                                ACMSDBView.WebSitePageZoneViewModel recRecord = new WebSitePageZoneViewModel();

                                int iTemplateID = 0;
                                lstParameters = new List<DataParameter>();
                                pParameter = new DataParameter("ID", dbSearch[0].iParentID.ToString(), "int", 0, "ID", " = ", "");
                                lstParameters.Add(pParameter);

                                DINT_WebSitePage dbWebSitePage = new DINT_WebSitePage(oSystem.cnCon);
                                List<DEF_WebSitePage.RecordObject> lsrWebSitePage = dbWebSitePage.Get(lstParameters);
                                if (lsrWebSitePage != null)
                                {
                                    if (lsrWebSitePage.Count > 0)
                                    {
                                        iTemplateID = lsrWebSitePage[0].iSiteTemplatePageID;
                                    }
                                }

                                recRecord.GetView(oSystem.cnCon, dbSearch[0].ID);
                                recRecord.Get_WebSitePageTemplateZonesList(oSystem.cnCon, iTemplateID);
                                recRecord.Get_Languages(oSystem.cnCon);

                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.WebSitePageZone.iParentID;
                                ViewBag.sParentID = recRecord.WebSitePageZone.sParentID;
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSitePageZone_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSitePageZone_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageZone_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";

                    ACMSDBView.WebSitePageZoneViewModel recRecord = new WebSitePageZoneViewModel();
                    if (_iParentID > 0)
                    {
                        int iTemplateID = 0;
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", _iParentID.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSitePage dbWebSitePage = new DINT_WebSitePage(oSystem.cnCon);
                        List<DEF_WebSitePage.RecordObject> lsrWebSitePage = dbWebSitePage.Get(lstParameters);
                        if (lsrWebSitePage != null)
                        {
                            if (lsrWebSitePage.Count > 0)
                            {
                                iTemplateID = lsrWebSitePage[0].iSiteTemplatePageID;
                                recRecord.Get_WebSitePageTemplateZonesList(oSystem.cnCon, iTemplateID);
                            }
                            else
                            {
                                iTemplateID = 1;
                                recRecord.Get_WebSitePageTemplateZonesList(oSystem.cnCon, iTemplateID);
                            }
                        }
                        else
                        {
                            iTemplateID = 1;
                            recRecord.Get_WebSitePageTemplateZonesList(oSystem.cnCon, iTemplateID);
                        }

                        recRecord.WebSitePageZone.iParentID = _iParentID;
                        recRecord.WebSitePageZone.sParentID = _sParentID;
                    }


                    recRecord.WebSitePageZone.iLanguageID = 205;
                    recRecord.WebSitePageZone.sLanguageID = "United States English";

                    recRecord.Get_Languages(oSystem.cnCon);

                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        [ValidateInput(false)]
        public ActionResult WebSitePageZone_AddUpdate(ACMSDBView.WebSitePageZoneViewModel _rec)
        {
            Set_Client_NavSettings("WebSitePageZone_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageZone_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.WebSitePageZone.ID == null) || (_rec.WebSitePageZone.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.WebSitePageZone.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.WebSitePageZone.iParentID;
                            ViewBag.sParentID = _rec.WebSitePageZone.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSitePageZone dbInteraction = new DINT_WebSitePageZone(oSystem.cnCon);

                                _rec.WebSitePageZone.sControl = Guid.NewGuid().ToString();
                                _rec.WebSitePageZone.dtDateCreated = DateTime.Now;
                                _rec.WebSitePageZone.dtLastUpdated = DateTime.Now;


                                List<DataParameter> lstParameters = new List<DataParameter>();
                                DataParameter pParameter = new DataParameter("ID", _rec.WebSitePageZone.iZoneID.ToString(), "int", 0, "ID", " = ", "");
                                lstParameters.Add(pParameter);

                                DINT_WebSitePageTemplateZones dbWebSitePageTemplateZones = new DINT_WebSitePageTemplateZones(oSystem.cnCon);
                                List<DEF_WebSitePageTemplateZones.RecordObject> lsrWebSitePageTemplateZones = dbWebSitePageTemplateZones.Get(lstParameters);
                                if (lsrWebSitePageTemplateZones != null)
                                {
                                    if (lsrWebSitePageTemplateZones.Count > 0)
                                    {
                                        if (lsrWebSitePageTemplateZones[0].ID == _rec.WebSitePageZone.iZoneID)
                                        {
                                            _rec.WebSitePageZone.sZoneID = lsrWebSitePageTemplateZones[0].sName;
                                        }
                                    }
                                }


                                dbInteraction.Insert_SQL(_rec.WebSitePageZone);


                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("WebSitePageZone_Details", new { key = _rec.WebSitePageZone.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.WebSitePageZone.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSitePageZone dbInteraction = new DINT_WebSitePageZone(oSystem.cnCon);

                                    _rec.WebSitePageZone.dtLastUpdated = DateTime.Now;


                                    List<DataParameter> lstParameters = new List<DataParameter>();
                                    DataParameter pParameter = new DataParameter("ID", _rec.WebSitePageZone.iZoneID.ToString(), "int", 0, "ID", " = ", "");
                                    lstParameters.Add(pParameter);

                                    DINT_WebSitePageTemplateZones dbWebSitePageTemplateZones = new DINT_WebSitePageTemplateZones(oSystem.cnCon);
                                    List<DEF_WebSitePageTemplateZones.RecordObject> lsrWebSitePageTemplateZones = dbWebSitePageTemplateZones.Get(lstParameters);
                                    if (lsrWebSitePageTemplateZones != null)
                                    {
                                        if (lsrWebSitePageTemplateZones.Count > 0)
                                        {
                                            if (lsrWebSitePageTemplateZones[0].ID == _rec.WebSitePageZone.iZoneID)
                                            {
                                                _rec.WebSitePageZone.sZoneID = lsrWebSitePageTemplateZones[0].sName;
                                            }
                                        }
                                    }



                                    dbInteraction.Update_SQL(_rec.WebSitePageZone);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    //return View(_sViewToLoad, _rec);
                                    return RedirectToAction("WebSitePageZone_Details", new { id = _rec.WebSitePageZone.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);
                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSitePageZone_Delete(int id)
        {
            Set_Client_NavSettings("WebSitePageZone_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSitePageZone dbInteraction = new DINT_WebSitePageZone(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSitePageZone.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSitePageZone.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("WebSitePageZone_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("WebSitePageZone_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSitePageTemplateZonesContent
        public ActionResult WebSitePageTemplateZonesContent_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)
        {
            Set_Client_NavSettings("WebSitePageTemplateZonesContent_List");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageTemplateZonesContent_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSitePageTemplateZonesContent dbInteraction = new DINT_WebSitePageTemplateZonesContent(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSitePageTemplateZonesContent.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    if (_iParentID > 0)
                    {
                        DataParameter pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                        lstParameters.Add(pParameter);
                    }


                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;

                        lstParameters = new List<DataParameter>();
                        //DataParameter pParameter = new DataParameter("sName", "'" + Search + "'", "string", 10, "sName", " = ", "");
                        //lstParameters.Add(pParameter);
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }
                    else
                    {
                        iTotalRows = dbInteraction.GetRowCount(lstParameters);
                    }

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);

                        oSystem.CloseDataConnection();

                        var dbres = dbSearch.OrderBy(s => s.ID);

                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSitePageTemplateZonesContent.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSitePageTemplateZonesContent_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSitePageTemplateZonesContent_Details");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageTemplateZonesContent_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSitePageTemplateZonesContent dbInteraction = new DINT_WebSitePageTemplateZonesContent(oSystem.cnCon);
                        List<DEF_WebSitePageTemplateZonesContent.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                //DEF_WebSitePageTemplateZonesContent.RecordObject recRecord = dbSearch[0];
                                ACMSDBView.WebSitePageTemplateZonesContentViewModel recRecord = new WebSitePageTemplateZonesContentViewModel();

                                int iTemplateID = dbSearch[0].iParentID;

                                recRecord.GetView(oSystem.cnCon, dbSearch[0].ID);

                                recRecord.Get_WebSitePageTemplateZonesList(oSystem.cnCon, iTemplateID);

                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }

                                recRecord.Get_Languages(oSystem.cnCon);

                                ViewBag.iParentID = recRecord.WebSitePageTemplateZonesContent.iParentID;
                                ViewBag.sParentID = recRecord.WebSitePageTemplateZonesContent.sParentID;
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }
                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSitePageTemplateZonesContent dbInteraction = new DINT_WebSitePageTemplateZonesContent(oSystem.cnCon);
                        List<DEF_WebSitePageTemplateZonesContent.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                //DEF_WebSitePageTemplateZonesContent.RecordObject recRecord = dbSearch[0];
                                ACMSDBView.WebSitePageTemplateZonesContentViewModel recRecord = new WebSitePageTemplateZonesContentViewModel();

                                int iTemplateID = dbSearch[0].iParentID;

                                recRecord.GetView(oSystem.cnCon, dbSearch[0].ID);

                                recRecord.Get_WebSitePageTemplateZonesList(oSystem.cnCon, iTemplateID);

                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                recRecord.Get_Languages(oSystem.cnCon);
                                ViewBag.iParentID = recRecord.WebSitePageTemplateZonesContent.iParentID;
                                ViewBag.sParentID = recRecord.WebSitePageTemplateZonesContent.sParentID;
                                oSystem.CloseDataConnection();

                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                return View(sModuleBase + sBasePage, oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        public JsonResult GetTemplatZonesContent(int _iTemplateZoneID)
        {
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            try
            {
                if (oSystem.OpenDataConnection())
                {
                    if (oSystem.GetCurrentUser())
                    {
                        Set_ViewBag_Global();
                        Set_ViewBag_UserInfo();
                    }

                    if (_iTemplateZoneID > 0)
                    {

                        DINT_WebSitePageTemplateZonesContent dbInteraction = new DINT_WebSitePageTemplateZonesContent(oSystem.cnCon);

                        List<DEF_WebSitePageTemplateZonesContent.RecordObject> dbSearch = null;
                        List<DataParameter> lstParameters = new List<DataParameter>();

                        DataParameter pParameter = new DataParameter("iContentZoneID", "'" + _iTemplateZoneID + "'", "int", 17, "iContentZoneID", " = ", "");
                        lstParameters.Add(pParameter);

                        dbSearch = dbInteraction.Get(lstParameters);
                        List<SelectListItem> ReturnList = new List<SelectListItem>();

                        if (dbSearch != null)
                        {
                            foreach (DEF_WebSitePageTemplateZonesContent.RecordObject oV in dbSearch)
                            {
                                ReturnList.Add(new SelectListItem { Selected = false, Text = oV.sName, Value = oV.ID.ToString() });
                            }


                        }


                        var oResponse = Json(ReturnList);
                        return oResponse;
                    }
                }


                var oResponseError = Json(new { RESPONSE = "ERROR" });
                return oResponseError;
            }
            catch
            {
                var oResponseError1 = Json(new { RESPONSE = "ERROR" });
                return oResponseError1;
            }
        }
        public ActionResult WebSitePageTemplateZonesContent_Create(int _iParentID = 0, string _sParentID = "")
        {
            Set_Client_NavSettings("WebSitePageTemplateZonesContent_Create");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;

                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageTemplateZonesContent_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    //DEF_WebSitePageTemplateZonesContent.RecordObject recRecord = new DEF_WebSitePageTemplateZonesContent.RecordObject();

                    //recRecord.iParentID = _iParentID;
                    //recRecord.sParentID = _sParentID;

                    ACMSDBView.WebSitePageTemplateZonesContentViewModel recRecord = new WebSitePageTemplateZonesContentViewModel();
                    if (_iParentID > 0)
                    {
                        recRecord.Get_WebSitePageTemplateZonesList(oSystem.cnCon, _iParentID);
                        recRecord.Get_Languages(oSystem.cnCon);
                        recRecord.WebSitePageTemplateZonesContent.iParentID = _iParentID;
                        recRecord.WebSitePageTemplateZonesContent.sParentID = _sParentID;

                    }


                    recRecord.WebSitePageTemplateZonesContent.iLanguageID = 205;
                    recRecord.WebSitePageTemplateZonesContent.sLanguageID = "United States English";



                    recRecord.Get_Languages(oSystem.cnCon);
                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    return View(sModuleBase + sBasePage, oPage);
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        [HttpPost]
        [ValidateInput(false)]
        public ActionResult WebSitePageTemplateZonesContent_AddUpdate(ACMSDBView.WebSitePageTemplateZonesContentViewModel _rec)
        {
            Set_Client_NavSettings("WebSitePageTemplateZonesContent_AddUpdate");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSitePageTemplateZonesContent_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.WebSitePageTemplateZonesContent.ID == null) || (_rec.WebSitePageTemplateZonesContent.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.WebSitePageTemplateZonesContent.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.WebSitePageTemplateZonesContent.iParentID;
                            ViewBag.sParentID = _rec.WebSitePageTemplateZonesContent.sParentID;
                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSitePageTemplateZonesContent dbInteraction = new DINT_WebSitePageTemplateZonesContent(oSystem.cnCon);

                                _rec.WebSitePageTemplateZonesContent.sControl = Guid.NewGuid().ToString();
                                _rec.WebSitePageTemplateZonesContent.dtDateCreated = DateTime.Now;
                                _rec.WebSitePageTemplateZonesContent.dtLastUpdated = DateTime.Now;

                                _rec.Get_WebSitePageTemplateZonesList(oSystem.cnCon, _rec.WebSitePageTemplateZonesContent.iParentID);

                                _rec.WebSitePageTemplateZonesContent.sContentZoneID = _rec.GetZoneName(_rec.WebSitePageTemplateZonesContent.iContentZoneID);




                                dbInteraction.Insert_SQL(_rec.WebSitePageTemplateZonesContent);



                                oSystem.CloseDataConnection();
                                //return RedirectToAction("StatesDetails", new { id = _rec.ID, _bOverrideScreenMessage = true });
                                #endregion
                                return RedirectToAction("WebSitePageTemplateZonesContent_Details", new { key = _rec.WebSitePageTemplateZonesContent.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                //return View(_sViewToLoad, _rec);
                                //return View(_rec);
                            }
                            else
                            {
                                if (_rec.WebSitePageTemplateZonesContent.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSitePageTemplateZonesContent dbInteraction = new DINT_WebSitePageTemplateZonesContent(oSystem.cnCon);

                                    _rec.WebSitePageTemplateZonesContent.dtLastUpdated = DateTime.Now;

                                    _rec.Get_WebSitePageTemplateZonesList(oSystem.cnCon, _rec.WebSitePageTemplateZonesContent.iParentID);

                                    _rec.WebSitePageTemplateZonesContent.sContentZoneID = _rec.GetZoneName(_rec.WebSitePageTemplateZonesContent.iContentZoneID);




                                    dbInteraction.Update_SQL(_rec.WebSitePageTemplateZonesContent);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    return RedirectToAction("WebSitePageTemplateZonesContent_Details", new { id = _rec.WebSitePageTemplateZonesContent.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                    //return View(_sViewToLoad, _rec);
                                    //return View(_rec);
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    return View(sModuleBase + sBasePage, oPage);
                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";
                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            return View(sModuleBase + sBasePage, oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        return View(sModuleBase + sBasePage, oPage);
                    }
                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public ActionResult WebSitePageTemplateZonesContent_Delete(int id)
        {
            Set_Client_NavSettings("WebSitePageTemplateZonesContent_Delete");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();

            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();

                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSitePageTemplateZonesContent dbInteraction = new DINT_WebSitePageTemplateZonesContent(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSitePageTemplateZonesContent.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSitePageTemplateZonesContent.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {
                                        //ViewBag.iParentID = recRecord.iParentID;
                                        //ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;
                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }

                        return RedirectToAction("WebSitePageTemplateZonesContent_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }
                    else
                    {
                        return RedirectToAction("WebSitePageTemplateZonesContent_List", new { _iParentID = iParentID, _sParentID = sParentID });
                    }

                    #endregion
                }
                else
                {
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteJobApplicant

        string sWebSiteJobApplicant_Details = "/views/Forms/WebSiteJobApplicant_Details.cshtml";
        string sWebSiteJobApplicant_List = "/views/Forms/WebSiteJobApplicant_List.cshtml";


        public ActionResult WebSiteJobApplicant_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)

        {
            Set_Client_NavSettings("WebSiteJobApplicant");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    Set_ViewBag_Global();
                    Set_ViewBag_UserInfo();
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }

                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteJobApplicant_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteJobApplicant dbInteraction = new DINT_WebSiteJobApplicant(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteJobApplicant.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    DataParameter pParameter = null;
                    bool bParameterSet = false;
                    string sPRelationsToOthers = "";
                    //if (_iParentID > 0)
                    //{
                    pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                    lstParameters.Add(pParameter);
                    bParameterSet = true;
                    //}



                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;


                        bool bIsNumber = false;
                        bool bIsDate = false;
                        bool bIsBool = false;
                        #region Test For Number
                        try
                        {
                            int iTest = System.Convert.ToInt32(Search);
                            bIsNumber = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Date
                        try
                        {
                            DateTime dtTest = System.Convert.ToDateTime(Search);
                            bIsDate = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Boolean
                        try
                        {
                            bool bTest = System.Convert.ToBoolean(Search);
                            bIsBool = true;
                        }
                        catch
                        {
                        }
                        #endregion


                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }
                        //if (_iParentID > 0)
                        //{
                        //if (bIsNumber == true)
                        //{
                        //}
                        //}
                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }

                    }

                    iTotalRows = dbInteraction.GetRowCount(lstParameters);

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);


                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    else
                    {
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteJobApplicant.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteJobApplicant_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteJobApplicant");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteJobApplicant_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteJobApplicant dbInteraction = new DINT_WebSiteJobApplicant(oSystem.cnCon);
                        List<DEF_WebSiteJobApplicant.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteJobApplicant.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteJobApplicant dbInteraction = new DINT_WebSiteJobApplicant(oSystem.cnCon);
                        List<DEF_WebSiteJobApplicant.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteJobApplicant.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }



        public ActionResult WebSiteJobApplicant_Create(int _iParentID = 0, string _sParentID = "")

        {
            Set_Client_NavSettings("WebSiteJobApplicant");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteJobApplicant_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_WebSiteJobApplicant.RecordObject recRecord = new DEF_WebSiteJobApplicant.RecordObject();


                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;





                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    oSystem.CloseDataConnection();
                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public ActionResult WebSiteJobApplicant_AddUpdate(DEF_WebSiteJobApplicant.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSiteJobApplicant");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteJobApplicant_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;



                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSiteJobApplicant dbInteraction = new DINT_WebSiteJobApplicant(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtDateUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);



                                oSystem.CloseDataConnection();
                                #endregion
                                return RedirectToAction("WebSiteJobApplicant_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSiteJobApplicant dbInteraction = new DINT_WebSiteJobApplicant(oSystem.cnCon);
                                    _rec.dtDateUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    return RedirectToAction("WebSiteJobApplicant_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    oSystem.CloseDataConnection();
                                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            oSystem.CloseDataConnection();
                            return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteJobApplicant_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteJobApplicant");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteJobApplicant dbInteraction = new DINT_WebSiteJobApplicant(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteJobApplicant.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteJobApplicant.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {

                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;


                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }
                        oSystem.CloseDataConnection();

                        return RedirectToAction("WebSiteJobApplicant_List", new { _iParentID = iParentID, _sParentID = sParentID });


                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return RedirectToAction("WebSiteJobApplicant_List", new { _iParentID = iParentID, _sParentID = sParentID });

                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteJobEvents

        string sWebSiteJobEvents_Details = "/views/Forms/WebSiteJobEvents_Details.cshtml";
        string sWebSiteJobEvents_List = "/views/Forms/WebSiteJobEvents_List.cshtml";


        public ActionResult WebSiteJobEvents_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)

        {
            Set_Client_NavSettings("WebSiteJobEvents");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    Set_ViewBag_Global();
                    Set_ViewBag_UserInfo();
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }

                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteJobEvents_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteJobEvents dbInteraction = new DINT_WebSiteJobEvents(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteJobEvents.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    DataParameter pParameter = null;
                    bool bParameterSet = false;
                    string sPRelationsToOthers = "";
                    //if (_iParentID > 0)
                    //{
                    pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                    lstParameters.Add(pParameter);
                    bParameterSet = true;
                    //}



                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;


                        bool bIsNumber = false;
                        bool bIsDate = false;
                        bool bIsBool = false;
                        #region Test For Number
                        try
                        {
                            int iTest = System.Convert.ToInt32(Search);
                            bIsNumber = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Date
                        try
                        {
                            DateTime dtTest = System.Convert.ToDateTime(Search);
                            bIsDate = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Boolean
                        try
                        {
                            bool bTest = System.Convert.ToBoolean(Search);
                            bIsBool = true;
                        }
                        catch
                        {
                        }
                        #endregion


                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }
                        //if (_iParentID > 0)
                        //{
                        //if (bIsNumber == true)
                        //{
                        //}
                        //}
                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }

                    }

                    iTotalRows = dbInteraction.GetRowCount(lstParameters);

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);


                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    else
                    {
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteJobEvents.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteJobEvents_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteJobEvents");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteJobEvents_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteJobEvents dbInteraction = new DINT_WebSiteJobEvents(oSystem.cnCon);
                        List<DEF_WebSiteJobEvents.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteJobEvents.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteJobEvents dbInteraction = new DINT_WebSiteJobEvents(oSystem.cnCon);
                        List<DEF_WebSiteJobEvents.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteJobEvents.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }



        public ActionResult WebSiteJobEvents_Create(int _iParentID = 0, string _sParentID = "")

        {
            Set_Client_NavSettings("WebSiteJobEvents");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteJobEvents_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_WebSiteJobEvents.RecordObject recRecord = new DEF_WebSiteJobEvents.RecordObject();


                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;





                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    oSystem.CloseDataConnection();
                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public ActionResult WebSiteJobEvents_AddUpdate(DEF_WebSiteJobEvents.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSiteJobEvents");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteJobEvents_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;



                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSiteJobEvents dbInteraction = new DINT_WebSiteJobEvents(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtLastUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);



                                oSystem.CloseDataConnection();
                                #endregion
                                return RedirectToAction("WebSiteJobEvents_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSiteJobEvents dbInteraction = new DINT_WebSiteJobEvents(oSystem.cnCon);
                                    _rec.dtLastUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    return RedirectToAction("WebSiteJobEvents_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    oSystem.CloseDataConnection();
                                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            oSystem.CloseDataConnection();
                            return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteJobEvents_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteJobEvents");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteJobEvents dbInteraction = new DINT_WebSiteJobEvents(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteJobEvents.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteJobEvents.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {

                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;


                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }
                        oSystem.CloseDataConnection();

                        return RedirectToAction("WebSiteJobEvents_List", new { _iParentID = iParentID, _sParentID = sParentID });


                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return RedirectToAction("WebSiteJobEvents_List", new { _iParentID = iParentID, _sParentID = sParentID });

                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }
        #endregion

        #region Form WebSiteJobs

        string sWebSiteJobs_Details = "/views/Forms/WebSiteJobs_Details.cshtml";
        string sWebSiteJobs_List = "/views/Forms/WebSiteJobs_List.cshtml";


        public ActionResult WebSiteJobs_List(FormCollection fc, string Search, int _iParentID = 0, string _sParentID = "", int page = 1)

        {
            Set_Client_NavSettings("WebSiteJobs");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    Set_ViewBag_Global();
                    Set_ViewBag_UserInfo();
                    #region Process
                    if (_iParentID <= 0)
                    {
                        #region if ParentID is less than or equal to zero see if it was included in the form
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                _iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                _sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                        #endregion
                    }

                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteJobs_List;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sView"] != null)
                        {
                            _sViewToLoad = Session["_sView"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion

                    if (fc.AllKeys.Length > 0)
                    {
                        Search = fc["Search"].ToString();
                    }
                    oSystem.OpenDataConnection();
                    DINT_WebSiteJobs dbInteraction = new DINT_WebSiteJobs(oSystem.cnCon);
                    int iTotalRows = 0;

                    List<DEF_WebSiteJobs.RecordObject> dbSearch = null;
                    List<DataParameter> lstParameters = new List<DataParameter>();
                    DataParameter pParameter = null;
                    bool bParameterSet = false;
                    string sPRelationsToOthers = "";
                    //if (_iParentID > 0)
                    //{
                    pParameter = new DataParameter("iParentID", "'" + _iParentID + "'", "int", 1, "iParentID", " = ", "");
                    lstParameters.Add(pParameter);
                    bParameterSet = true;
                    //}



                    if (!String.IsNullOrEmpty(Search))
                    {
                        Search = Search.TrimEnd();
                        Search = Search.TrimStart();
                        ViewBag.bSearched = true;


                        bool bIsNumber = false;
                        bool bIsDate = false;
                        bool bIsBool = false;
                        #region Test For Number
                        try
                        {
                            int iTest = System.Convert.ToInt32(Search);
                            bIsNumber = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Date
                        try
                        {
                            DateTime dtTest = System.Convert.ToDateTime(Search);
                            bIsDate = true;
                        }
                        catch
                        {
                        }
                        #endregion
                        #region Test For Boolean
                        try
                        {
                            bool bTest = System.Convert.ToBoolean(Search);
                            bIsBool = true;
                        }
                        catch
                        {
                        }
                        #endregion


                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }
                        //if (_iParentID > 0)
                        //{
                        //if (bIsNumber == true)
                        //{
                        //}
                        //}
                        if (bParameterSet == true)
                        {
                            sPRelationsToOthers = " AND ";
                        }
                        else
                        {
                            sPRelationsToOthers = "";
                        }

                    }

                    iTotalRows = dbInteraction.GetRowCount(lstParameters);

                    ViewBag.iTotalRecordCount = iTotalRows;
                    int iMaxRows = 10;
                    if (iTotalRows > 0)
                    {
                        #region Page Management Calculation
                        if (page <= 0)
                        {
                            page = 1;
                        }

                        int iRow = 0;
                        int iNextTop = 0;
                        int iNumberOfPages = 0;
                        if (iTotalRows > iMaxRows)
                        {
                            iNumberOfPages = (iTotalRows / iMaxRows) + 1;
                        }
                        else
                        {
                            iNumberOfPages = 1;
                        }
                        ViewBag.iNumberOfPages = iNumberOfPages;
                        if (page <= iNumberOfPages)
                        {
                            if (page > 1)
                            {
                                iRow = ((page - 1) * iMaxRows) + 1;
                                ViewBag.iCurrentPage = page;
                                iNextTop = (page * iMaxRows);
                            }
                            else
                            {
                                iRow = 0;
                                ViewBag.iCurrentPage = 1;
                                iNextTop = page * iMaxRows;
                            }
                        }
                        else
                        {
                            page = iNumberOfPages;
                            iRow = ((page - 1) * iMaxRows) + 1;
                            ViewBag.iCurrentPage = iNumberOfPages;
                            iNextTop = iNumberOfPages * iMaxRows;
                        }
                        #endregion
                        dbSearch = dbInteraction.Get(lstParameters, iRow, iNextTop);


                        var dbres = dbSearch.OrderBy(s => s.ID);
                        oPage.DataModelsPrimary = dbres.ToList();
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    else
                    {
                        ViewBag.iNumberOfPages = 0;
                        dbSearch = new List<DEF_WebSiteJobs.RecordObject>();
                        oPage.DataModelsPrimary = dbSearch;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteJobs_Details(int id = 0, string key = "", bool _UseParameterResults = false, bool _AddNew = false, bool _Saved = false)
        {
            Set_Client_NavSettings("WebSiteJobs");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteJobs_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (id > 0)
                    {
                        #region ID Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteJobs dbInteraction = new DINT_WebSiteJobs(oSystem.cnCon);
                        List<DEF_WebSiteJobs.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteJobs.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else if (!String.IsNullOrEmpty(key))
                    {
                        #region key Based pull
                        oSystem.OpenDataConnection();
                        ViewBag.bError = false;
                        ViewBag.bAddNew = false;
                        ViewBag.bSaved = false;
                        ViewBag.sErrorMessage = "";

                        if (_UseParameterResults == true)
                        {
                            ViewBag.bAddNew = _AddNew;
                            ViewBag.bSaved = _Saved;
                        }

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("sControl", "'" + key + "'", "string", 3, "sControl", " = ", "");
                        lstParameters.Add(pParameter);

                        DINT_WebSiteJobs dbInteraction = new DINT_WebSiteJobs(oSystem.cnCon);
                        List<DEF_WebSiteJobs.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteJobs.RecordObject recRecord = dbSearch[0];
                                if (recRecord == null)
                                {
                                    return HttpNotFound();
                                }
                                ViewBag.iParentID = recRecord.iParentID;
                                ViewBag.sParentID = recRecord.sParentID;



                                oPage.DataModelsPrimary = recRecord;
                                oPage.DataModelsSub.Add(oSystem);
                                oPage.AuthenticatedUser = true;
                                oPage.PartialViewToLoad = _sViewToLoad;
                                oSystem.CloseDataConnection();
                                return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                            }
                            else
                            {
                                oSystem.CloseDataConnection();
                                return HttpNotFound();
                            }
                        }
                        else
                        {
                            oSystem.CloseDataConnection();
                            return HttpNotFound();
                        }
                        #endregion
                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return HttpNotFound();
                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }



        public ActionResult WebSiteJobs_Create(int _iParentID = 0, string _sParentID = "")

        {
            Set_Client_NavSettings("WebSiteJobs");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.iParentID = _iParentID;
                    ViewBag.sParentID = _sParentID;



                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteJobs_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    ViewBag.bError = false;
                    ViewBag.bAddNew = true;
                    ViewBag.bSaved = false;
                    ViewBag.sErrorMessage = "";
                    DEF_WebSiteJobs.RecordObject recRecord = new DEF_WebSiteJobs.RecordObject();


                    recRecord.iParentID = _iParentID;
                    recRecord.sParentID = _sParentID;





                    oPage.DataModelsPrimary = recRecord;
                    oPage.DataModelsSub.Add(oSystem);
                    oPage.AuthenticatedUser = true;
                    oPage.PartialViewToLoad = _sViewToLoad;
                    oSystem.CloseDataConnection();
                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public ActionResult WebSiteJobs_AddUpdate(DEF_WebSiteJobs.RecordObject _rec)
        {
            Set_Client_NavSettings("WebSiteJobs");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {
                    #region Process
                    ViewBag.bLoggedIn = true;
                    string sLocalDefaultView = sModuleBase + sWebSiteJobs_Details;
                    #region If View is not set try to get it
                    if (String.IsNullOrEmpty(_sViewToLoad))
                    {
                        if (Session["_sViewDetails"] != null)
                        {
                            _sViewToLoad = Session["_sViewDetails"].ToString();
                        }
                        else
                        {
                            _sViewToLoad = sLocalDefaultView;
                        }
                    }
                    #endregion
                    if (_rec != null)
                    {
                        if ((_rec.ID == null) || (_rec.ID == 0))
                        {
                            ViewBag.bAddNew = true;
                            _rec.ID = -1;
                            ModelState.Remove("ID");
                        }

                        if (ModelState.IsValid)
                        {
                            ViewBag.iParentID = _rec.iParentID;
                            ViewBag.sParentID = _rec.sParentID;



                            if (ViewBag.bAddNew == true)
                            {
                                #region
                                ViewBag.bError = false;
                                ViewBag.bAddNew = false;
                                ViewBag.bSaved = true;
                                ViewBag.sErrorMessage = "";
                                oSystem.OpenDataConnection();

                                DINT_WebSiteJobs dbInteraction = new DINT_WebSiteJobs(oSystem.cnCon);

                                _rec.sControl = Guid.NewGuid().ToString();
                                _rec.dtDateCreated = DateTime.Now;
                                _rec.dtDateUpdated = DateTime.Now;

                                dbInteraction.Insert_SQL(_rec);



                                oSystem.CloseDataConnection();
                                #endregion
                                return RedirectToAction("WebSiteJobs_Details", new { key = _rec.sControl, _UseParameterResults = true, _AddNew = false, _Saved = true });
                            }
                            else
                            {
                                if (_rec.ID > 0)
                                {
                                    #region
                                    ViewBag.bError = false;
                                    ViewBag.bAddNew = false;
                                    ViewBag.bSaved = true;
                                    ViewBag.sErrorMessage = "";
                                    oSystem.OpenDataConnection();


                                    DINT_WebSiteJobs dbInteraction = new DINT_WebSiteJobs(oSystem.cnCon);
                                    _rec.dtDateUpdated = DateTime.Now;

                                    dbInteraction.Update_SQL(_rec);

                                    oSystem.CloseDataConnection();
                                    #endregion
                                    return RedirectToAction("WebSiteJobs_Details", new { id = _rec.ID, _UseParameterResults = true, _AddNew = false, _Saved = true });
                                }
                                else
                                {
                                    ViewBag.bError = true;
                                    ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                                    oPage.DataModelsPrimary = _rec;
                                    oPage.DataModelsSub.Add(oSystem);
                                    oPage.AuthenticatedUser = true;
                                    oPage.PartialViewToLoad = _sViewToLoad;
                                    oSystem.CloseDataConnection();
                                    return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                                }
                            }
                        }
                        else
                        {
                            ViewBag.bError = true;
                            ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                            oPage.DataModelsPrimary = _rec;
                            oPage.DataModelsSub.Add(oSystem);
                            oPage.AuthenticatedUser = true;
                            oPage.PartialViewToLoad = _sViewToLoad;
                            oSystem.CloseDataConnection();
                            return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                        }
                    }
                    else
                    {
                        ViewBag.bError = true;
                        ViewBag.sErrorMessage = "Please fill out the form completely, before re-submitting it.";

                        oPage.DataModelsPrimary = _rec;
                        oPage.DataModelsSub.Add(oSystem);
                        oPage.AuthenticatedUser = true;
                        oPage.PartialViewToLoad = _sViewToLoad;
                        oSystem.CloseDataConnection();
                        return View(sModuleBase + "/Views/Screens/Index.cshtml", oPage);
                    }
                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }

        public ActionResult WebSiteJobs_Delete(int id)
        {
            Set_Client_NavSettings("WebSiteJobs");
            Set_ViewBag_Global_Defaults();
            Set_ViewBag_UserInfo_Defaults();
            if (oSystem.GetCurrentUser())
            {
                Set_ViewBag_Global();
                Set_ViewBag_UserInfo();
                if (oSystem.CheckScreenAccessRights(iAccessRolesAllowed))
                {

                    int iParentID = 0;
                    string sParentID = "";

                    #region if ParentID is less than or equal to zero see if it was included in the form
                    try
                    {
                        if (Request.Form["_iParentID"] != null)
                        {
                            try
                            {
                                iParentID = System.Convert.ToInt32(Request.Form["_iParentID"].ToString());
                                sParentID = Request.Form["_sParentID"].ToString();
                            }
                            catch
                            {
                            }
                        }
                    }
                    catch
                    {
                    }
                    #endregion

                    #region Process
                    ViewBag.bLoggedIn = true;
                    ViewBag.bAddNew = false;
                    if (id > 0)
                    {
                        oSystem.OpenDataConnection();

                        DINT_WebSiteJobs dbInteraction = new DINT_WebSiteJobs(oSystem.cnCon);

                        List<DataParameter> lstParameters = new List<DataParameter>();
                        DataParameter pParameter = new DataParameter("ID", id.ToString(), "int", 0, "ID", " = ", "");
                        lstParameters.Add(pParameter);

                        List<DEF_WebSiteJobs.RecordObject> dbSearch;
                        dbSearch = dbInteraction.Get(lstParameters);
                        if (dbSearch != null)
                        {
                            if (dbSearch.Count > 0)
                            {
                                DEF_WebSiteJobs.RecordObject recRecord = dbSearch[0];
                                if (recRecord != null)
                                {
                                    if (recRecord.ID == id)
                                    {

                                        ViewBag.iParentID = recRecord.iParentID;
                                        ViewBag.sParentID = recRecord.sParentID;
                                        iParentID = recRecord.iParentID;
                                        sParentID = recRecord.sParentID;


                                        dbInteraction.Delete_SQL(recRecord);
                                    }
                                }
                            }
                        }
                        oSystem.CloseDataConnection();

                        return RedirectToAction("WebSiteJobs_List", new { _iParentID = iParentID, _sParentID = sParentID });


                    }
                    else
                    {
                        oSystem.CloseDataConnection();
                        return RedirectToAction("WebSiteJobs_List", new { _iParentID = iParentID, _sParentID = sParentID });

                    }

                    #endregion
                }
                else
                {
                    oSystem.CloseDataConnection();
                    //User does not have access to this area of the system
                    return Redirect("~/");
                }
            }
            else
            {
                oSystem.CloseDataConnection();
                return RedirectToAction("Index");
            }
        }
        #endregion
        #endregion

    }
}
