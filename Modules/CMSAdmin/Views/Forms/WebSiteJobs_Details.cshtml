@model ACMSDBView.WebSiteJobsViewModel


<script type="text/javascript">


    function on_WebSiteJobs_iQuestID_Changed() {
        try {
            var cboControl = document.getElementById("WebSiteJobs_iQuestID");
            var selectedText = cboControl[cboControl.selectedIndex].text;

            var oHiddenField = document.getElementById("WebSiteJobs_sQuestID");
            oHiddenField.value = selectedText;


        }
        catch (e) {
            alert(e);
        }
    }

</script>   
                    






<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 border_bottom_solid_1x">
            @if (ViewBag.bAddNew)
            {
                 <h2>You are ready to create a new Job</h2>
            }
            else
            {
                 <h2>You are editing - @Model.WebSiteJobs.sTitle  </h2>
            }   
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            &nbsp;
        </div>
    </div>
    <div class="row">
       @if (ViewBag.bError == true)
       {
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 alert-danger">
                <p> @Html.Raw(ViewBag.sErrorMessage)</p>
            </div>
       }
       else if (ViewBag.bSaved == true)
       {               
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 alert-success">
                <p>Your request was processed successfully.</p>
            </div>
       }
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <<  @Html.ActionLink("Return List View", "WebSiteJobs_List", new { _iParentID = ViewBag.iParentID, _sParentID = ViewBag.sParentID })
        </div>
        
    </div>
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            &nbsp;
        </div>
    </div>
    <div class="row">
        <div class="col-lg-10 col-md-10 col-sm-12 col-xs-12 offset-lg-1 offset-md-1">
                @using (Html.BeginForm("WebSiteJobs_AddUpdate", "", FormMethod.Post))
                {                             
                
                          @Html.ValidationSummary(true);
                         @Html.HiddenFor(model => model.WebSiteJobs.ID)  
                         @Html.HiddenFor(model => model.WebSiteJobs.iParentID)  
                         @Html.HiddenFor(model => model.WebSiteJobs.sParentID)  
                         @Html.HiddenFor(model => model.WebSiteJobs.sControl)  
                         @Html.HiddenFor(model => model.WebSiteJobs.sSyncControl)  
                         @Html.HiddenFor(model => model.WebSiteJobs.dtDateCreated)  
                         @Html.HiddenFor(model => model.WebSiteJobs.dtDateUpdated)  
                         @Html.HiddenFor(model => model.WebSiteJobs.iCreatedByID)  
                         @Html.HiddenFor(model => model.WebSiteJobs.sCreatedByID)  
                         @Html.HiddenFor(model => model.WebSiteJobs.iUpdatedByID)  
                         @Html.HiddenFor(model => model.WebSiteJobs.sUpdatedByID) 
                         @Html.HiddenFor(model => model.WebSiteJobs.iFilledByID)  
                         @Html.HiddenFor(model => model.WebSiteJobs.sFilledByID)  
                         @Html.HiddenFor(model => model.WebSiteJobs.sFilledByThumbURL)  
                         @Html.HiddenFor(model => model.WebSiteJobs.sReview)  
                         @Html.HiddenFor(model => model.WebSiteJobs.sProgrammerReview)  
                         @Html.HiddenFor(model => model.WebSiteJobs.dPrice)  
                         @Html.HiddenFor(model => model.WebSiteJobs.dBudget)  
                         @Html.HiddenFor(model => model.WebSiteJobs.iEmployerID)  
                         @Html.HiddenFor(model => model.WebSiteJobs.sEmployerID)  
                         @Html.HiddenFor(model => model.WebSiteJobs.sEmployerThumbURL)  
                         @Html.HiddenFor(model => model.WebSiteJobs.dNumApplicants) 
                         @Html.HiddenFor(model => model.WebSiteJobs.iJobTypeID)  
                         @Html.HiddenFor(model => model.WebSiteJobs.sJobTypeID)


                    @Html.HiddenFor(model => model.WebSiteJobs.sQuestID)
                    @Html.HiddenFor(model => model.WebSiteJobs.sQuestAnswerArray)

                                        <fieldset> 
                                            <legend></legend>

                                            <div class="form-group">
                                                <label for="WebSiteJobs_sTitle">Title :</label>
                                                @Html.TextBoxFor(model => model.WebSiteJobs.sTitle, new { @Class = "form-control" })
                                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.WebSiteJobs.sTitle)</span>
                                            </div>

                                            <div class="form-group">
                                                <label for="WebSiteJobs_bOpen">Is Open :</label>
                                                @Html.CheckBoxFor(model => model.WebSiteJobs.bOpen, new { @Class = "form-control" })
                                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.WebSiteJobs.bOpen)</span>
                                            </div>

                                            <div class="form-group">
                                                <label for="WebSiteJobs_bJobFilled">Filled :</label>
                                                @Html.CheckBoxFor(model => model.WebSiteJobs.bJobFilled, new { @Class = "form-control checkbox-inline" })
                                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.WebSiteJobs.bJobFilled)</span>
                                            </div>

                                            <div class="form-group">
                                                <label for="WebSiteJobs_bJobFilled">Salary / Pay (range ok) :</label>
                                                @Html.TextBoxFor(model => model.WebSiteJobs.sSalary, new { @Class = "form-control" })
                                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.WebSiteJobs.sSalary)</span>
                                            </div>

                                            <div class="form-group">
                                                <label for="WebSiteJobs_sDeadLine">Deadline :</label>
                                                @Html.TextBoxFor(model => model.WebSiteJobs.sDeadLine, new { @Class = "form-control" })
                                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.WebSiteJobs.sDeadLine)</span>
                                            </div>

                                            <div class="form-group">
                                                <label for="WebSiteJobs_sJobLocation">Location :</label>
                                                @Html.TextBoxFor(model => model.WebSiteJobs.sJobLocation, new { @Class = "form-control" })
                                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.WebSiteJobs.sJobLocation)</span>
                                            </div>

                                            <div class="form-group">
                                                <label for="WebSiteJobs_sJobDescription">Description :</label>
                                                @Html.TextAreaFor(model => model.WebSiteJobs.sJobDescription, new { @Class = "form-control textarea_admin" })
                                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.WebSiteJobs.sJobDescription)</span>
                                            </div>

                                            <div class="form-group">
                                                <label for="WebSiteJobs_sSkillRequirements">Skills required (separate by ',') :</label>
                                                @Html.TextAreaFor(model => model.WebSiteJobs.sSkillRequirements, new { @Class = "form-control textarea_admin" })
                                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.WebSiteJobs.sSkillRequirements)</span>
                                            </div>


                                            <div class="form-group">
                                                <label for="WebSiteJobs_sSkillsNeeded">Skills good to have (separate by ',') :</label>
                                                @Html.TextAreaFor(model => model.WebSiteJobs.sSkillsNeeded, new { @Class = "form-control textarea_admin" })
                                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.WebSiteJobs.sSkillsNeeded)</span>
                                            </div>

                                            <div class="form-group">
                                                <label for="WebSiteJobs_iQuestID">Linked Questionair :</label>
                                                @Html.DropDownListFor(model => model.WebSiteJobs.iQuestID, Model.WebSiteQuestionair, new { @Class = "form-control", @onchange = "javascript:on_WebSiteJobs_iQuestID_Changed();" })
                                                @if (ViewBag.bError == true)
                                                {
                                                    @Html.ValidationMessageFor(model => model.WebSiteJobs.iQuestID, "*Required!")
                                                }
                                            </div>


                                            <div class="form-group">
                                                <label for="WebSiteJobs_bDisabled">Is disabled :</label>
                                                @Html.CheckBoxFor(model => model.WebSiteJobs.bDisabled, new { @Class = "form-control checkbox-inline" })
                                                @if (ViewBag.bError == true)
                                                {
                                                    @Html.ValidationMessageFor(model => model.WebSiteJobs.bDisabled, "*Required!")
                                                }
                                            </div>
                                            <div class="form-group">
                                                <label for="WebSiteJobs_bSuspended">Is suspended :</label>
                                                @Html.CheckBoxFor(model => model.WebSiteJobs.bSuspended, new { @Class = "form-control checkbox-inline" })
                                                @if (ViewBag.bError == true)
                                                {
                                                    @Html.ValidationMessageFor(model => model.WebSiteJobs.bSuspended, "*Required!")
                                                }
                                            </div>
                                            <div class="form-group">
                                                <label for="WebSiteJobs_bNegative">Is negative item :</label>
                                                @Html.CheckBoxFor(model => model.WebSiteJobs.bNegative, new { @Class = "form-control checkbox-inline" })
                                                @if (ViewBag.bError == true)
                                                {
                                                    @Html.ValidationMessageFor(model => model.WebSiteJobs.bNegative, "*Required!")
                                                }
                                            </div>
                                            <div class="form-group">
                                                <label for="WebSiteJobs_bHidden">Should be hidden :</label>
                                                @Html.CheckBoxFor(model => model.WebSiteJobs.bHidden, new { @Class = "form-control checkbox-inline" })
                                                @if (ViewBag.bError == true)
                                                {
                                                    @Html.ValidationMessageFor(model => model.WebSiteJobs.bHidden, "*Required!")
                                                }
                                            </div>

                                        </fieldset>
                                        <div class="form-group">
                                            <input type="submit" value="Save" name="submit" class="btn btn-block btn-outline-primary" />
                                        </div>
              } 
         </div>
    </div>
</div>





























