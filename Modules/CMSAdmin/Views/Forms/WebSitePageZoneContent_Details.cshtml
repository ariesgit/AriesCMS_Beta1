@model ACMSDBView.WebSitePageZoneContentViewModel


<script type="text/javascript">

    function GetTemplateZonesContent(_Id)
    {
        try
        {
            //alert("Got Here with ID: " + _Id);
            var procemessage = "<option value='0'> Please wait...</option>";
            $("#WebSitePageZoneContent_iContentZoneID").html(procemessage).show();
            var url = "@Url.Content("/admin/home/GetTemplatZonesContent/")";

            $.ajax({
                url: url,
                data: { _iTemplateZoneID: _Id },
                cache: false,
                type: "POST",
                success: function (data) {
                    var markup = "<option value='0'> </option>";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $("#WebSitePageZoneContent_iContentZoneID").html(markup).show();
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });

        }
        catch(e)
        {
            alert(e);
            $("#WebSitePageZoneContent_iContentZoneID").html("error").show();
        }
    }


    function on_WebSitePageZoneContent_iZoneID_Changed(_Id) {
        try {
            var cboControl = document.getElementById("WebSitePageZoneContent_iZoneID");
            var selectedText = cboControl[cboControl.selectedIndex].text;

            var oHiddenField = document.getElementById("WebSitePageZoneContent_sZoneID");
            oHiddenField.value = selectedText;

            GetTemplateZonesContent(_Id);
        }
        catch (e) {
            alert(e);
        }
    }




    function on_WebSitePageZoneContent_iContentZoneID_Changed() {
        try {
            var cboControl = document.getElementById("WebSitePageZoneContent_iContentZoneID");
            var selectedText = cboControl[cboControl.selectedIndex].text;

            var oHiddenField = document.getElementById("WebSitePageZoneContent_sContentZoneID");
            oHiddenField.value = selectedText;

        }
        catch (e) {
            alert(e);
        }
    }


    function ViewFileManager() {
        try {
            var myWindow = window.open(window.location.protocol + "//" + window.location.host + "/" + "admin/home/FilesManager_ListPop", "_blank", "toolbar=no, scrollbars=yes, resizable=yes, width=560, height=700, location=no,status=no,titlebar=no");
        }
        catch (e) {

        }
    }
    
    function SwitchToEditor()
    {

    tinymce.init({
        selector: 'textarea',
        force_br_newlines: false,
        force_p_newlines: false,
        forced_root_block: '',
        valid_elements: '*[*]',
        width: 650,
        height: 400,
        cleanup_on_startup: false,
        trim_span_elements: false,
        verify_html: false,
        cleanup: false,
        convert_urls: false,
        keep_styles: true,
        browser_spellcheck: true,
        plugins: ["advlist autolink lists link image charmap print preview anchor legacyoutput",
                "searchreplace visualblocks code fullscreen",
                "insertdatetime media table contextmenu paste moxiemanager"],
        toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | showfilemanager",
        setup: function (ed) {
            // Add a custom button

            ed.addButton('showfilemanager', {
                type: 'button',
                title: 'Files',
                text: 'Show Files',
                onclick: function () {
                    // Add you own code to execute something on click
                    ViewFileManager();
                }
            });
        }

    });
    }

</script>


<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 border_bottom_solid_1x">
            @if (ViewBag.bAddNew)
            {
                <h2>You are ready to create a new Page Zone Content</h2>
            }
            else
            {
                <h2>You are editing the content for - @Model.WebSitePageZoneContent.sZoneID</h2>
            }
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            &nbsp;
        </div>
    </div>
    <div class="row">

        @if (ViewBag.bError == true)
        {
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 alert-danger">
                <p>@Html.Raw(ViewBag.sErrorMessage)</p>
            </div>
        }
        else if (ViewBag.bSaved == true)
        {
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 alert-success">
                <p>Your request was processed successfully.</p>
            </div>
        }
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <p>@Html.ActionLink("Click here", "WebSitePageZoneContent_List", new { _iParentID = ViewBag.iParentID, _sParentID = ViewBag.sParentID }) to return to the list.</p>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            &nbsp;
        </div>
    </div>
    <div class="row">
        <div class="col-lg-10 col-md-10 col-sm-12 col-xs-12 offset-lg-1 offset-md-1 ">
            @using (Html.BeginForm("WebSitePageZoneContent_AddUpdate", "", FormMethod.Post))
            {
                @Html.ValidationSummary(true);

                @Html.HiddenFor(model => model.WebSitePageZoneContent.ID)
                @Html.HiddenFor(model => model.WebSitePageZoneContent.iParentID)
                @Html.HiddenFor(model => model.WebSitePageZoneContent.sParentID)
                @Html.HiddenFor(model => model.WebSitePageZoneContent.sControl)
                @Html.HiddenFor(model => model.WebSitePageZoneContent.dtDateCreated)
                @Html.HiddenFor(model => model.WebSitePageZoneContent.dtLastUpdated)
                @Html.HiddenFor(model => model.WebSitePageZoneContent.iCreatedByID)
                @Html.HiddenFor(model => model.WebSitePageZoneContent.sCreatedByID)
                @Html.HiddenFor(model => model.WebSitePageZoneContent.iUpdatedByID)
                @Html.HiddenFor(model => model.WebSitePageZoneContent.sUpdatedByID)
                @Html.HiddenFor(model => model.WebSitePageZoneContent.sZoneID)
                @Html.HiddenFor(model => model.WebSitePageZoneContent.sName)
                @Html.HiddenFor(model => model.WebSitePageZoneContent.sLoadIncludeURI)
                @Html.HiddenFor(model => model.WebSitePageZoneContent.bLoadPartialPage)

                @Html.HiddenFor(model => model.WebSitePageZoneContent.sContentZoneID)
                @Html.HiddenFor(model => model.WebSitePageZoneContent.sLanguageID)

                <fieldset>
                    <legend></legend>


                    <div class="form-group">
                        <label for="WebSitePageZoneContent_iZoneID">HTML Zone :</label>
                        @Html.DropDownListFor(model => model.WebSitePageZoneContent.iZoneID, Model.WebSitePageTemplateZones, new { @Class = "form-control", @onchange = "javascript:on_WebSitePageZoneContent_iZoneID_Changed(this.value);" })

                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.WebSitePageZoneContent.iZoneID, "*Required!")
                        }
                    </div>


                    <div class="form-group">
                        <label for="WebSitePageZoneContent_iContentZoneID">Content Zone :</label>
                        @Html.DropDownListFor(model => model.WebSitePageZoneContent.iContentZoneID, Model.WebSitePageTemplateZonesContent, new { @Class = "form-control", @onchange = "javascript:on_WebSitePageZoneContent.iContentZoneID_Changed();" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.WebSitePageZoneContent.iContentZoneID, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="WebSitePageZoneContent_sContent">Content :</label><a href="javascript:SwitchToEditor();"><img src="~/Themes/SymbolEdit.png" border="0" /> Switch to WYSIWYG</a>
                        @Html.TextAreaFor(model => model.WebSitePageZoneContent.sContent, new { @Class = "form-control" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.WebSitePageZoneContent.sContent, "*Required!")
                        }
                    </div>


                    <div class="form-group">
                        <label for="txt_sUserName">Language :</label>
                        @Html.DropDownListFor(model => model.WebSitePageZoneContent.iLanguageID, Model.Languages, new { @Class = "form-control" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.WebSitePageZoneContent.iLanguageID, "*Required!")
                        }
                    </div>


                </fieldset>
                <div class="form-group">
                    @if (ViewBag.bAddNew == true)
                    {
                        <input type="submit" value="Update" name="submit" class="btn btn-block btn-outline-primary" />
                    }
                    else
                    {
                        <input type="submit" value="Update" name="submit" class="btn btn-block btn-outline-primary" />
                    }
                </div>
            }
            
        </div>
    </div>
</div>

