@model AriesCMSDefinition.DEF_WebSitePageZoneContent_History.RecordObject



<script type="text/javascript">
    function GetTemplateZonesContent(_Id) {
        try {
            //alert("Got Here with ID: " + _Id);
            var procemessage = "<option value='0'> Please wait...</option>";
            $("#WebSitePageZoneContent_iContentZoneID").html(procemessage).show();
            var url = "@Url.Content("/admin/home/GetTemplatZonesContent/")";

            $.ajax({
                url: url,
                data: { _iTemplateZoneID: _Id },
                cache: false,
                type: "POST",
                success: function (data) {
                    var markup = "<option value='0'> </option>";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $("#WebSitePageZoneContent_iContentZoneID").html(markup).show();
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });

        }
        catch (e) {
            alert(e);
            $("#WebSitePageZoneContent_iContentZoneID").html("error").show();
        }
    }



    function on_WebSitePageZoneContent_iZoneID_Changed(_Id)
    {
        try
        {
            var cboControl = document.getElementById("WebSitePageZoneContent_iZoneID");
            var selectedText = cboControl[cboControl.selectedIndex].text;

            var oHiddenField = document.getElementById("WebSitePageZoneContent_sZoneID");
            oHiddenField.value = selectedText;

            GetTemplateZonesContent(_Id);
        }
        catch (e)
        {
            alert(e);
        }
    }




    function on_WebSitePageZoneContent_iContentZoneID_Changed()
    {
        try
        {
            var cboControl = document.getElementById("WebSitePageZoneContent_iContentZoneID");
            var selectedText = cboControl[cboControl.selectedIndex].text;

            var oHiddenField = document.getElementById("WebSitePageZoneContent_sContentZoneID");
            oHiddenField.value = selectedText;

        }
        catch (e)
        {
            alert(e);
        }
    }


    function ViewFileManager() {
        try {
            var myWindow = window.open(window.location.protocol + "//" + window.location.host + "/" + "admin/home/FilesManager_ListPop", "_blank", "toolbar=no, scrollbars=yes, resizable=yes, width=560, height=700, location=no,status=no,titlebar=no");
        }
        catch (e) {

        }
    }

    function SwitchToEditor()
    {
    tinymce.init({
        selector: 'textarea',
        force_br_newlines: false,
        force_p_newlines: false,
        forced_root_block: '',
        valid_elements: '*[*]',
        width: 650,
        height: 400,
        cleanup_on_startup: false,
        trim_span_elements: false,
        verify_html: false,
        cleanup: false,
        convert_urls: false,
        keep_styles: true,
        browser_spellcheck: true,
        plugins: ["advlist autolink lists link image charmap print preview anchor legacyoutput",
                "searchreplace visualblocks code fullscreen",
                "insertdatetime media table contextmenu paste moxiemanager"],
        menubar: "edit insert format table tools",
        toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | showfilemanager",
        setup: function (ed) {
            // Add a custom button

            ed.addButton('showfilemanager', {
                type: 'button',
                title: 'Files',
                text: 'Show Files',
                onclick: function () {
                    // Add you own code to execute something on click
                    ViewFileManager();
                }
            });
        }

    });
    }

</script>






<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 border_bottom_solid_1x">
            @if (ViewBag.bAddNew)
            {
                 <h2>You are ready to create a new Change History</h2>
            }
            else
            {
                 <h2>You are viewing - 
                   @Model.sName
                 </h2>
            }   
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            &nbsp;
        </div>
    </div>
    <div class="row">
       @if (ViewBag.bError == true)
       {
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 alert-danger">
                <p> @Html.Raw(ViewBag.sErrorMessage)</p>
            </div>
       }
       else if (ViewBag.bSaved == true)
       {               
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 alert-success">
                <p>Your request was processed successfully.</p>
            </div>
       }
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <<  @Html.ActionLink("Return List View", "WebSitePageZoneContent_History_List", new { _iParentID = ViewBag.iParentID, _sParentID = ViewBag.sParentID })
 
       
        </div>
        
    </div>
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            &nbsp;
        </div>
    </div>
    <div class="row">
        <div class="col-lg-10 col-md-10 col-sm-12 col-xs-12 offset-lg-1 offset-md-1">
@using (Html.BeginForm("WebSitePageZoneContent_History_Restore", "", FormMethod.Post))
                                   {                             
                                        @Html.ValidationSummary(true);
                         @Html.HiddenFor(model => model.ID)  
                         @Html.HiddenFor(model => model.iParentID)  
                         @Html.HiddenFor(model => model.sParentID)  
                         @Html.HiddenFor(model => model.sControl)  
                         @Html.HiddenFor(model => model.dtDateCreated)  
                         @Html.HiddenFor(model => model.dtLastUpdated)  
                         @Html.HiddenFor(model => model.iCreatedByID)  
                         @Html.HiddenFor(model => model.sCreatedByID)  
                         @Html.HiddenFor(model => model.iUpdatedByID)  
                         @Html.HiddenFor(model => model.sUpdatedByID)  
                         @Html.HiddenFor(model => model.iZoneID)  
                         @Html.HiddenFor(model => model.sZoneID)  
                         @Html.HiddenFor(model => model.sName)  
                         @Html.HiddenFor(model => model.sContent)  
                         @Html.HiddenFor(model => model.sLoadIncludeURI)  
                         @Html.HiddenFor(model => model.bLoadPartialPage)  
                         @Html.HiddenFor(model => model.iContentZoneID)  
                         @Html.HiddenFor(model => model.sContentZoneID)  
                         @Html.HiddenFor(model => model.iLanguageID)  
                         @Html.HiddenFor(model => model.sLanguageID)  
      
      
                                        <fieldset> 
                                            <legend></legend>



                                            <div class="form-group">
                                                <label for="dtDateCreated">Date :</label>
                                                @Html.TextBoxFor(model => model.dtDateCreated, new { @Class = "form-control", @radonly = "readonly" })
                                            </div>

                                            <div class="form-group">
                                                <label for="sZoneID">HTML Zone :</label>
                                                @Html.TextBoxFor(model => model.sZoneID, new { @Class = "form-control", @radonly = "readonly" })
                                                
                                            </div>

                                            <div class="form-group">
                                                <label for="sContentZoneID"> Content Zone :</label>
                                                @Html.TextBoxFor(model => model.sContentZoneID, new { @Class = "form-control", @radonly = "readonly" })
                                            </div>

                                            <div class="form-group">
                                                <label for="sContent">Content :</label>
                                                @Html.TextAreaFor(model => model.sContent, new { @Class = "form-control textarea_admin", @radonly = "readonly" })
                                            </div>

                                            <div class="form-group">
                                                <label for="bLoadPartialPage">Use Partial Page :</label>
                                                @Html.CheckBoxFor(model => model.bLoadPartialPage, new { @Class = "form-control checkbox-inline", @radonly = "readonly" })
                                            </div>

                                            <div class="form-group">
                                                <label for="sLoadIncludeURI">Partial view :</label>
                                                @Html.TextBoxFor(model => model.sLoadIncludeURI, new { @Class = "form-control", @radonly = "readonly" })
                                            </div>

                                            <div class="form-group">
                                                <label for="iLanguageID">Language :</label>
                                                @Html.TextBoxFor(model => model.iLanguageID, new { @Class = "form-control", @radonly = "readonly" })
                                            </div>



                                        </fieldset>
                                        <div class="form-group">
                                            <input type="submit" value="Restore" name="submit" class="btn btn-block btn-outline-primary" />
                                        </div>
                                   } 
         </div>
    </div>
</div>





























