@model ACMSDBView.WebSiteBlogEntryViewModel



 
<script>


    function on_WebSiteBlogEntry_iQuestID_Changed() {
        try {
            var cboControl = document.getElementById("WebSiteBlogEntry_iQuestID");
            var selectedText = cboControl[cboControl.selectedIndex].text;

            var oHiddenField = document.getElementById("WebSiteBlogEntry_sQuestID");
            oHiddenField.value = selectedText;


        }
        catch (e) {
            alert(e);
        }
    }

    function ViewFileManager() {
        try {
            var myWindow = window.open(window.location.protocol + "//" + window.location.host + "/" + "admin/home/FilesManager_ListPop", "_blank", "toolbar=no, scrollbars=yes, resizable=yes, width=560, height=700, location=no,status=no,titlebar=no");
        }
        catch (e) {

        }
    }

    function SwitchToEditor()
    {


    tinymce.init({
        selector: 'textarea',
        force_br_newlines: false,
        force_p_newlines: false,
        forced_root_block: '',
        valid_elements: '*[*]',
        width: 650,
        height: 400,
        cleanup_on_startup: false,
        trim_span_elements: false,
        verify_html: false,
        cleanup: false,
        convert_urls: false,
        keep_styles: true,
        browser_spellcheck: true,
        plugins: ["advlist autolink lists link image charmap print preview anchor legacyoutput",
                "searchreplace visualblocks code fullscreen",
                "insertdatetime media table contextmenu paste moxiemanager"],
        menubar: "edit insert format table tools",
        toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | showfilemanager",
        setup: function (ed) {
            // Add a custom button

            ed.addButton('showfilemanager', {
                type: 'button',
                title: 'Files',
                text: 'Show Files',
                onclick: function () {
                    // Add you own code to execute something on click
                    ViewFileManager();
                }
            });
        }

    });
    }

</script>


<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 border_bottom_solid_1x">
            @if (ViewBag.bAddNew)
            {
                <h2>You are ready to create a new Blog Entry</h2>
            }
            else
            {
                <h2>You are editing - @Model.WebSiteBlogEntry.sSubject</h2>
            }
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            &nbsp;
        </div>
    </div>
    <div class="row">
        @if (ViewBag.bError == true)
        {
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 alert-danger">
                <p>@Html.Raw(ViewBag.sErrorMessage)</p>
            </div>
        }
        else if (ViewBag.bSaved == true)
        {
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 alert-success">
                <p>Your request was processed successfully.</p>
            </div>
        }
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <p>@Html.ActionLink("Click here", "WebSiteBlogEntry_List", new { _iParentID = ViewBag.iParentID, _sParentID = ViewBag.sParentID }) to return to the list.</p>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            &nbsp;
        </div>
    </div>
    <div class="row">
        <div class="col-lg-10 col-md-10 col-sm-12 col-xs-12 offset-lg-1 offset-md-1 ">

            @using (Html.BeginForm("WebSiteBlogEntry_AddUpdate", "", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.ValidationSummary(true);

                @Html.HiddenFor(model => model.WebSiteBlogEntry.ID)
                @Html.HiddenFor(model => model.WebSiteBlogEntry.iParentID)
                @Html.HiddenFor(model => model.WebSiteBlogEntry.sParentID)
                @Html.HiddenFor(model => model.WebSiteBlogEntry.sControl)
                @Html.HiddenFor(model => model.WebSiteBlogEntry.dtDateCreated)
                @Html.HiddenFor(model => model.WebSiteBlogEntry.dtLastUpdated)
                @Html.HiddenFor(model => model.WebSiteBlogEntry.iCreatedByID)
                @Html.HiddenFor(model => model.WebSiteBlogEntry.sCreatedByID)
                @Html.HiddenFor(model => model.WebSiteBlogEntry.iUpdatedByID)
                @Html.HiddenFor(model => model.WebSiteBlogEntry.sUpdatedByID)
                @Html.HiddenFor(model => model.WebSiteBlogEntry.sImageURL)


                @Html.HiddenFor(model => model.WebSiteBlogEntry.sQuestID)
                @Html.HiddenFor(model => model.WebSiteBlogEntry.sQuestAnswerArray)
                <fieldset>
                    <legend></legend>
                    
                    <div class="form-group">
                        <label for="WebSiteBlogEntry_sTitle">Title :</label>
                        @Html.TextBoxFor(model => model.WebSiteBlogEntry.sTitle, new { @Class = "form-control" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.WebSiteBlogEntry.sTitle, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="WebSiteBlogEntry_dtStart">Live on (optional)  :</label>
                        @Html.TextBoxFor(model => model.WebSiteBlogEntry.dtStart, new { @Class = "form-control" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.WebSiteBlogEntry.dtStart, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="WebSiteBlogEntry_dtEnd">Hidden as of (optional) :</label>
                        @Html.TextBoxFor(model => model.WebSiteBlogEntry.dtEnd, new { @Class = "form-control" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.WebSiteBlogEntry.dtEnd, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="WebSiteBlogEntry_sSubject">Subject :</label>
                        @Html.TextBoxFor(model => model.WebSiteBlogEntry.sSubject, new { @Class = "form-control" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.WebSiteBlogEntry.sSubject, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="WebSiteBlogEntry_sImageURL">Image URL  :</label>
                    </div>
                    <div class="form-group">
                        <img src="~/@Model.WebSiteBlogEntry.sImageURL" alt="" class="img-fluid" />
                    </div>
                    <div class="form-group">
                        <input type="file" name="UploadFiles1" id="UploadFiles1" class="form-control" />
                    </div>

                    <div class="form-group">
                        <label for="WebSiteBlogEntry_sKeyWords">Key words :</label>
                        @Html.TextAreaFor(model => model.WebSiteBlogEntry.sKeyWords, new { @Class = "form-control" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.WebSiteBlogEntry.sKeyWords, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="WebSiteBlogEntry_sContent"> Content :</label><a href="javascript:SwitchToEditor();"><img src="~/Themes/SymbolEdit.png" border="0" /> Switch to WYSIWYG</a>
                        @Html.TextAreaFor(model => model.WebSiteBlogEntry.sContent, new { @Class = "form-control textarea_admin" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.WebSiteBlogEntry.sContent, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="WebSiteBlogEntry_bOpenToComments">Open to comments :</label>
                        @Html.CheckBoxFor(model => model.WebSiteBlogEntry.bOpenToComments, new { @Class = "form-control checkbox-inline" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.WebSiteBlogEntry.bOpenToComments, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="WebSiteBlogEntry_bMustBeLoggedInToComment">Log in required to comment :</label>
                        @Html.CheckBoxFor(model => model.WebSiteBlogEntry.bMustBeLoggedInToComment, new { @Class = "form-control checkbox-inline" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.WebSiteBlogEntry.bMustBeLoggedInToComment, "*Required!")
                        }
                    </div>



                    <div class="form-group">
                        <label for="WebSiteBlogEntry_iQuestID">Linked Questionair :</label>
                        @Html.DropDownListFor(model => model.WebSiteBlogEntry.iQuestID, Model.WebSiteQuestionair, new { @Class = "form-control", @onchange = "javascript:on_WebSiteBlogEntry_iQuestID_Changed();" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.WebSiteBlogEntry.iQuestID, "*Required!")
                        }
                    </div>



                    <div class="form-group">
                        <label for="WebSiteBlogEntry_bIsLive">Is live :</label>
                        @Html.CheckBoxFor(model => model.WebSiteBlogEntry.bIsLive, new { @Class = "form-control checkbox-inline" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.WebSiteBlogEntry.bIsLive, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="WebSiteBlogEntry_bArchived">Archive :</label>
                        @Html.CheckBoxFor(model => model.WebSiteBlogEntry.bArchived, new { @Class = "form-control checkbox-inline" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.WebSiteBlogEntry.bArchived, "*Required!")
                        }
                    </div>

                </fieldset>
                <div class="form-group">
                    @if (ViewBag.bAddNew == true)
                    {
                        <input type="submit" value="Update" name="submit" class="btn btn-block btn-outline-primary" />
                    }
                    else
                    {
                        <input type="submit" value="Update" name="submit" class="btn btn-block btn-outline-primary" />
                    }
                </div>
            }
        </div>
    </div>
</div>




<script type="text/javascript">
    try {


        $(document).ready(function () {

            $('#dtStart').datetimepicker();
            $('#dtEnd').datetimepicker();

        });

    }
    catch (e) {
        //alert(e);
    }
</script>
