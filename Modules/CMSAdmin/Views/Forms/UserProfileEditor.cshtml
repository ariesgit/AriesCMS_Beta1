@model ACMSDBView.UserViewModel

<script type="text/javascript">


    function on_User_iPrimaryRole_Changed()
    {
        try
        {
            var cboControl = document.getElementById("User_iPrimaryRole");
            var selectedText = cboControl[cboControl.selectedIndex].text;
            
            var oHiddenField = document.getElementById("User_sPrimaryRole");
            oHiddenField.value = selectedText;

        }
        catch (e) {
            alert(e);
        }
    }

    function on_User_iStateID_Changed() {
        try {
            var cboControl = document.getElementById("User_iStateID");
            var selectedText = cboControl[cboControl.selectedIndex].text;

            var oHiddenField = document.getElementById("User_sStateID");
            oHiddenField.value = selectedText;

        }
        catch (e) {
            alert(e);
        }
    }

    function on_User_iBillStateID_Changed() {
        try {
            var cboControl = document.getElementById("User_iBillStateID");
            var selectedText = cboControl[cboControl.selectedIndex].text;

            var oHiddenField = document.getElementById("User_sBillStateID");
            oHiddenField.value = selectedText;

        }
        catch (e) {
            alert(e);
        }
    }


    function on_User_iMemberShipID_Changed() {
        try {
            var cboControl = document.getElementById("User_iMemberShipID");
            var selectedText = cboControl[cboControl.selectedIndex].text;

            var oHiddenField = document.getElementById("User_sMemberShipID");
            oHiddenField.value = selectedText;

        }
        catch (e) {
            alert(e);
        }
    }
  
</script> 



<div class="col-lg-10 col-md-10 col-xs-10">
    <div class="row">
        <div class="col-lg-12 col-md-12 col-xs-12 alert-info">
            <h2>@Model.User.sFName @Model.User.sLName you are editing your profile</h2>
        </div>
    </div>
    <div class="row">
        @if (ViewBag.bError == true)
        {
            <div class="col-lg-12 col-md-12 col-xs-12 alert-danger">
                <p>@Html.Raw(ViewBag.sErrorMessage)</p>
            </div>
        }
        else if (ViewBag.bSaved == true)
        {
            <div class="col-lg-12 col-md-12 col-xs-12 alert-success">
                <p>Your request was processed successfully.</p>
            </div>
        }
    </div>
    <div class="row">
        <div class="col-lg-10 col-md-10 col-xs-12 offset-lg-1 offset-md-1 ">

            @using (Html.BeginForm("ProfileUpdate", "", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.ValidationSummary(true);

                @Html.HiddenFor(model => model.User.ID)
                @Html.HiddenFor(model => model.User.iParentID)
                @Html.HiddenFor(model => model.User.sParentID)
                @Html.HiddenFor(model => model.User.sControl)
                @Html.HiddenFor(model => model.User.dtDateCreated)
                @Html.HiddenFor(model => model.User.dtLastUpdated)
                @Html.HiddenFor(model => model.User.iCreatedByID)
                @Html.HiddenFor(model => model.User.sCreatedByID)
                @Html.HiddenFor(model => model.User.iUpdatedByID)
                @Html.HiddenFor(model => model.User.sUpdatedByID)
                @Html.HiddenFor(model => model.User.sPrefix)
                @Html.HiddenFor(model => model.User.sMName)
                @Html.HiddenFor(model => model.User.sPrimaryRole)
                @Html.HiddenFor(model => model.User.sAvitarImgURL)
                @Html.HiddenFor(model => model.User.bCurrentlyLoggedIn)
                @Html.HiddenFor(model => model.User.iReputationLevel)
                @Html.HiddenFor(model => model.User.sKeyWords)
                @Html.HiddenFor(model => model.User.sProfileDiscription)
                @Html.HiddenFor(model => model.User.iGenderTypeID)
                @Html.HiddenFor(model => model.User.sGenderTypeID)
                @Html.HiddenFor(model => model.User.bPrivateProfile)
                @Html.HiddenFor(model => model.User.dtLastLoggedIn)
                @Html.HiddenFor(model => model.User.sAddress3)
                @Html.HiddenFor(model => model.User.sStateID)
                @Html.HiddenFor(model => model.User.sCountryID)
                @Html.HiddenFor(model => model.User.sBillAddress3)
                @Html.HiddenFor(model => model.User.sBillStateID)
                @Html.HiddenFor(model => model.User.sBillCountryID)
                @Html.HiddenFor(model => model.User.iCountryID)
                @Html.HiddenFor(model => model.User.iBillCountryID)

                @Html.HiddenFor(model => model.CurrentPassword)
            
                @Html.HiddenFor(model => model.User.bAccLocked)
                @Html.HiddenFor(model => model.User.iPrimaryRole)
                @Html.HiddenFor(model => model.User.sActivationKey)
                @Html.HiddenFor(model => model.User.bAccountActivated)
                @Html.HiddenFor(model => model.User.sMemberShipID)


                <fieldset>
                    <legend></legend>

                    <div class="form-group">
                        <h4> Access Credentials</h4>
                    </div>

                    <div class="form-group">
                        <label for="User_sAccessKey">Access key :</label>
                        @Html.TextBoxFor(model => model.User.sAccessKey, new { @Class = "form-control", @readonly = "readonly" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.User.sAccessKey, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="User_sUserName">User name :</label>
                        @Html.TextBoxFor(model => model.User.sUserName, new { @Class = "form-control" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.User.sUserName, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="User_sPassword"> Password :</label>
                        @Html.PasswordFor(model => model.User.sPassword, new { @Class = "form-control" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.User.sPassword, "*Required!")
                        }
                    </div>

                    
                    <div class="form-group">
                        <label for="User_iPrimaryRole"> Primary security role :</label>
                        @Html.DisplayFor(model => model.User.sPrimaryRole)
                    </div>


                    <div class="form-group">
                        <h4>User Identity</h4>
                    </div>

                    <div class="form-group">
                        <label for="User_sFName"> First name :</label>
                        @Html.TextBoxFor(model => model.User.sFName, new { @Class = "form-control" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.User.sFName, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="User_sLName">Last name :</label>
                        @Html.TextBoxFor(model => model.User.sLName, new { @Class = "form-control" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.User.sLName, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="User_sScreenName"> Screen name :</label>
                        @Html.TextBoxFor(model => model.User.sScreenName, new { @Class = "form-control" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.User.sScreenName, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="User_dtDateOfBirth"> Date of birth :</label>
                        @Html.TextBoxFor(model => model.User.dtDateOfBirth, new { @Class = "form-control" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.User.dtDateOfBirth, "*Required!")
                        }
                    </div>


                    <div class="form-group">
                        <label for="User_sAvitarImgURL">Avitar :</label>
                    </div>
                    <div class="form-group">
                        <img src="@Model.User.sAvitarImgURL" alt="" class="img-fluid" />
                    </div>
                    <div class="form-group">
                        <input type="file" name="UploadFiles1" id="UploadFiles1" class="form-control" />
                    </div>



                    <div class="form-group">
                        <h4>Contact Information</h4>
                    </div>


                    <div class="form-group">
                        <label for="User_sPrimaryEMail"> E-mail :</label>
                        @Html.TextBoxFor(model => model.User.sPrimaryEMail, new { @Class = "form-control" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.User.sPrimaryEMail, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="User_sPrimaryPhone">Phone :</label>
                        @Html.TextBoxFor(model => model.User.sPrimaryPhone, new { @Class = "form-control" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.User.sPrimaryPhone, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="User_bOptInMarketing">Opt. out of marketing :</label>
                        @Html.CheckBoxFor(model => model.User.bOptInMarketing, new { @Class = "form-control checkbox-inline" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.User.bOptInMarketing, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                       <h4>Address</h4>
                    </div>

                    <div class="form-group">
                        <label for="User_sAddress1">Address line 1 :</label>
                        @Html.TextBoxFor(model => model.User.sAddress1, new { @Class = "form-control" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.User.sAddress1, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="User_sAddress2">Address line 2 :</label>
                        @Html.TextBoxFor(model => model.User.sAddress2, new { @Class = "form-control" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.User.sAddress2, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="User_sCity">City :</label>
                        @Html.TextBoxFor(model => model.User.sCity, new { @Class = "form-control" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.User.sCity, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="User_iStateID">State :</label>
                        @Html.DropDownListFor(model => model.User.iStateID, Model.States, new { @Class = "form-control", @onchange = "javascript:on_User_iStateID_Changed();" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.User.iStateID, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="User_sPostalCode">Postal code :</label>
                        @Html.TextBoxFor(model => model.User.sPostalCode, new { @Class = "form-control" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.User.sPostalCode, "*Required!")
                        }
                    </div>


                    <div class="form-group">
                        <h4>Billing Address</h4>
                    </div>

                    <div class="form-group">
                        <label for="User_sBillAddress1">Billing Address 1 :</label>
                        @Html.TextBoxFor(model => model.User.sBillAddress1, new { @Class = "form-control" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.User.sBillAddress1, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="User_sBillAddress2"> Billing Address 2 :</label>
                        @Html.TextBoxFor(model => model.User.sBillAddress2, new { @Class = "form-control" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.User.sBillAddress2, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="User_sBillCity">Billing city :</label>
                        @Html.TextBoxFor(model => model.User.sBillCity, new { @Class = "form-control" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.User.sBillCity, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="User_iBillStateID">Billing state :</label>
                        @Html.DropDownListFor(model => model.User.iBillStateID, Model.States, new { @Class = "form-control", @onchange = "javascript:on_User_iBillStateID_Changed();" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.User.iBillStateID, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="User_sBillPostalCode">Billing postal code :</label>
                        @Html.TextBoxFor(model => model.User.sBillPostalCode, new { @Class = "form-control" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.User.sBillPostalCode, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <h4>Billing Info</h4>
                    </div>
                    
                    <div class="form-group">
                        <label for="User_sCN">Credit card no.:</label>
                        @Html.TextBoxFor(model => model.User.sCN, new { @Class = "form-control" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.User.sCN, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="User_sCExp">Exp. date :</label>
                        @Html.TextBoxFor(model => model.User.sCExp, new { @Class = "form-control" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.User.sCExp, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="User_sCCVV">CVV :</label>
                        @Html.TextBoxFor(model => model.User.sCCVV, new { @Class = "form-control" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.User.sCCVV, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <h4>Membership Info</h4>
                    </div>

                    <div class="form-group">
                        <label for="User_iMemberShipID">Membership :</label>
                        @Html.DropDownListFor(model => model.User.iMemberShipID, Model.WebSiteMemberShips, new { @Class = "form-control", @onchange = "javascript:on_User_iMemberShipID_Changed();" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.User.iMemberShipID, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="User_dtMembershipExpOn">Membership exp. on :</label>
                        @Html.TextBoxFor(model => model.User.dtMembershipExpOn, new { @Class = "form-control", @readonly = "readonly" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.User.dtMembershipExpOn, "*Required!")
                        }
                    </div>

                    <div class="form-group">
                        <label for="User_bMembershipInActive">Membership disabled :</label>
                        @Html.CheckBoxFor(model => model.User.bMembershipInActive, new { @Class = "form-control checkbox-inline" })
                        @if (ViewBag.bError == true)
                        {
                            @Html.ValidationMessageFor(model => model.User.bMembershipInActive, "*Required!")
                        }
                    </div>
                   

                </fieldset>
                <div class="form-group">
                    <input type="submit" value="Update" name="submit" class="btn btn-block btn-outline-primary" />
                </div>
            }
            
        </div>
    </div>
</div>

