@model AriesCMS.Models.UserBillingInfo


<script type="text/javascript">


    function on_AddressInfo_StateID_Changed()
    {
        try
        {
            var cboControl = document.getElementById("AddressInfo_StateID");
            var selectedText = cboControl[cboControl.selectedIndex].text;

            var oHiddenField = document.getElementById("AddressInfo_State");
            oHiddenField.value = selectedText;

        }
        catch (e) {
            alert(e);
        }
    }
    
</script>




<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 border_bottom_solid_1x">

            <h2>Manual Payment Processing</h2>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            &nbsp;
        </div>
    </div>

    <div class="row">
        @if (ViewBag.bError == true)
        {
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 alert-danger">
                <p>@Html.Raw(ViewBag.ErrorMessage)</p>
            </div>
        }
        else if (ViewBag.bGoodCharge == true)
        {
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 alert-success">
                <p>Your request was processed successfully.</p>
            </div>
        }
    </div>
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            &nbsp;
        </div>
    </div>

    <div class="row">
        <div class="col-lg-10 col-md-10 col-sm-12 col-xs-12 offset-lg-1 offset-md-1 ">

            @using (Html.BeginForm("ProcessPaymentPost", "", FormMethod.Post))
            {
                @Html.ValidationSummary(true);

                @Html.HiddenFor(model => model.FullName)
                @Html.HiddenFor(model => model.CreditCardExpDate)
                @Html.HiddenFor(model => model.OptingInMail)
                @Html.HiddenFor(model => model.Fax)
                @Html.HiddenFor(model => model.CellPhone)
                @Html.HiddenFor(model => model.ChargeAmount2)
                @Html.HiddenFor(model => model.ChargeAmount3)
                @Html.HiddenFor(model => model.AddressInfo.State)


                <fieldset>
                    <legend></legend>

                    <div class="form-group">
                        <label for="ChargeAmount">Charge amount :</label>
                        @Html.TextBoxFor(model => model.ChargeAmount, new { @Class = "form-control" })
                        <span class="alert-danger">@Html.ValidationMessageFor(model => model.ChargeAmount)</span>
                    </div>

                    <div class="form-group">
                        <label for="FirstName">First name :</label>
                                                @Html.TextBoxFor(model => model.FirstName, new { @Class = "form-control" })
                                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.FirstName)</span>
                    </div>

                    <div class="form-group">
                        <label for="LastName">Last name :</label>
                                                @Html.TextBoxFor(model => model.LastName, new { @Class = "form-control" })
                                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.LastName)</span>
                    </div>

                    <div class="form-group">
                        <label for="CreditCardNumber">Card no. :</label>
                                                @Html.TextBoxFor(model => model.CreditCardNumber, new { @Class = "form-control" })
                                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.CreditCardNumber)</span>
                    </div>

                    <div class="form-group">
                        <label for="CreditCardCVV"> CVV :</label>
                                                @Html.TextBoxFor(model => model.CreditCardCVV, new { @Class = "form-control" })
                                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.CreditCardCVV)</span>
                    </div>

                    <div class="form-group">
                        <label for="CreditCardExpDateMonth">Exp. Month :</label>
                        @Html.DropDownListFor(model => model.CreditCardExpDateMonth, Model.ExpMonth, new { @Class = "form-control" })
                        <span class="alert-danger">@Html.ValidationMessageFor(model => model.CreditCardExpDateMonth)</span>
                    </div>

                    <div class="form-group">
                        <label for="CreditCardExpDateYear">Exp. Year :</label>
                        @Html.DropDownListFor(model => model.CreditCardExpDateYear, Model.ExpYear, new { @Class = "form-control" })
                        <span class="alert-danger">@Html.ValidationMessageFor(model => model.CreditCardExpDateYear)</span>
                    </div>

                    <div class="form-group">
                        <label for="EMail">E-Mail :</label>
                        @Html.TextBoxFor(model => model.EMail, new { @Class = "form-control" })
                        <span class="alert-danger">@Html.ValidationMessageFor(model => model.EMail)</span>
                    </div>

                    <div class="form-group">
                        <label for="Phone">Phone :</label>
                        @Html.TextBoxFor(model => model.Phone, new { @Class = "form-control" })
                        <span class="alert-danger">@Html.ValidationMessageFor(model => model.Phone)</span>
                    </div>

                    <div class="form-group">
                        <label for="AddressInfo_AddressLine1">Address :</label>
                        @Html.TextBoxFor(model => model.AddressInfo.AddressLine1, new { @Class = "form-control" })
                        <span class="alert-danger">@Html.ValidationMessageFor(model => model.AddressInfo.AddressLine1)</span>
                    </div>

                    <div class="form-group">
                        <label for="AddressInfo_City">City :</label>
                        @Html.TextBoxFor(model => model.AddressInfo.City, new { @Class = "form-control" })
                        <span class="alert-danger">@Html.ValidationMessageFor(model => model.AddressInfo.City)</span>
                    </div>

                    <div class="form-group">
                        <label for="AddressInfo_StateID">State :</label>
                        @Html.DropDownListFor(model => model.AddressInfo.StateID, Model.AddressInfo.States, new { @Class = "form-control", @onchange = "javascript:on_AddressInfo_StateID_Changed();" })
                        <span class="alert-danger">@Html.ValidationMessageFor(model => model.AddressInfo.StateID)</span>
                    </div>

                    <div class="form-group">
                        <label for="AddressInfo_PostalCode">Postal code :</label>
                        @Html.TextBoxFor(model => model.AddressInfo.PostalCode, new { @Class = "form-control" })
                        <span class="alert-danger">@Html.ValidationMessageFor(model => model.AddressInfo.PostalCode)</span>
                    </div>


                </fieldset>
                <div class="form-group">
                    <input type="submit" value="Process Payment" name="submit" class="btn btn-block btn-outline-primary" />
                </div>
            }

        </div>
    </div>
</div>
