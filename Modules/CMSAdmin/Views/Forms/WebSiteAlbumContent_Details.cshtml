@model ACMSDBView.WebSiteAlbumContentViewModel


<script type="text/javascript">
    

    function on_Select_WebSiteAlbumContent_iContentTypeID_Changed() {
        try {
            var cboControl = document.getElementById("WebSiteAlbumContent_iContentTypeID");
            var selectedText = cboControl[cboControl.selectedIndex].text;

            var oHiddenField = document.getElementById("WebSiteAlbumContent_sContentTypeID");
            oHiddenField.value = selectedText;
            
        }
        catch (e) {
            alert(e);
        }
    }

}

</script>   
                    






<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 border_bottom_solid_1x">
            @if (ViewBag.bAddNew)
            {
                 <h2>You are ready to create a new New Content</h2>
            }
            else
            {
                 <h2>You are editing - 
                   @Model.WebSiteAlbumContent.sName;
                 </h2>
            }   
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            &nbsp;
        </div>
    </div>
    <div class="row">
       @if (ViewBag.bError == true)
       {
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 alert-danger">
                <p> @Html.Raw(ViewBag.sErrorMessage)</p>
            </div>
       }
       else if (ViewBag.bSaved == true)
       {               
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 alert-success">
                <p>Your request was processed successfully.</p>
            </div>
       }
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <<  @Html.ActionLink("Return List View", "WebSiteAlbumContent_List", new { _iParentID = ViewBag.iParentID, _sParentID = ViewBag.sParentID })
 
       
        </div>
        
    </div>
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            &nbsp;
        </div>
    </div>
    <div class="row">
        <div class="col-lg-10 col-md-10 col-sm-12 col-xs-12 offset-lg-1 offset-md-1">
@using (Html.BeginForm("WebSiteAlbumContent_AddUpdate", "", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
                                        @Html.ValidationSummary(true);
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.ID)  
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.iParentID)  
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.sParentID)  
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.sControl)  
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.dtDateCreated)  
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.dtLastUpdated)  
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.iCreatedByID)  
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.sCreatedByID)  
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.iUpdatedByID)  
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.sUpdatedByID)  
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.iQuestID)  
                        
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.sDescription)  
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.sQuestID)  
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.dtLastView)  
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.sTags)  
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.dtLastAnswer)  
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.sSubject)  
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.sAnswer)  
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.sThumbNail)  
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.dScore)  
    
                       
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.sContentTypeID)  
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.dViews)  
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.dVotes)  
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.sUserThumbNail)  
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.iUserID)  
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.sUserID)  
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.sUserScreenName)  
                         @Html.HiddenFor(model => model.WebSiteAlbumContent.sOther)

    @Html.HiddenFor(model => model.WebSiteAlbumContent.dtDateOfPhoto)


                                        <fieldset> 
                                            <legend></legend>

                                            <div class="form-group">
                                                <label for="WebSiteAlbumContent_sName">Name :</label>
                                                @Html.TextBoxFor(model => model.WebSiteAlbumContent.sName, new { @Class = "form-control" })
                                            </div>

                                            <div class="form-group">
                                                <label for="WebSiteAlbumContent_iContentTypeID">Type :</label>
                                                @Html.DropDownListFor(model => model.WebSiteAlbumContent.iContentTypeID, Model.ContentType, new { @Class = "form-control", @onchange = "javascript:on_Select_WebSiteAlbumContent_iContentTypeID_Changed();" })
                                            </div>


                                            <div class="form-group">
                                                <label for="WebSiteAlbumContent_sContent">Content :</label>
                                            </div>
                                            <div class="form-group">
                                                <img src="~/@Model.WebSiteAlbumContent.sContent" alt="" class="img-fluid" />
                                            </div>
                                            <div class="form-group">
                                                <input type="file" name="UploadFiles1" id="UploadFiles1" class="form-control" />
                                            </div>
                                            <div class="form-group">
                                                <label for="bHidden">Hide :</label>
                                                @Html.CheckBoxFor(model => model.bHidden, new { @Class = "form-control checkbox-inline" })
                                                @if (ViewBag.bError == true)
                                                {
                                                    @Html.ValidationMessageFor(model => model.bHidden, "*Required!")
                                                }
                                            </div>


                                        </fieldset>
                                        <div class="form-group">
                                           @if (ViewBag.bAddNew == true)
                                           {
                                                <input type="submit" value="Save" name="submit" class="btn btn-block btn-outline-primary" />
                                           }
                                           else
                                           {
                                                <input type="submit" value="Save" name="submit" class="btn btn-block btn-outline-primary" />
                                           }
                                        </div>
                                   } 
         </div>
    </div>
</div>





























