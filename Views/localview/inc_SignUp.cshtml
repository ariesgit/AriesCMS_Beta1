@model AriesCMS.Helpers.SiteCoreHelper



<script type="text/javascript">

    function on_SignUp_NewUserFormData_SexID_Changed() {
        try {
            var cboControl = document.getElementById("NewUserFormData_SexID");
            var selectedText = cboControl[cboControl.selectedIndex].text;

            var oHiddenField = document.getElementById("NewUserFormData_Sex");
            oHiddenField.value = selectedText;

        }
        catch (e) {
            alert(e);
        }
    }

    function on_SignUp_NewUserFormData_Company_AddressInfo_StateID_Changed() {
        try {
            var cboControl = document.getElementById("NewUserFormData_Company_AddressInfo_StateID");
            var selectedText = cboControl[cboControl.selectedIndex].text;

            var oHiddenField = document.getElementById("NewUserFormData_Company_AddressInfo_State");
            oHiddenField.value = selectedText;

        }
        catch (e) {
            alert(e);
        }
    }

    function on_SignUp_NewUserFormData_Company_AddressInfo_CountryID_Changed() {
        try {
            var cboControl = document.getElementById("NewUserFormData_Company_AddressInfo_CountryID");
            var selectedText = cboControl[cboControl.selectedIndex].text;

            var oHiddenField = document.getElementById("NewUserFormData_Company_AddressInfo_Country");
            oHiddenField.value = selectedText;

            NewUserFormData_Get_Country_States_List(cboControl[cboControl.selectedIndex].value, '#NewUserFormData_Company_AddressInfo_StateID');
        }
        catch (e) {
            alert(e);
        }
    }

    function on_SignUp_NewUserFormData_AddressInfo_StateID_Changed() {
        try {
            var cboControl = document.getElementById("NewUserFormData_AddressInfo_StateID");
            var selectedText = cboControl[cboControl.selectedIndex].text;

            var oHiddenField = document.getElementById("NewUserFormData_AddressInfo_State");
            oHiddenField.value = selectedText;

        }
        catch (e) {
            alert(e);
        }
    }

    function on_SignUp_NewUserFormData_AddressInfo_CountryID_Changed() {
        try {
            var cboControl = document.getElementById("NewUserFormData_AddressInfo_CountryID");
            var selectedText = cboControl[cboControl.selectedIndex].text;

            var oHiddenField = document.getElementById("NewUserFormData_AddressInfo_Country");
            oHiddenField.value = selectedText;

            NewUserFormData_Get_Country_States_List(cboControl[cboControl.selectedIndex].value, '#NewUserFormData_AddressInfo_StateID');
        }
        catch (e) {
            alert(e);
        }
    }

    function on_SignUp_NewUserFormData_BillingInfo_AddressInfo_StateID_Changed() {
        try {
            var cboControl = document.getElementById("NewUserFormData_BillingInfo_AddressInfo_StateID");
            var selectedText = cboControl[cboControl.selectedIndex].text;

            var oHiddenField = document.getElementById("NewUserFormData_BillingInfo_AddressInfo_State");
            oHiddenField.value = selectedText;

        }
        catch (e) {
            alert(e);
        }
    }

    function on_SignUp_NewUserFormData_BillingInfo_AddressInfo_CountryID_Changed() {
        try {
            var cboControl = document.getElementById("NewUserFormData_BillingInfo_AddressInfo_CountryID");
            var selectedText = cboControl[cboControl.selectedIndex].text;

            var oHiddenField = document.getElementById("NewUserFormData_BillingInfo_AddressInfo_Country");
            oHiddenField.value = selectedText;

            NewUserFormData_Get_Country_States_List(cboControl[cboControl.selectedIndex].value, '#NewUserFormData_BillingInfo_AddressInfo_StateID');
        }
        catch (e) {
            alert(e);
        }
    }

    

    


    function NewUserFormData_Get_Country_States_List(_Id, _UIControlName)
    {
        try {
            var procemessage = "<option value='0'> Please wait...</option>";
            //$("#WebSitePageZoneContent_iContentZoneID").html(procemessage).show();
            $(_UIControlName).html(procemessage).show();
            var url = "@Url.Content("/RestService/Get_CountryStates/")";

            $.ajax({
                url: url,
                data: { _CountryID: _Id },
                cache: false,
                type: "POST",
                success: function (data) {

                    var oDataSet = data.DATA;

                    var markup = "<option value='0'> </option>";
                    for (var x = 0; x < oDataSet.length; x++) {
                        markup += "<option value=" + oDataSet[x].ID + ">" + oDataSet[x].sName + "</option>";
                    }
                    $(_UIControlName).html(markup).show();
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });

        }
        catch (e) {
            $(_UIControlName).html("error").show();
        }
    }



</script>


<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 toppadding">
            <p>&nbsp;</p>
        </div>
    </div>
    <div class="row rwHeight">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 text-lg-center text-md-center text-smg-center text-xs-center">
            <center><h3 class="" style="font-size:1.3em;">Open Source<strong>.NET C# Content Management Platform</strong> For Programmers, by Progrmmes</h3> </center>
        </div>
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 text-lg-center text-md-center text-smg-center text-xs-center">

                <h1 class="text-center text-bold">Sign up</h1>

                <h4>Ready to Create </h4>
                <p>Use <strong>Aries CMS</strong> to implement your projects with increased productivity and agility.</p>

                @if (ViewBag.bError == true)
                {
                    <div class="col-lg-8 col-md-8 offset-lg-2 offset-md-2 col-sm-12 col-xs-12 alert-danger">
                        <p>@Html.Raw(ViewBag.ErrorMessage)</p>
                    </div>
                }
            </div>
        </div>
        @if (ViewBag.bCompleted == false)
        {
            <div class="row">
                <div class="col-lg-8 col-md-8 offset-lg-2 offset-md-2 col-sm-12 col-xs-12">
                   

                    @using (Html.BeginForm("SubmitRegisterNewUser", "fr", FormMethod.Post))
                    {
                        @Html.ValidationSummary(true);

                        @Html.HiddenFor(model => model.NewUserFormData.OptingInMail)

                        @Html.HiddenFor(model => model.NewUserFormData.ErrorPageURL)
                        @Html.HiddenFor(model => model.NewUserFormData.SuccessPageURL)
                        @Html.HiddenFor(model => model.NewUserFormData.SourceForm)
                        @Html.HiddenFor(model => model.NewUserFormData.IsCMSForm)

                        @Html.HiddenFor(model => model.NewUserFormData.Sex)
                        @Html.HiddenFor(model => model.NewUserFormData.Company.AddressInfo.State)
                        @Html.HiddenFor(model => model.NewUserFormData.Company.AddressInfo.Country)
                        @Html.HiddenFor(model => model.NewUserFormData.Company.OptingInMail)
                        @Html.HiddenFor(model => model.NewUserFormData.Company.AvailableTimes)


                        @Html.HiddenFor(model => model.NewUserFormData.AddressInfo.State)
                        @Html.HiddenFor(model => model.NewUserFormData.AddressInfo.Country)
                        @Html.HiddenFor(model => model.NewUserFormData.BillingInfo.AddressInfo.State)
                        @Html.HiddenFor(model => model.NewUserFormData.BillingInfo.AddressInfo.Country)
                        @Html.HiddenFor(model => model.NewUserFormData.BillingInfo.FullName)
                        @Html.HiddenFor(model => model.NewUserFormData.BillingInfo.OptingInMail)

                        <fieldset>
                            <legend></legend>
                            <h3>ACCESS INFORMATION</h3>
                            <div class="form-group">
                                <label for="NewUserFormData_UserName">User name :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.UserName, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.UserName)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_FirstName">First name :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.FirstName, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.FirstName)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_MiddleName">MiddleName :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.MiddleName, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.MiddleName)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_LastName">Last name :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.LastName, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.LastName)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_Password">Password :</label>
                                @Html.PasswordFor(model => model.NewUserFormData.Password, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.Password)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_PasswordConfirm">Confirm Password :</label>
                                @Html.PasswordFor(model => model.NewUserFormData.PasswordConfirm, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.PasswordConfirm)</span>
                            </div>

                            <h3>CONTACT</h3>

                            <div class="form-group">
                                <label for="NewUserFormData_EMail">E-Mail :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.EMail, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.EMail)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_Phone">Phone :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.Phone, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.Phone)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_Fax">Fax :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.Fax, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.Fax)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_CellPhone">Cell Phone :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.CellPhone, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.CellPhone)</span>
                            </div>

                            <h3>PERSONAL INFORMATION</h3>

                            <div class="form-group">
                                <label for="NewUserFormData_DOBMonth">Date of Birth Month :</label>
                                @Html.DropDownListFor(model => model.NewUserFormData.DOBMonth, Model.NewUserFormData.DOBMonths, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.DOBMonth)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_DOBDay">Date of Birth Day :</label>
                                @Html.DropDownListFor(model => model.NewUserFormData.DOBDay, Model.NewUserFormData.DOBDays, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.DOBDay)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_DOBYear">Date of Birth Year :</label>
                                @Html.DropDownListFor(model => model.NewUserFormData.DOBYear, Model.NewUserFormData.DOBYears, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.DOBYear)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_SexID">Sex :</label>
                                @Html.DropDownListFor(model => model.NewUserFormData.SexID, Model.NewUserFormData.SexType, new { @Class = "form-control", @placeholder = "", @onchange = "javascript:on_SignUp_NewUserFormData_SexID_Changed();" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.SexID)</span>
                            </div>

                            <h3>PERSONAL ADDRESS</h3>

                            <div class="form-group">
                                <label for="NewUserFormData_AddressInfo_AddressLine1">Address :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.AddressInfo.AddressLine1, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.AddressInfo.AddressLine1)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_AddressInfo_AddressLine2">Address :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.AddressInfo.AddressLine2, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.AddressInfo.AddressLine2)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_AddressInfo_AddressLine3">Address :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.AddressInfo.AddressLine3, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.AddressInfo.AddressLine3)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_AddressInfo_City">City :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.AddressInfo.City, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.AddressInfo.City)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_AddressInfo_CountryID">Country :</label>
                                @Html.DropDownListFor(model => model.NewUserFormData.AddressInfo.CountryID, Model.CurrentUser.UserView.Countries, new { @Class = "form-control", @placeholder = "", @onchange = "javascript:on_SignUp_NewUserFormData_AddressInfo_CountryID_Changed();" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.AddressInfo.CountryID)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_AddressInfo_StateID">State :</label>
                                @Html.DropDownListFor(model => model.NewUserFormData.AddressInfo.StateID, Model.CurrentUser.UserView.States, new { @Class = "form-control", @placeholder = "", @onchange = "javascript:on_SignUp_NewUserFormData_AddressInfo_StateID_Changed();" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.AddressInfo.StateID)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_AddressInfo_PostalCode">Postal code :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.AddressInfo.PostalCode, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.AddressInfo.PostalCode)</span>
                            </div>


                            <h3>COMPANY INFO</h3>

                            <div class="form-group">
                                <label for="NewUserFormData_Company_CompanyName">Company Name :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.Company.CompanyName, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.Company.CompanyName)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_Company_CompanyPhone">Phone :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.Company.CompanyPhone, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.Company.CompanyPhone)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_Company_CompanyPhoneExt">Phone Ext. :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.Company.CompanyPhoneExt, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.Company.CompanyPhoneExt)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_Company_CompanyFax">Fax :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.Company.CompanyFax, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.Company.CompanyFax)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_Company_CompanyCellPhone">Cell phone :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.Company.CompanyCellPhone, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.Company.CompanyCellPhone)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_Company_CellPhone">Cell phone :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.Company.CellPhone, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.Company.CellPhone)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_Company_EMail">E-Mail :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.Company.EMail, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.Company.EMail)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_Company_Phone">Phone :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.Company.Phone, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.Company.Phone)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_Company_Fax">Fax :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.Company.Fax, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.Company.Fax)</span>
                            </div>
                            
                            <h3>COMPANY ADDRESS INFO</h3>

                            <div class="form-group">
                                <label for="NewUserFormData_Company_AddressInfo_AddressLine1">Company Address :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.Company.AddressInfo.AddressLine1, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.Company.AddressInfo.AddressLine1)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_Company_AddressInfo_AddressLine2">Address :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.Company.AddressInfo.AddressLine2, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.Company.AddressInfo.AddressLine2)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_Company_AddressInfo_AddressLine3">Address :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.Company.AddressInfo.AddressLine3, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.Company.AddressInfo.AddressLine3)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_Company_AddressInfo_City">City :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.Company.AddressInfo.City, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.Company.AddressInfo.City)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_Company_AddressInfo_CountryID">Country :</label>
                                @Html.DropDownListFor(model => model.NewUserFormData.Company.AddressInfo.CountryID, Model.CurrentUser.UserView.Countries, new { @Class = "form-control", @placeholder = "", @onchange = "javascript:on_SignUp_NewUserFormData_Company_AddressInfo_CountryID_Changed();" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.Company.AddressInfo.CountryID)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_Company_AddressInfo_StateID">State :</label>
                                @Html.DropDownListFor(model => model.NewUserFormData.Company.AddressInfo.StateID, Model.CurrentUser.UserView.States, new { @Class = "form-control", @placeholder = "", @onchange = "javascript:on_SignUp_NewUserFormData_Company_AddressInfo_StateID_Changed();" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.Company.AddressInfo.StateID)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_Company_AddressInfo_PostalCode">Postal code :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.Company.AddressInfo.PostalCode, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.Company.AddressInfo.PostalCode)</span>
                            </div>
                            
                            <h3>BILLING INFO</h3>

                            <div class="form-group">
                                <label for="NewUserFormData_BillingInfo_FirstName">First name :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.BillingInfo.FirstName, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.BillingInfo.FirstName)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_BillingInfo_LastName">Last name :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.BillingInfo.LastName, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.BillingInfo.LastName)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_BillingInfo_MiddleName">Middle name :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.BillingInfo.MiddleName, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.BillingInfo.MiddleName)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_BillingInfo_CreditCardNumber">Credit card number :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.BillingInfo.CreditCardNumber, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.BillingInfo.CreditCardNumber)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_BillingInfo_CreditCardExpDateMonth">Exp. Month :</label>
                                @Html.DropDownListFor(model => model.NewUserFormData.BillingInfo.CreditCardExpDateMonth, Model.NewUserFormData.BillingInfo.ExpMonth, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.BillingInfo.CreditCardExpDateMonth)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_BillingInfo_CreditCardExpDateYear">Exp. Year :</label>
                                @Html.DropDownListFor(model => model.NewUserFormData.BillingInfo.CreditCardExpDateYear, Model.NewUserFormData.BillingInfo.ExpYear, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.BillingInfo.CreditCardExpDateYear)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_BillingInfo_CreditCardCVV">Card CVV :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.BillingInfo.CreditCardCVV, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.BillingInfo.CreditCardCVV)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_BillingInfo_EMail">E-Mail :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.BillingInfo.EMail, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.BillingInfo.EMail)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_BillingInfo_Phone">Phone :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.BillingInfo.Phone, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.BillingInfo.Phone)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_BillingInfo_Fax">Fax :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.BillingInfo.Fax, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.BillingInfo.Fax)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_BillingInfo_CellPhone">Cell phone :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.BillingInfo.CellPhone, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.BillingInfo.CellPhone)</span>
                            </div>


                            <h3>BILLING ADDRESS INFO</h3>


                            <div class="form-group">
                                <label for="NewUserFormData_AddressInfo_AddressLine1">Address :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.BillingInfo.AddressInfo.AddressLine1, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.BillingInfo.AddressInfo.AddressLine1)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_AddressInfo_AddressLine2">Address :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.BillingInfo.AddressInfo.AddressLine2, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.BillingInfo.AddressInfo.AddressLine2)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_AddressInfo_AddressLine3">Address :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.BillingInfo.AddressInfo.AddressLine3, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.BillingInfo.AddressInfo.AddressLine3)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_AddressInfo_City">City :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.BillingInfo.AddressInfo.City, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.BillingInfo.AddressInfo.City)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_AddressInfo_CountryID">Country :</label>
                                @Html.DropDownListFor(model => model.NewUserFormData.BillingInfo.AddressInfo.CountryID, Model.CurrentUser.UserView.Countries, new { @Class = "form-control", @placeholder = "", @onchange = "javascript:on_SignUp_NewUserFormData_BillingInfo_AddressInfo_CountryID_Changed();" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.BillingInfo.AddressInfo.CountryID)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_AddressInfo_StateID">State :</label>
                                @Html.DropDownListFor(model => model.NewUserFormData.BillingInfo.AddressInfo.StateID, Model.CurrentUser.UserView.States, new { @Class = "form-control", @placeholder = "", @onchange = "javascript:on_SignUp_NewUserFormData_BillingInfo_AddressInfo_StateID_Changed();" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.BillingInfo.AddressInfo.StateID)</span>
                            </div>

                            <div class="form-group">
                                <label for="NewUserFormData_AddressInfo_PostalCode">Postal code :</label>
                                @Html.TextBoxFor(model => model.NewUserFormData.BillingInfo.AddressInfo.PostalCode, new { @Class = "form-control", @placeholder = "" })
                                <span class="alert-danger">@Html.ValidationMessageFor(model => model.NewUserFormData.BillingInfo.AddressInfo.PostalCode)</span>
                            </div>



                        </fieldset>
                        <div class="form-group">
                            <input type="submit" name="submit" value="REGISTER" class="btn btn-primary" />
                        </div>
                    }
                </div>
            </div>
        }
        else
        {

            <div class="col-lg-8 col-md-8 offset-lg-2 offset-md-2 col-sm-12 col-xs-12 alert-success">
                <h4>Thank you!  You are now sign up to use the cms.</h4>
            </div>
        }
    </div>
</div>
