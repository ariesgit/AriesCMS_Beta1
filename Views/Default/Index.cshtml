@model ACMSDBView.WebSitePageViewModel

@{
    if (ViewBag.MasterLayout != null)
    {
        Layout = ViewBag.MasterLayout;
    }
}
@section MetaTage{
    @Html.Raw(Model.MetaTags)
}

@section Classification{
    <meta name="classification" content="@Model.Classification" />
}

@section Description{
    <meta name="description" content="@Model.PageDescription" />
}

@section Keywords{
    <meta name="keywords" content="@Model.KeyWords" />
}



<script type="text/javascript">

    @{

        if (Model.User != null)
        {
            if (Model.User.User != null)
            {
                Html.Raw("var oUIK = '" + Model.User.User.sCurrentSession + "';");
                Html.Raw("var oUID = '" + Model.User.User.ID + "';");
                Html.Raw("var oUFN = '" + Model.User.User.sFName + "';");
                Html.Raw("var oULN = '" + Model.User.User.sLName + "';");
                Html.Raw("var oUK = '" + Model.User.User.sAccessKey + "';");
                Html.Raw("var oSN = '" + Model.User.User.sScreenName + "';");
                Html.Raw("var oAV = '" + Model.User.User.sAvitarImgURL + "';");

                Html.Raw("var oCountriesDataList = " + Json.Encode(Model.User.Countries) + ";" + "\n\r");
                Html.Raw("var oStateDataList = " + Json.Encode(Model.User.States) + ";" + "\n\r");

            }
            else
            {
                Html.Raw("var oUIK = '" + "" + "';");
                Html.Raw("var oUID = '" + "" + "';");
                Html.Raw("var oUFN = '" + "" + "';");
                Html.Raw("var oULN = '" + "" + "';");
                Html.Raw("var oUK = '" + "" + "';");
                Html.Raw("var oSN = '" + "" + "';");
                Html.Raw("var oAV = '" + "" + "';");
            }

        }
        else
        {
            Html.Raw("var oUIK = '" + "" + "';");
            Html.Raw("var oUID = '" + "" + "';");
            Html.Raw("var oUFN = '" + "" + "';");
            Html.Raw("var oULN = '" + "" + "';");
            Html.Raw("var oUK = '" + "" + "';");
            Html.Raw("var oSN = '" + "" + "';");
            Html.Raw("var oAV = '" + "" + "';");
        }
    }

</script>


@{
    if (Model != null)
    {
        if (Model.PageBody != null)
        {

            if (Model.CanEditPages && Model.AuthenticatedUser)
            {
                <div id="dseditbutton" class="row background_dark1" style="position:absolute; top:0px; left:0px; z-index:999999999999999999999999999999;">
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 text-lg-left text-md-left text-sm-left text-xs-left">
                        
                        <a href="javascript:EnableEditor();"><i class="fa fa-pencil-square-o fa-2x" aria-hidden="true"></i></a>
                    </div>
                </div>

            }
            


            foreach (CMSPartialPageBuilder.PageItems oPage in Model.PageContent)
            {
                if (oPage.IsPartialView == false)
                {
                    if (!String.IsNullOrEmpty(oPage.Conent))
                    {
                        @Html.Raw(oPage.Conent);
                    }
                }
                else if (!String.IsNullOrEmpty(oPage.PartialPageURI))
                {
                    string sView = oPage.PartialPageURI;

                    <div>
                        @{
                            if (Model.DataModelsPrimary != null)
                            {
                                Html.RenderPartial(sView.ToString(), Model.DataModelsPrimary);
                            }
                            else
                            {
                                Html.RenderPartial(sView.ToString(), oPage);
                            }
                        }
                    </div>
                 }
              }

         }
         else if (ViewBag.PartialPage != null)
         {
            if (!String.IsNullOrEmpty(ViewBag.PartialPage))
            {
                 string sView = ViewBag.PartialPage;

                 <div>
                   @{ Html.RenderPartial(sView.ToString()); }
                 </div>
            }
          }
     }

}




<script type="text/javascript">


        function RecordPageView(PageOrContent)
        {
            try {
                var oMydata = { "_Content": PageOrContent };
                $.ajax({
                    type: 'POST',
                    url: '@Url.Content("/RestService/PageView")',
                    data: oMydata,
                    dataType: "json",
                    error: function (jqXHR, textStatus, errorThrown) {
                        //alert("Error: " + errorThrown);
                    },
                    success: function (data) {
                        //alert("Success: " + data.LogIN);
                    }
                });
            }
            catch (e) {
                //alert(e);
            }
        }
        function RecordClickEvent(ClickValue) {
            try {

                var oMydata = { "_Content": ClickValue };
                $.ajax({
                    type: 'POST',
                    url: '@Url.Content("/RestService/ClicksEvent")',
                    data: oMydata,
                    dataType: "json",
                    error: function (jqXHR, textStatus, errorThrown) {
                        //alert("Error: " + errorThrown);
                    },
                    success: function (data) {
                        //alert("Success: " + data.LogIN);
                    }
                });
            }
            catch (e) {
                //alert(e);
            }
        }


    RecordPageView("@Model.WebSitePage.sPageName");

    try {

        CheckUserLoggedIn();
    }
    catch (e) {
    }
                </script>


